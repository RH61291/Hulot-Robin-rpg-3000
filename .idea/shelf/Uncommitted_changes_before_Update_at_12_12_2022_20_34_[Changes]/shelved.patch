Index: src/main/java/GUI/ControllerDungeon.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package GUI;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.MenuButton;\r\nimport javafx.scene.control.MenuItem;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.text.Text;\r\nimport jeu_console.Combattant.Combattant;\r\nimport jeu_console.Combattant.Enemy;\r\nimport jeu_console.Combattant.Hero.Hero;\r\nimport jeu_console.Combattant.Hero.cc_distance.Hunter;\r\nimport jeu_console.Combattant.Hero.cc_distance.Warrior;\r\nimport jeu_console.Combattant.Hero.cc_distance.sorcier.Healer;\r\nimport jeu_console.Combattant.Hero.cc_distance.sorcier.Mage;\r\nimport jeu_console.Item.arme_potion.Weapon;\r\nimport jeu_console.Item.arme_potion.consommable;\r\n\r\nimport java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.util.Random;\r\n\r\nimport static java.lang.Math.abs;\r\nimport static jeu_console.Combattant.Combattant.receiveDamage;\r\nimport static jeu_console.Combattant.Enemy.charge;\r\nimport static jeu_console.Combattant.Enemy.genBoss;\r\nimport static jeu_console.Combattant.Hero.cc_distance.Hunter.*;\r\nimport static jeu_console.Combattant.Hero.cc_distance.Warrior.*;\r\nimport static jeu_console.Combattant.Hero.cc_distance.sorcier.Healer.*;\r\nimport static jeu_console.Combattant.Hero.cc_distance.sorcier.Mage.*;\r\n\r\n\r\npublic class ControllerDungeon extends Core {\r\n    private Enemy[] liste_enemy;\r\n    private Hero[] liste_héros;\r\n    private Weapon[] liste_arme;\r\n    private int tourHero = 0;\r\n    private String[] liste_classe = lecture(6).split(\" \");\r\n    private String nombre_héros = lecture(2);\r\n    private int potion;\r\n    private int attaque;\r\n    private int cible;\r\n    @FXML\r\n    private Button but1;\r\n    @FXML\r\n    private Button rec;\r\n    @FXML\r\n    private Label textdégatrecu;\r\n    @FXML\r\n    private Text perdu;\r\n    private String repath = \"src/main/resources/picture/\";\r\n    private int combat = 1;\r\n    @FXML\r\n    private ImageView end;\r\n\r\n\r\n    @FXML\r\n    private ImageView fl1;\r\n    @FXML\r\n    private ImageView fl2;\r\n    @FXML\r\n    private ImageView fl3;\r\n    @FXML\r\n    private ImageView fl4;\r\n    @FXML\r\n    private ImageView fond;\r\n    @FXML\r\n    private ImageView imhe1; //image héros et ennemis\r\n    @FXML\r\n    private ImageView imhe2;\r\n    @FXML\r\n    private ImageView imhe3;\r\n    @FXML\r\n    private ImageView imhe4;\r\n    private String repath2 = \"src/main/resources/picture/dungeon1/\";\r\n    private String repath3 = \"src/main/resources/picture/dungeon2/\";\r\n    private String repath4 = \"src/main/resources/picture/dungeon3/\";\r\n    private String repath5 = \"src/main/resources/picture/dungeon4/\";\r\n    private String repath6 = \"src/main/resources/picture/finaldungeon/\";\r\n    @FXML\r\n    private Label he1;\r\n    @FXML\r\n    private Label he2;\r\n    @FXML\r\n    private Label he3;\r\n    @FXML\r\n    private Label he4;\r\n    @FXML\r\n    private Label en1;  //label héros et ennemis\r\n    @FXML\r\n    private Label en2;\r\n    @FXML\r\n    private Label en3;\r\n    @FXML\r\n    private Label en4;\r\n    @FXML\r\n    private ImageView ien1;\r\n    @FXML\r\n    private ImageView ien2;\r\n    @FXML\r\n    private ImageView ien3;\r\n    @FXML\r\n    private ImageView ien4;\r\n    @FXML\r\n    private MenuButton menu;\r\n    //----------------------------------------------------------------------------\r\n    @FXML\r\n    private MenuItem boeuf;\r\n    @FXML\r\n    private MenuItem repas_fait_maison;\r\n    @FXML\r\n    private MenuItem pasNour;\r\n    //----------------------------------------------------------------------------\r\n    @FXML\r\n    private MenuItem parmure;\r\n    @FXML\r\n    private MenuItem paspot;\r\n    @FXML\r\n    private MenuItem pdégat;\r\n    @FXML\r\n    private MenuItem pmana;\r\n    @FXML\r\n    private MenuItem pvie;\r\n    //----------------------------------------------------------------------------\r\n    @FXML\r\n    private MenuItem atk1;\r\n    @FXML\r\n    private MenuItem atk2;\r\n    @FXML\r\n    private MenuItem atk3;\r\n    @FXML\r\n    private MenuItem atk4;\r\n    @FXML\r\n    private MenuItem atk5;\r\n    @FXML\r\n    private MenuItem atk6;\r\n    @FXML\r\n    private MenuItem atk7;\r\n    @FXML\r\n    private MenuItem atk8;\r\n    @FXML\r\n    private MenuItem atk9;\r\n    @FXML\r\n    private MenuItem atk10;\r\n    @FXML\r\n    private MenuItem atk11;\r\n    @FXML\r\n    private MenuItem pasBalle;\r\n    @FXML\r\n    private MenuItem pasMana;\r\n    @FXML\r\n    private MenuItem Ci10;\r\n    @FXML\r\n    private MenuItem Ci11;\r\n    @FXML\r\n    private MenuItem Ci12;\r\n    @FXML\r\n    private MenuItem Ci13;\r\n    @FXML\r\n    private MenuItem Ci14;\r\n    @FXML\r\n    private MenuItem Ci15;\r\n    @FXML\r\n    private MenuItem Ci16;\r\n    @FXML\r\n    private MenuItem Ci17;\r\n    @FXML\r\n    private MenuItem Ci20;\r\n    @FXML\r\n    private MenuItem Ci21;\r\n    @FXML\r\n    private MenuItem Ci22;\r\n    @FXML\r\n    private MenuItem Ci23;\r\n    @FXML\r\n    private MenuItem Ci24;\r\n    @FXML\r\n    private MenuItem Ci25;\r\n    @FXML\r\n    private MenuItem Ci26;\r\n    @FXML\r\n    private MenuItem Ci27;\r\n    @FXML\r\n    private MenuItem Ci30;\r\n    @FXML\r\n    private MenuItem Ci31;\r\n    @FXML\r\n    private MenuItem Ci32;\r\n    @FXML\r\n    private MenuItem Ci33;\r\n    @FXML\r\n    private MenuItem Ci34;\r\n    @FXML\r\n    private MenuItem Ci35;\r\n    @FXML\r\n    private MenuItem Ci36;\r\n    @FXML\r\n    private MenuItem Ci37;\r\n    @FXML\r\n    private MenuItem Ci40;\r\n    @FXML\r\n    private MenuItem Ci41;\r\n    @FXML\r\n    private MenuItem Ci42;\r\n    @FXML\r\n    private MenuItem Ci43;\r\n    @FXML\r\n    private MenuItem Ci44;\r\n    @FXML\r\n    private MenuItem Ci45;\r\n    @FXML\r\n    private MenuItem Ci46;\r\n    @FXML\r\n    private MenuItem Ci47;\r\n    @FXML\r\n    private MenuItem hero1;\r\n    @FXML\r\n    private MenuItem hero11;\r\n    @FXML\r\n    private MenuItem hero2;\r\n    @FXML\r\n    private MenuItem hero21;\r\n    @FXML\r\n    private MenuItem hero3;\r\n    @FXML\r\n    private MenuItem hero31;\r\n    @FXML\r\n    private MenuItem hero4;\r\n    @FXML\r\n    private MenuItem hero41;\r\n    @FXML\r\n    private MenuItem Actions;\r\n    @FXML\r\n    private Label textdégat;\r\n    //----------------------------------------------------------------------------\r\n    @FXML\r\n    private Button sortir;\r\n    @FXML\r\n    private Button recarme;\r\n    @FXML\r\n    private Button recdef;\r\n    @FXML\r\n    private Button recchance;\r\n    @FXML\r\n    private MenuButton recpotion;\r\n    @FXML\r\n    private Button recnour;\r\n    @FXML\r\n    private Button recmana;\r\n    @FXML\r\n    private Label reclabel;\r\n\r\n\r\n    public ControllerDungeon() throws FileNotFoundException {\r\n    }\r\n\r\n    public void affFleche(int n) throws FileNotFoundException { //pour afficher le curseur sous le héros\r\n        if (n == 0) { //si n, la position du héros\r\n            fl1.setVisible(true); //affiche le curseur correspondant et cache les autres\r\n            fl2.setVisible(false);\r\n            fl3.setVisible(false);\r\n            fl4.setVisible(false);\r\n        } else if (n == 1) {\r\n            fl1.setVisible(false);\r\n            fl2.setVisible(true);\r\n            fl3.setVisible(false);\r\n            fl4.setVisible(false);\r\n        } else if (n == 2) {\r\n            fl1.setVisible(false);\r\n            fl2.setVisible(false);\r\n            fl3.setVisible(true);\r\n            fl4.setVisible(false);\r\n        } else {\r\n            fl1.setVisible(false);\r\n            fl2.setVisible(false);\r\n            fl3.setVisible(false);\r\n            fl4.setVisible(true);\r\n        }\r\n    }\r\n\r\n    public void affImage(String classe, int n, boolean en_vie) throws FileNotFoundException { //affiche l'image des héros à la bonne place et varainte si ils sont mort\r\n        if (classe.equals(\"healer\")) { //si healer\r\n            if (n == 0) {// si 1er place\r\n                String path = \"\";\r\n                if (en_vie == true) {//si en vie\r\n                    path = repath + \"Plague_Doctor.png\"; //complète le path de l'image\r\n                } else {\r\n                    path = repath + \"Plague_Doctorgris.png\";\r\n                }\r\n                imhe1.setVisible(true);\r\n                InputStream stream = new FileInputStream(path); //affiche l'image\r\n                Image image = new Image(stream);\r\n                imhe1.setImage(image);\r\n            } else if (n == 1) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath + \"Plague_Doctor.png\";\r\n                } else {\r\n                    path = repath + \"Plague_Doctorgris.png\";\r\n                }\r\n                imhe2.setVisible(true);\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                imhe2.setImage(image);\r\n            } else if (n == 2) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath + \"Plague_Doctor.png\";\r\n                } else {\r\n                    path = repath + \"Plague_Doctorgris.png\";\r\n                }\r\n                imhe3.setVisible(true);\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                imhe3.setImage(image);\r\n            } else {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath + \"Plague_Doctor.png\";\r\n                } else {\r\n                    path = repath + \"Plague_Doctorgris.png\";\r\n                }\r\n                imhe4.setVisible(true);\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                imhe4.setImage(image);\r\n            }\r\n        }\r\n        if (classe.equals(\"warrior\")) {\r\n            if (n == 0) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath + \"BountyHunter.png\";\r\n                } else {\r\n                    path = repath + \"BountyHuntergrsi.png\";\r\n                }\r\n                imhe1.setVisible(true);\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                imhe1.setImage(image);\r\n            } else if (n == 1) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath + \"BountyHunter.png\";\r\n                } else {\r\n                    path = repath + \"BountyHuntergrsi.png\";\r\n                }\r\n                imhe2.setVisible(true);\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                imhe2.setImage(image);\r\n            } else if (n == 2) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath + \"BountyHunter.png\";\r\n                } else {\r\n                    path = repath + \"BountyHuntergrsi.png\";\r\n                }\r\n                imhe3.setVisible(true);\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                imhe3.setImage(image);\r\n            } else {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath + \"BountyHunter.png\";\r\n                } else {\r\n                    path = repath + \"BountyHuntergrsi.png\";\r\n                }\r\n                imhe4.setVisible(true);\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                imhe4.setImage(image);\r\n            }\r\n        }\r\n        if (classe.equals(\"hunter\")) {\r\n            if (n == 0) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath + \"Hwyman.png\";\r\n                } else {\r\n                    path = repath + \"Hwymangris.png\";\r\n                }\r\n                imhe1.setVisible(true);\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                imhe1.setImage(image);\r\n            } else if (n == 1) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath + \"Hwyman.png\";\r\n                } else {\r\n                    path = repath + \"Hwymangris.png\";\r\n                }\r\n                imhe2.setVisible(true);\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                imhe2.setImage(image);\r\n            } else if (n == 2) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath + \"Hwyman.png\";\r\n                } else {\r\n                    path = repath + \"Hwymangris.png\";\r\n                }\r\n                imhe3.setVisible(true);\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                imhe3.setImage(image);\r\n            } else {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath + \"Hwyman.png\";\r\n                } else {\r\n                    path = repath + \"Hwymangris.png\";\r\n                }\r\n                imhe4.setVisible(true);\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                imhe4.setImage(image);\r\n            }\r\n        }\r\n        if (classe.equals(\"mage\")) {\r\n            if (n == 0) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath + \"Occultist.png\";\r\n                } else {\r\n                    path = repath + \"Occultistgris.png\";\r\n                }\r\n                imhe1.setVisible(true);\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                imhe1.setImage(image);\r\n            } else if (n == 1) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath + \"Occultist.png\";\r\n                } else {\r\n                    path = repath + \"Occultistgris.png\";\r\n                }\r\n                imhe2.setVisible(true);\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                imhe2.setImage(image);\r\n            } else if (n == 2) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath + \"Occultist.png\";\r\n                } else {\r\n                    path = repath + \"Occultistgris.png\";\r\n                }\r\n                imhe3.setVisible(true);\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                imhe3.setImage(image);\r\n            } else {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath + \"Occultist.png\";\r\n                } else {\r\n                    path = repath + \"Occultistgris.png\";\r\n                }\r\n                imhe4.setVisible(true);\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                imhe4.setImage(image);\r\n            }\r\n        }\r\n    }\r\n\r\n    public void affImageEN(int n, boolean en_vie, int combat) throws FileNotFoundException {\r\n        if (combat == 1) { //dépent du combat, affichige l'image du bon monstre au bon endroit\r\n            if (n == 0) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath2 + \"Bone_Arbalist.png\";\r\n                } else {\r\n                    path = repath2 + \"Bone_Arbalistgris.png\";\r\n                }\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                ien1.setImage(image);\r\n            }\r\n            if (n == 1) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath2 + \"Bone_Courtier.png\";\r\n                } else {\r\n                    path = repath2 + \"Bone_Courtiergris.png\";\r\n                }\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                ien2.setImage(image);\r\n            }\r\n            if (n == 2) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath2 + \"Bone_Defender.png\";\r\n                } else {\r\n                    path = repath2 + \"Bone_Defendergris.png\";\r\n                }\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                ien3.setImage(image);\r\n            }\r\n            if (n == 3) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath2 + \"Bone_Solider.png\";\r\n                } else {\r\n                    path = repath2 + \"Bone_Solidergris.png\";\r\n                }\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                ien4.setImage(image);\r\n            }\r\n        } else if (combat == 2) {\r\n            if (n == 0) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath3 + \"Brigand_Hunter.png\";\r\n                } else {\r\n                    path = repath3 + \"Brigand_Huntergris.png\";\r\n                }\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                ien1.setImage(image);\r\n            }\r\n            if (n == 1) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath3 + \"Brigand_Raider.png\";\r\n                } else {\r\n                    path = repath3 + \"Brigand_Raidergris.png\";\r\n                }\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                ien2.setImage(image);\r\n            }\r\n            if (n == 2) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath3 + \"Cutthroat_Defend.png\";\r\n                } else {\r\n                    path = repath3 + \"Cutthroat_Defendgris.png\";\r\n                }\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                ien3.setImage(image);\r\n            }\r\n            if (n == 3) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath3 + \"Vvulf.png\";\r\n                } else {\r\n                    path = repath3 + \"Vvulfgris.png\";\r\n                }\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                ien4.setImage(image);\r\n            }\r\n        } else if (combat == 3) {\r\n            if (n == 0) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath4 + \"Spitter.png\";\r\n                } else {\r\n                    path = repath4 + \"Spittergris.png\";\r\n                }\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                ien1.setImage(image);\r\n            }\r\n            if (n == 1) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath4 + \"Cultist.png\";\r\n                } else {\r\n                    path = repath4 + \"Cultistgris.png\";\r\n                }\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                ien2.setImage(image);\r\n            }\r\n            if (n == 2) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath4 + \"Gargoyle.png\";\r\n                } else {\r\n                    path = repath4 + \"Gargoylegris.png\";\r\n                }\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                ien3.setImage(image);\r\n            }\r\n            if (n == 3) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath4 + \"Ghoul.png\";\r\n                } else {\r\n                    path = repath4 + \"Ghoulgris.png\";\r\n                }\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                ien4.setImage(image);\r\n            }\r\n        } else if (combat == 4) {\r\n            if (n == 0) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath5 + \"Swine_Drummer.png\";\r\n                } else {\r\n                    path = repath5 + \"Swine_Drummergris.png\";\r\n                }\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                ien1.setImage(image);\r\n            }\r\n            if (n == 1) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath5 + \"Swine_Slasher.png\";\r\n                } else {\r\n                    path = repath5 + \"Swine_Slashergris.png\";\r\n                }\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                ien2.setImage(image);\r\n            }\r\n            if (n == 2) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath5 + \"Swine_Skiver.png\";\r\n                } else {\r\n                    path = repath5 + \"Swine_Skivergris.png\";\r\n                }\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                ien3.setImage(image);\r\n            }\r\n            if (n == 3) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath5 + \"Swine_Chopper.png\";\r\n                } else {\r\n                    path = repath5 + \"Swine_Choppergris.png\";\r\n                }\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                ien4.setImage(image);\r\n            }\r\n        } else if (combat == 5) {\r\n            if (n == 0) {\r\n                String path = \"\";\r\n                if (en_vie == true) {\r\n                    path = repath6 + \"HoD.png\";\r\n                } else {\r\n                    path = repath6 + \"HoD.png\";\r\n                }\r\n                InputStream stream = new FileInputStream(path);\r\n                Image image = new Image(stream);\r\n                ien1.setImage(image);\r\n            }\r\n        }\r\n    }\r\n\r\n    public void affHero(String classe, int n, boolean vie) throws FileNotFoundException {//affiche le statut et image actualisé du héros à la place n\r\n        if (n == 0) {\r\n            if (classe.equals(\"healer\")) {\r\n                writeData(\"healer \" + \"\\n\" + liste_héros[n].getCurrent_health() + \"pv\\n\" + liste_héros[n].getCurrent_def() + \" def\\n\" + (liste_héros[n].getSoin_base() + liste_arme[n].getBonus_soin()) + \" soin\\n\" + liste_héros[n].getCurrent_magie() + \" magie\", 100, 300, he1);\r\n                if (vie == true) {\r\n                    affImage(classe, n, true);\r\n                } else {\r\n                    affImage(classe, n, false);\r\n                }\r\n            } else if (classe.equals(\"mage\")) {\r\n                writeData(\"mage \" + \"\\n\" + liste_héros[n].getCurrent_health() + \"pv\\n\" + liste_héros[n].getCurrent_def() + \" def\\n\" + (liste_héros[n].getDegat_base() + liste_arme[n].getBonus_degat()) + \" dégat non élémentaire\\n\" + liste_héros[n].getCurrent_magie() + \" magie\", 100, 300, he1);\r\n                if (vie == true) {\r\n                    affImage(classe, n, true);\r\n                } else {\r\n                    affImage(classe, n, false);\r\n                }\r\n            } else if (classe.equals(\"hunter\")) {\r\n                writeData(\"hunter \" + \"\\n\" + liste_héros[n].getCurrent_health() + \"pv\\n\" + liste_héros[n].getCurrent_def() + \" def\\n\" + (liste_héros[n].getDegat_base() + liste_arme[n].getBonus_degat()) + \" dégat non élémentaire\\n\" + \" nombre de balles \" + liste_héros[n].getNbfleche() +\r\n                        \"\\ntype de dégat \" + liste_arme[n].getType() + \" avec \" + liste_arme[n].getType_degat() + \" dégat élémentaire\", 100, 300, he1);\r\n                if (vie == true) {\r\n                    affImage(classe, n, true);\r\n                } else {\r\n                    affImage(classe, n, false);\r\n                }\r\n            } else {\r\n                writeData(\"warrior \" + \"\\n\" + liste_héros[n].getCurrent_health() + \"pv\\n\" + liste_héros[n].getCurrent_def() + \" def\\n\" + (liste_héros[n].getDegat_base() + liste_arme[n].getBonus_degat()) + \" dégat non élémentaire\\n\" + \" type de dégat \" + liste_arme[n].getType() + \" avec \" + liste_arme[n].getType_degat() + \" dégat élémentaire\", 100, 300, he1);\r\n                if (vie == true) {\r\n                    affImage(classe, n, true);\r\n                } else {\r\n                    affImage(classe, n, false);\r\n                }\r\n            }\r\n        } else if (n == 1) {\r\n            if (classe.equals(\"healer\")) {\r\n                writeData(\"healer \" + \"\\n\" + liste_héros[n].getCurrent_health() + \"pv\\n\" + liste_héros[n].getCurrent_def() + \" def\\n\" + (liste_héros[n].getSoin_base() + liste_arme[n].getBonus_soin()) + \" soin\\n\" + liste_héros[n].getCurrent_magie() + \" magie\", 400, 300, he2);\r\n                if (vie == true) {\r\n                    affImage(classe, n, true);\r\n                } else {\r\n                    affImage(classe, n, false);\r\n                }\r\n            } else if (classe.equals(\"mage\")) {\r\n                writeData(\"mage \" + \"\\n\" + liste_héros[n].getCurrent_health() + \"pv\\n\" + liste_héros[n].getCurrent_def() + \" def\\n\" + (liste_héros[n].getDegat_base() + liste_arme[n].getBonus_degat()) + \" dégat non élémentaire\\n\" + liste_héros[n].getCurrent_magie() + \" magie\", 400, 300, he2);\r\n                if (vie == true) {\r\n                    affImage(classe, n, true);\r\n                } else {\r\n                    affImage(classe, n, false);\r\n                }\r\n            } else if (classe.equals(\"hunter\")) {\r\n                writeData(\"hunter \" + \"\\n\" + liste_héros[n].getCurrent_health() + \"pv\\n\" + liste_héros[n].getCurrent_def() + \" def\\n\" + (liste_héros[n].getDegat_base() + liste_arme[n].getBonus_degat()) + \" dégat non élémentaire\\n\" + \" nombre de balles \" + liste_héros[n].getNbfleche() +\r\n                        \"\\ntype de dégat \" + liste_arme[n].getType() + \" avec \" + liste_arme[n].getType_degat() + \" dégat élémentaire\", 400, 300, he2);\r\n                if (vie == true) {\r\n                    affImage(classe, n, true);\r\n                } else {\r\n                    affImage(classe, n, false);\r\n                }\r\n            } else {\r\n                writeData(\"warrior \" + \"\\n\" + liste_héros[n].getCurrent_health() + \"pv\\n\" + liste_héros[n].getCurrent_def() + \" def\\n\" + (liste_héros[n].getDegat_base() + liste_arme[n].getBonus_degat()) + \" dégat non élémentaire\\n\" + \" type de dégat \" + liste_arme[n].getType() + \" avec \" + liste_arme[n].getType_degat() + \" dégat élémentaire\", 400, 300, he2);\r\n                if (vie == true) {\r\n                    affImage(classe, n, true);\r\n                } else {\r\n                    affImage(classe, n, false);\r\n                }\r\n            }\r\n        } else if (n == 2) {\r\n            if (classe.equals(\"healer\")) {\r\n                writeData(\"healer \" + \"\\n\" + liste_héros[n].getCurrent_health() + \"pv\\n\" + liste_héros[n].getCurrent_def() + \" def\\n\" + (liste_héros[n].getSoin_base() + liste_arme[n].getBonus_soin()) + \" soin\\n\" + liste_héros[n].getCurrent_magie() + \" magie\", 700, 300, he3);\r\n                if (vie == true) {\r\n                    affImage(classe, n, true);\r\n                } else {\r\n                    affImage(classe, n, false);\r\n                }\r\n            } else if (classe.equals(\"mage\")) {\r\n                writeData(\"mage \" + \"\\n\" + liste_héros[n].getCurrent_health() + \"pv\\n\" + liste_héros[n].getCurrent_def() + \" def\\n\" + (liste_héros[n].getDegat_base() + liste_arme[n].getBonus_degat()) + \" dégat non élémentaire\\n\" + liste_héros[n].getCurrent_magie() + \" magie\", 700, 300, he3);\r\n                if (vie == true) {\r\n                    affImage(classe, n, true);\r\n                } else {\r\n                    affImage(classe, n, false);\r\n                }\r\n            } else if (classe.equals(\"hunter\")) {\r\n                writeData(\"hunter \" + \"\\n\" + liste_héros[n].getCurrent_health() + \"pv\\n\" + liste_héros[n].getCurrent_def() + \" def\\n\" + (liste_héros[n].getDegat_base() + liste_arme[n].getBonus_degat()) + \" dégat non élémentaire\\n\" + \"nombre de balles \" + liste_héros[n].getNbfleche() +\r\n                        \"\\ntype de dégat \" + liste_arme[n].getType() + \" avec \" + liste_arme[n].getType_degat() + \" dégat élémentaire\", 700, 300, he3);\r\n                if (vie == true) {\r\n                    affImage(classe, n, true);\r\n                } else {\r\n                    affImage(classe, n, false);\r\n                }\r\n            } else {\r\n                writeData(\"warrior \" + \"\\n\" + liste_héros[n].getCurrent_health() + \"pv\\n\" + liste_héros[n].getCurrent_def() + \" def\\n\" + (liste_héros[n].getDegat_base() + liste_arme[n].getBonus_degat()) + \" dégat non élémentaire\\n\" + \" type de dégat \" + liste_arme[n].getType() + \" avec \" + liste_arme[n].getType_degat() + \" dégat élémentaire\", 700, 300, he3);\r\n                if (vie == true) {\r\n                    affImage(classe, n, true);\r\n                } else {\r\n                    affImage(classe, n, false);\r\n                }\r\n            }\r\n        } else {\r\n            if (classe.equals(\"healer\")) {\r\n                writeData(\"healer \" + \"\\n\" + liste_héros[n].getCurrent_health() + \"pv\\n\" + liste_héros[n].getCurrent_def() + \" def\\n\" + (liste_héros[n].getSoin_base() + liste_arme[n].getBonus_soin()) + \" soin\\n\" + liste_héros[n].getCurrent_magie() + \" magie\", 1000, 300, he4);\r\n                if (vie == true) {\r\n                    affImage(classe, n, true);\r\n                } else {\r\n                    affImage(classe, n, false);\r\n                }\r\n            } else if (classe.equals(\"mage\")) {\r\n                writeData(\"mage \" + \"\\n\" + liste_héros[n].getCurrent_health() + \"pv\\n\" + liste_héros[n].getCurrent_def() + \" def\\n\" + (liste_héros[n].getDegat_base() + liste_arme[n].getBonus_degat()) + \" dégat non élémentaire\\n\" + liste_héros[n].getCurrent_magie() + \" magie\", 1000, 300, he4);\r\n                if (vie == true) {\r\n                    affImage(classe, n, true);\r\n                } else {\r\n                    affImage(classe, n, false);\r\n                }\r\n            } else if (classe.equals(\"hunter\")) {\r\n                writeData(\"hunter \" + \"\\n\" + liste_héros[n].getCurrent_health() + \"pv\\n\" + liste_héros[n].getCurrent_def() + \" def\\n\" + (liste_héros[n].getDegat_base() + liste_arme[n].getBonus_degat()) + \" dégat non élémentaire\\n\" + \" nombre de balles \" + liste_héros[n].getNbfleche() +\r\n                        \"\\ntype de dégat \" + liste_arme[n].getType() + \" avec \" + liste_arme[n].getType_degat() + \" dégat élémentaire\", 1000, 300, he4);\r\n                if (vie == true) {\r\n                    affImage(classe, n, true);\r\n                } else {\r\n                    affImage(classe, n, false);\r\n                }\r\n            } else {\r\n                writeData(\"warrior \" + \"\\n\" + liste_héros[n].getCurrent_health() + \"pv\\n\" + liste_héros[n].getCurrent_def() + \" def\\n\" + (liste_héros[n].getDegat_base() + liste_arme[n].getBonus_degat()) + \" dégat non élémentaire\\n\" + \" type de dégat \" + liste_arme[n].getType() + \" avec \" + liste_arme[n].getType_degat() + \" dégat élémentaire\", 1000, 300, he4);\r\n                if (vie == true) {\r\n                    affImage(classe, n, true);\r\n                } else {\r\n                    affImage(classe, n, false);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    @FXML\r\n    public void aff(MouseEvent event) throws FileNotFoundException {\r\n        if (combat == 1) {\r\n            String nombre_héros = lecture(2);\r\n            if (nombre_héros.equals(\"1\")) {\r\n                en1.setVisible(true); //affiche les ennemi, héros et label correspondant au nombre d'ennemi\r\n                he1.setVisible(true);\r\n                ien1.setVisible(true);\r\n\r\n                liste_enemy = new Enemy[1]; //initialise les liste\r\n                liste_héros = new Hero[1];\r\n                liste_arme = new Weapon[1];\r\n\r\n                for (int i = 0; i < liste_enemy.length; i++) {\r\n                    liste_enemy[i] = Enemy.genEnemy(combat); //génère les ennemis avec niveau correspondant\r\n\r\n                    if (liste_classe[i].equals(\"healer\")) {\r\n                        liste_héros[i] = gHealer(liste_héros, liste_arme, i);\r\n                        affHero(\"healer\", i, true);\r\n                    } else if (liste_classe[i].equals(\"mage\")) {\r\n                        liste_héros[i] = gMage(liste_héros, liste_arme, i);\r\n                        affHero(\"mage\", i, true);\r\n                    } else if (liste_classe[i].equals(\"hunter\")) {\r\n                        liste_héros[i] = gHunter(liste_héros, liste_arme, i);\r\n                        affHero(\"hunter\", i, true);\r\n                    } else {\r\n                        liste_héros[i] = gWarrior(liste_héros, liste_arme, i);\r\n                        affHero(\"warrior\", i, true);\r\n                    }\r\n                }\r\n\r\n                writeData(\"Bone Arbalist \" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n                affImageEN(0, true, combat);\r\n            }\r\n\r\n            if (nombre_héros.equals(\"2\")) {\r\n                en1.setVisible(true);\r\n                en2.setVisible(true);\r\n                he1.setVisible(true);\r\n                he2.setVisible(true);\r\n                ien1.setVisible(true);\r\n                ien2.setVisible(true);\r\n\r\n                liste_enemy = new Enemy[2];\r\n                liste_héros = new Hero[2];\r\n                liste_arme = new Weapon[2];\r\n\r\n                for (int i = 0; i < liste_enemy.length; i++) {\r\n                    liste_enemy[i] = Enemy.genEnemy(combat);\r\n                    if (liste_classe[i].equals(\"healer\")) {\r\n                        liste_héros[i] = gHealer(liste_héros, liste_arme, i);\r\n                        affHero(\"healer\", i, true);\r\n                    } else if (liste_classe[i].equals(\"mage\")) {\r\n                        liste_héros[i] = gMage(liste_héros, liste_arme, i);\r\n                        affHero(\"mage\", i, true);\r\n                    } else if (liste_classe[i].equals(\"hunter\")) {\r\n                        liste_héros[i] = gHunter(liste_héros, liste_arme, i);\r\n                        affHero(\"hunter\", i, true);\r\n                    } else {\r\n                        liste_héros[i] = gWarrior(liste_héros, liste_arme, i);\r\n                        affHero(\"warrior\", i, true);\r\n                    }\r\n\r\n                }\r\n\r\n                writeData(\"Bone Arbalist\" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n                writeData(\"Bone Courtier\" + \"\\n\" + liste_enemy[1].getCurrent_health() + \"pv\\n\" + liste_enemy[1].getCurrent_def() + \" def\\nde type \" + liste_enemy[1].getType(), 400, 50, en2);\r\n                affImageEN(0, true, combat);\r\n                affImageEN(1, true, combat);\r\n            }\r\n\r\n            if (nombre_héros.equals(\"3\")) {\r\n                en1.setVisible(true);\r\n                en2.setVisible(true);\r\n                en3.setVisible(true);\r\n                he1.setVisible(true);\r\n                he2.setVisible(true);\r\n                he3.setVisible(true);\r\n                ien1.setVisible(true);\r\n                ien2.setVisible(true);\r\n                ien3.setVisible(true);\r\n\r\n                liste_enemy = new Enemy[3];\r\n                liste_héros = new Hero[3];\r\n                liste_arme = new Weapon[3];\r\n\r\n                for (int i = 0; i < liste_enemy.length; i++) {\r\n                    liste_enemy[i] = Enemy.genEnemy(combat);\r\n                    if (liste_classe[i].equals(\"healer\")) {\r\n                        liste_héros[i] = gHealer(liste_héros, liste_arme, i);\r\n                        affHero(\"healer\", i, true);\r\n                    } else if (liste_classe[i].equals(\"mage\")) {\r\n                        liste_héros[i] = gMage(liste_héros, liste_arme, i);\r\n                        affHero(\"mage\", i, true);\r\n                    } else if (liste_classe[i].equals(\"hunter\")) {\r\n                        liste_héros[i] = gHunter(liste_héros, liste_arme, i);\r\n                        affHero(\"hunter\", i, true);\r\n                    } else {\r\n                        liste_héros[i] = gWarrior(liste_héros, liste_arme, i);\r\n                        affHero(\"warrior\", i, true);\r\n                    }\r\n                }\r\n                writeData(\"Bone Arbalist\" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n                writeData(\"Bone Courtier\" + \"\\n\" + liste_enemy[1].getCurrent_health() + \"pv\\n\" + liste_enemy[1].getCurrent_def() + \" def\\nde type \" + liste_enemy[1].getType(), 400, 50, en2);\r\n                writeData(\"Bone Defender\" + \"\\n\" + liste_enemy[2].getCurrent_health() + \"pv\\n\" + liste_enemy[2].getCurrent_def() + \" def\\nde type \" + liste_enemy[2].getType(), 700, 50, en3);\r\n                affImageEN(0, true, combat);\r\n                affImageEN(1, true, combat);\r\n                affImageEN(2, true, combat);\r\n            }\r\n\r\n            if (nombre_héros.equals(\"4\")) {\r\n                en1.setVisible(true);\r\n                en2.setVisible(true);\r\n                en3.setVisible(true);\r\n                en4.setVisible(true);\r\n                he1.setVisible(true);\r\n                he2.setVisible(true);\r\n                he3.setVisible(true);\r\n                he4.setVisible(true);\r\n                ien1.setVisible(true);\r\n                ien2.setVisible(true);\r\n                ien3.setVisible(true);\r\n                ien4.setVisible(true);\r\n\r\n\r\n                liste_enemy = new Enemy[4];\r\n                liste_héros = new Hero[4];\r\n                liste_arme = new Weapon[4];\r\n\r\n                for (int i = 0; i < liste_enemy.length; i++) {\r\n                    liste_enemy[i] = Enemy.genEnemy(combat);\r\n                    if (liste_classe[i].equals(\"healer\")) {\r\n                        liste_héros[i] = gHealer(liste_héros, liste_arme, i);\r\n                        affHero(\"healer\", i, true);\r\n                    } else if (liste_classe[i].equals(\"mage\")) {\r\n                        liste_héros[i] = gMage(liste_héros, liste_arme, i);\r\n                        affHero(\"mage\", i, true);\r\n                    } else if (liste_classe[i].equals(\"hunter\")) {\r\n                        liste_héros[i] = gHunter(liste_héros, liste_arme, i);\r\n                        affHero(\"hunter\", i, true);\r\n                    } else {\r\n                        liste_héros[i] = gWarrior(liste_héros, liste_arme, i);\r\n                        affHero(\"warrior\", i, true);\r\n                    }\r\n                }\r\n                writeData(\"Bone Arbalist\" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n                writeData(\"Bone Courtier\" + \"\\n\" + liste_enemy[1].getCurrent_health() + \"pv\\n\" + liste_enemy[1].getCurrent_def() + \" def\\nde type \" + liste_enemy[1].getType(), 400, 50, en2);\r\n                writeData(\"Bone Defender\" + \"\\n\" + liste_enemy[2].getCurrent_health() + \"pv\\n\" + liste_enemy[2].getCurrent_def() + \" def\\nde type \" + liste_enemy[2].getType(), 700, 50, en3);\r\n                writeData(\"Bone Soldier\" + \"\\n\" + liste_enemy[3].getCurrent_health() + \"pv\\n\" + liste_enemy[3].getCurrent_def() + \" def\\nde type \" + liste_enemy[3].getType(), 1000, 50, en4);\r\n                affImageEN(0, true, combat);\r\n                affImageEN(1, true, combat);\r\n                affImageEN(2, true, combat);\r\n                affImageEN(3, true, combat);\r\n            }\r\n            but1.setVisible(false);\r\n            menu.setVisible(true);\r\n\r\n            affFleche(tourHero);\r\n        }\r\n        if (combat == 2) {\r\n            for (int i = 0; i < liste_héros.length; i++) {\r\n                if (liste_héros[i].getCurrent_health() > 0) {\r\n                    tourHero = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (nombre_héros.equals(\"1\")) {\r\n                en1.setVisible(true);\r\n                he1.setVisible(true);\r\n                ien1.setVisible(true);\r\n\r\n                for (int i = 0; i < liste_enemy.length; i++) {\r\n                    liste_enemy[i] = Enemy.genEnemy(combat);\r\n\r\n                    if (liste_classe[i].equals(\"healer\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"healer\", i, true);\r\n                        } else {\r\n                            affHero(\"healer\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"mage\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"mage\", i, true);\r\n                        } else {\r\n                            affHero(\"mage\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"hunter\")) {\r\n                        liste_héros[i].setNbfleche(liste_héros[i].getNbfleche() + 5);\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"hunter\", i, true);\r\n                        } else {\r\n                            affHero(\"hunter\", i, false);\r\n                        }\r\n                    } else {\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"warrior\", i, true);\r\n                        } else {\r\n                            affHero(\"warrior\", i, false);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                writeData(\"Brigand Hunter \" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n                affImageEN(0, true, combat);\r\n            }\r\n\r\n            if (nombre_héros.equals(\"2\")) {\r\n                en1.setVisible(true);\r\n                en2.setVisible(true);\r\n                he1.setVisible(true);\r\n                he2.setVisible(true);\r\n                ien1.setVisible(true);\r\n                ien2.setVisible(true);\r\n\r\n                for (int i = 0; i < liste_enemy.length; i++) {\r\n                    liste_enemy[i] = Enemy.genEnemy(combat);\r\n                    if (liste_classe[i].equals(\"healer\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"healer\", i, true);\r\n                        } else {\r\n                            affHero(\"healer\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"mage\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"mage\", i, true);\r\n                        } else {\r\n                            affHero(\"mage\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"hunter\")) {\r\n                        liste_héros[i].setNbfleche(liste_héros[i].getNbfleche() + 5);\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"hunter\", i, true);\r\n                        } else {\r\n                            affHero(\"hunter\", i, false);\r\n                        }\r\n                    } else {\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"warrior\", i, true);\r\n                        } else {\r\n                            affHero(\"warrior\", i, false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                writeData(\"Brigand Hunter\" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n                writeData(\"Brigand Raider\" + \"\\n\" + liste_enemy[1].getCurrent_health() + \"pv\\n\" + liste_enemy[1].getCurrent_def() + \" def\\nde type \" + liste_enemy[1].getType(), 400, 50, en2);\r\n                affImageEN(0, true, combat);\r\n                affImageEN(1, true, combat);\r\n            }\r\n\r\n            if (nombre_héros.equals(\"3\")) {\r\n                en1.setVisible(true);\r\n                en2.setVisible(true);\r\n                en3.setVisible(true);\r\n                he1.setVisible(true);\r\n                he2.setVisible(true);\r\n                he3.setVisible(true);\r\n                ien1.setVisible(true);\r\n                ien2.setVisible(true);\r\n                ien3.setVisible(true);\r\n\r\n                for (int i = 0; i < liste_enemy.length; i++) {\r\n                    liste_enemy[i] = Enemy.genEnemy(combat);\r\n                    if (liste_classe[i].equals(\"healer\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"healer\", i, true);\r\n                        } else {\r\n                            affHero(\"healer\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"mage\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"mage\", i, true);\r\n                        } else {\r\n                            affHero(\"mage\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"hunter\")) {\r\n                        liste_héros[i].setNbfleche(liste_héros[i].getNbfleche() + 5);\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"hunter\", i, true);\r\n                        } else {\r\n                            affHero(\"hunter\", i, false);\r\n                        }\r\n                    } else {\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"warrior\", i, true);\r\n                        } else {\r\n                            affHero(\"warrior\", i, false);\r\n                        }\r\n                    }\r\n                }\r\n                writeData(\"Brigand Hunter\" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n                writeData(\"Brigand Raider\" + \"\\n\" + liste_enemy[1].getCurrent_health() + \"pv\\n\" + liste_enemy[1].getCurrent_def() + \" def\\nde type \" + liste_enemy[1].getType(), 400, 50, en2);\r\n                writeData(\"Cutthroat\" + \"\\n\" + liste_enemy[2].getCurrent_health() + \"pv\\n\" + liste_enemy[2].getCurrent_def() + \" def\\nde type \" + liste_enemy[2].getType(), 700, 50, en3);\r\n                affImageEN(0, true, combat);\r\n                affImageEN(1, true, combat);\r\n                affImageEN(2, true, combat);\r\n            }\r\n\r\n            if (nombre_héros.equals(\"4\")) {\r\n                en1.setVisible(true);\r\n                en2.setVisible(true);\r\n                en3.setVisible(true);\r\n                en4.setVisible(true);\r\n                he1.setVisible(true);\r\n                he2.setVisible(true);\r\n                he3.setVisible(true);\r\n                he4.setVisible(true);\r\n                ien1.setVisible(true);\r\n                ien2.setVisible(true);\r\n                ien3.setVisible(true);\r\n                ien4.setVisible(true);\r\n\r\n\r\n                for (int i = 0; i < liste_enemy.length; i++) {\r\n                    liste_enemy[i] = Enemy.genEnemy(combat);\r\n                    if (liste_classe[i].equals(\"healer\")) {\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                                liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                            } else {\r\n                                liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                            }\r\n                            affHero(\"healer\", i, true);\r\n                        } else {\r\n                            affHero(\"healer\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"mage\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"mage\", i, true);\r\n                        } else {\r\n                            affHero(\"mage\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"hunter\")) {\r\n                        liste_héros[i].setNbfleche(liste_héros[i].getNbfleche() + 5);\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"hunter\", i, true);\r\n                        } else {\r\n                            affHero(\"hunter\", i, false);\r\n                        }\r\n                    } else {\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"warrior\", i, true);\r\n                        } else {\r\n                            affHero(\"warrior\", i, false);\r\n                        }\r\n                    }\r\n                }\r\n                writeData(\"Brigand Hunter\" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n                writeData(\"Brigand Raider\" + \"\\n\" + liste_enemy[1].getCurrent_health() + \"pv\\n\" + liste_enemy[1].getCurrent_def() + \" def\\nde type \" + liste_enemy[1].getType(), 400, 50, en2);\r\n                writeData(\"Cutthroat\" + \"\\n\" + liste_enemy[2].getCurrent_health() + \"pv\\n\" + liste_enemy[2].getCurrent_def() + \" def\\nde type \" + liste_enemy[2].getType(), 700, 50, en3);\r\n                writeData(\"Vvulf\" + \"\\n\" + liste_enemy[3].getCurrent_health() + \"pv\\n\" + liste_enemy[3].getCurrent_def() + \" def\\nde type \" + liste_enemy[3].getType(), 1000, 50, en4);\r\n                affImageEN(0, true, combat);\r\n                affImageEN(1, true, combat);\r\n                affImageEN(2, true, combat);\r\n                affImageEN(3, true, combat);\r\n            }\r\n            but1.setVisible(false);\r\n            menu.setVisible(true);\r\n\r\n            affFleche(tourHero);\r\n        }\r\n        if (combat == 3) {\r\n            for (int i = 0; i < liste_héros.length; i++) {\r\n                if (liste_héros[i].getCurrent_health() > 0) {\r\n                    tourHero = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (nombre_héros.equals(\"1\")) {\r\n                en1.setVisible(true);\r\n                he1.setVisible(true);\r\n                ien1.setVisible(true);\r\n\r\n                for (int i = 0; i < liste_enemy.length; i++) {\r\n                    liste_enemy[i] = Enemy.genEnemy(combat);\r\n\r\n                    if (liste_classe[i].equals(\"healer\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"healer\", i, true);\r\n                        } else {\r\n                            affHero(\"healer\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"mage\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"mage\", i, true);\r\n                        } else {\r\n                            affHero(\"mage\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"hunter\")) {\r\n                        liste_héros[i].setNbfleche(liste_héros[i].getNbfleche() + 5);\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"hunter\", i, true);\r\n                        } else {\r\n                            affHero(\"hunter\", i, false);\r\n                        }\r\n                    } else {\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"warrior\", i, true);\r\n                        } else {\r\n                            affHero(\"warrior\", i, false);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                writeData(\"Spitter \" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n                affImageEN(0, true, combat);\r\n            }\r\n\r\n            if (nombre_héros.equals(\"2\")) {\r\n                en1.setVisible(true);\r\n                en2.setVisible(true);\r\n                he1.setVisible(true);\r\n                he2.setVisible(true);\r\n                ien1.setVisible(true);\r\n                ien2.setVisible(true);\r\n\r\n                for (int i = 0; i < liste_enemy.length; i++) {\r\n                    liste_enemy[i] = Enemy.genEnemy(combat);\r\n                    if (liste_classe[i].equals(\"healer\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"healer\", i, true);\r\n                        } else {\r\n                            affHero(\"healer\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"mage\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"mage\", i, true);\r\n                        } else {\r\n                            affHero(\"mage\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"hunter\")) {\r\n                        liste_héros[i].setNbfleche(liste_héros[i].getNbfleche() + 5);\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"hunter\", i, true);\r\n                        } else {\r\n                            affHero(\"hunter\", i, false);\r\n                        }\r\n                    } else {\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"warrior\", i, true);\r\n                        } else {\r\n                            affHero(\"warrior\", i, false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                writeData(\"Spitter\" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n                writeData(\"Cultist\" + \"\\n\" + liste_enemy[1].getCurrent_health() + \"pv\\n\" + liste_enemy[1].getCurrent_def() + \" def\\nde type \" + liste_enemy[1].getType(), 400, 50, en2);\r\n                affImageEN(0, true, combat);\r\n                affImageEN(1, true, combat);\r\n            }\r\n\r\n            if (nombre_héros.equals(\"3\")) {\r\n                en1.setVisible(true);\r\n                en2.setVisible(true);\r\n                en3.setVisible(true);\r\n                he1.setVisible(true);\r\n                he2.setVisible(true);\r\n                he3.setVisible(true);\r\n                ien1.setVisible(true);\r\n                ien2.setVisible(true);\r\n                ien3.setVisible(true);\r\n\r\n                for (int i = 0; i < liste_enemy.length; i++) {\r\n                    liste_enemy[i] = Enemy.genEnemy(combat);\r\n                    if (liste_classe[i].equals(\"healer\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"healer\", i, true);\r\n                        } else {\r\n                            affHero(\"healer\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"mage\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"mage\", i, true);\r\n                        } else {\r\n                            affHero(\"mage\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"hunter\")) {\r\n                        liste_héros[i].setNbfleche(liste_héros[i].getNbfleche() + 5);\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"hunter\", i, true);\r\n                        } else {\r\n                            affHero(\"hunter\", i, false);\r\n                        }\r\n                    } else {\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"warrior\", i, true);\r\n                        } else {\r\n                            affHero(\"warrior\", i, false);\r\n                        }\r\n                    }\r\n                }\r\n                writeData(\"Spitter\" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n                writeData(\"Cultist\" + \"\\n\" + liste_enemy[1].getCurrent_health() + \"pv\\n\" + liste_enemy[1].getCurrent_def() + \" def\\nde type \" + liste_enemy[1].getType(), 400, 50, en2);\r\n                writeData(\"Gargoyle\" + \"\\n\" + liste_enemy[2].getCurrent_health() + \"pv\\n\" + liste_enemy[2].getCurrent_def() + \" def\\nde type \" + liste_enemy[2].getType(), 700, 50, en3);\r\n                affImageEN(0, true, combat);\r\n                affImageEN(1, true, combat);\r\n                affImageEN(2, true, combat);\r\n            }\r\n\r\n            if (nombre_héros.equals(\"4\")) {\r\n                en1.setVisible(true);\r\n                en2.setVisible(true);\r\n                en3.setVisible(true);\r\n                en4.setVisible(true);\r\n                he1.setVisible(true);\r\n                he2.setVisible(true);\r\n                he3.setVisible(true);\r\n                he4.setVisible(true);\r\n                ien1.setVisible(true);\r\n                ien2.setVisible(true);\r\n                ien3.setVisible(true);\r\n                ien4.setVisible(true);\r\n\r\n\r\n                for (int i = 0; i < liste_enemy.length; i++) {\r\n                    liste_enemy[i] = Enemy.genEnemy(combat);\r\n                    if (liste_classe[i].equals(\"healer\")) {\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                                liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                            } else {\r\n                                liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                            }\r\n                            affHero(\"healer\", i, true);\r\n                        } else {\r\n                            affHero(\"healer\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"mage\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"mage\", i, true);\r\n                        } else {\r\n                            affHero(\"mage\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"hunter\")) {\r\n                        liste_héros[i].setNbfleche(liste_héros[i].getNbfleche() + 5);\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"hunter\", i, true);\r\n                        } else {\r\n                            affHero(\"hunter\", i, false);\r\n                        }\r\n                    } else {\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"warrior\", i, true);\r\n                        } else {\r\n                            affHero(\"warrior\", i, false);\r\n                        }\r\n                    }\r\n                }\r\n                writeData(\"Spitter\" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n                writeData(\"Cultist\" + \"\\n\" + liste_enemy[1].getCurrent_health() + \"pv\\n\" + liste_enemy[1].getCurrent_def() + \" def\\nde type \" + liste_enemy[1].getType(), 400, 50, en2);\r\n                writeData(\"Gargoyle\" + \"\\n\" + liste_enemy[2].getCurrent_health() + \"pv\\n\" + liste_enemy[2].getCurrent_def() + \" def\\nde type \" + liste_enemy[2].getType(), 700, 50, en3);\r\n                writeData(\"Ghoul\" + \"\\n\" + liste_enemy[3].getCurrent_health() + \"pv\\n\" + liste_enemy[3].getCurrent_def() + \" def\\nde type \" + liste_enemy[3].getType(), 1000, 50, en4);\r\n                affImageEN(0, true, combat);\r\n                affImageEN(1, true, combat);\r\n                affImageEN(2, true, combat);\r\n                affImageEN(3, true, combat);\r\n            }\r\n            but1.setVisible(false);\r\n            menu.setVisible(true);\r\n\r\n            affFleche(tourHero);\r\n        }\r\n        if (combat == 4) {\r\n            for (int i = 0; i < liste_héros.length; i++) {\r\n                if (liste_héros[i].getCurrent_health() > 0) {\r\n                    tourHero = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (nombre_héros.equals(\"1\")) {\r\n                en1.setVisible(true);\r\n                he1.setVisible(true);\r\n                ien1.setVisible(true);\r\n\r\n                for (int i = 0; i < liste_enemy.length; i++) {\r\n                    liste_enemy[i] = Enemy.genEnemy(combat);\r\n\r\n                    if (liste_classe[i].equals(\"healer\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"healer\", i, true);\r\n                        } else {\r\n                            affHero(\"healer\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"mage\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"mage\", i, true);\r\n                        } else {\r\n                            affHero(\"mage\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"hunter\")) {\r\n                        liste_héros[i].setNbfleche(liste_héros[i].getNbfleche() + 5);\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"hunter\", i, true);\r\n                        } else {\r\n                            affHero(\"hunter\", i, false);\r\n                        }\r\n                    } else {\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"warrior\", i, true);\r\n                        } else {\r\n                            affHero(\"warrior\", i, false);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                writeData(\"Swine Drummer \" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n                affImageEN(0, true, combat);\r\n            }\r\n\r\n            if (nombre_héros.equals(\"2\")) {\r\n                en1.setVisible(true);\r\n                en2.setVisible(true);\r\n                he1.setVisible(true);\r\n                he2.setVisible(true);\r\n                ien1.setVisible(true);\r\n                ien2.setVisible(true);\r\n\r\n                for (int i = 0; i < liste_enemy.length; i++) {\r\n                    liste_enemy[i] = Enemy.genEnemy(combat);\r\n                    if (liste_classe[i].equals(\"healer\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"healer\", i, true);\r\n                        } else {\r\n                            affHero(\"healer\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"mage\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"mage\", i, true);\r\n                        } else {\r\n                            affHero(\"mage\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"hunter\")) {\r\n                        liste_héros[i].setNbfleche(liste_héros[i].getNbfleche() + 5);\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"hunter\", i, true);\r\n                        } else {\r\n                            affHero(\"hunter\", i, false);\r\n                        }\r\n                    } else {\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"warrior\", i, true);\r\n                        } else {\r\n                            affHero(\"warrior\", i, false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n                writeData(\"Swine Drummer\" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n                writeData(\"Swine Slasher\" + \"\\n\" + liste_enemy[1].getCurrent_health() + \"pv\\n\" + liste_enemy[1].getCurrent_def() + \" def\\nde type \" + liste_enemy[1].getType(), 400, 50, en2);\r\n                affImageEN(0, true, combat);\r\n                affImageEN(1, true, combat);\r\n            }\r\n\r\n            if (nombre_héros.equals(\"3\")) {\r\n                en1.setVisible(true);\r\n                en2.setVisible(true);\r\n                en3.setVisible(true);\r\n                he1.setVisible(true);\r\n                he2.setVisible(true);\r\n                he3.setVisible(true);\r\n                ien1.setVisible(true);\r\n                ien2.setVisible(true);\r\n                ien3.setVisible(true);\r\n\r\n                for (int i = 0; i < liste_enemy.length; i++) {\r\n                    liste_enemy[i] = Enemy.genEnemy(combat);\r\n                    if (liste_classe[i].equals(\"healer\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"healer\", i, true);\r\n                        } else {\r\n                            affHero(\"healer\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"mage\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"mage\", i, true);\r\n                        } else {\r\n                            affHero(\"mage\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"hunter\")) {\r\n                        liste_héros[i].setNbfleche(liste_héros[i].getNbfleche() + 5);\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"hunter\", i, true);\r\n                        } else {\r\n                            affHero(\"hunter\", i, false);\r\n                        }\r\n                    } else {\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"warrior\", i, true);\r\n                        } else {\r\n                            affHero(\"warrior\", i, false);\r\n                        }\r\n                    }\r\n                }\r\n                writeData(\"Swine Drummer\" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n                writeData(\"Swine Slasher\" + \"\\n\" + liste_enemy[1].getCurrent_health() + \"pv\\n\" + liste_enemy[1].getCurrent_def() + \" def\\nde type \" + liste_enemy[1].getType(), 400, 50, en2);\r\n                writeData(\"Swine Skiver\" + \"\\n\" + liste_enemy[2].getCurrent_health() + \"pv\\n\" + liste_enemy[2].getCurrent_def() + \" def\\nde type \" + liste_enemy[2].getType(), 700, 50, en3);\r\n                affImageEN(0, true, combat);\r\n                affImageEN(1, true, combat);\r\n                affImageEN(2, true, combat);\r\n            }\r\n\r\n            if (nombre_héros.equals(\"4\")) {\r\n                en1.setVisible(true);\r\n                en2.setVisible(true);\r\n                en3.setVisible(true);\r\n                en4.setVisible(true);\r\n                he1.setVisible(true);\r\n                he2.setVisible(true);\r\n                he3.setVisible(true);\r\n                he4.setVisible(true);\r\n                ien1.setVisible(true);\r\n                ien2.setVisible(true);\r\n                ien3.setVisible(true);\r\n                ien4.setVisible(true);\r\n\r\n\r\n                for (int i = 0; i < liste_enemy.length; i++) {\r\n                    liste_enemy[i] = Enemy.genEnemy(combat);\r\n                    if (liste_classe[i].equals(\"healer\")) {\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                                liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                            } else {\r\n                                liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                            }\r\n                            affHero(\"healer\", i, true);\r\n                        } else {\r\n                            affHero(\"healer\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"mage\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"mage\", i, true);\r\n                        } else {\r\n                            affHero(\"mage\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"hunter\")) {\r\n                        liste_héros[i].setNbfleche(liste_héros[i].getNbfleche() + 5);\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"hunter\", i, true);\r\n                        } else {\r\n                            affHero(\"hunter\", i, false);\r\n                        }\r\n                    } else {\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"warrior\", i, true);\r\n                        } else {\r\n                            affHero(\"warrior\", i, false);\r\n                        }\r\n                    }\r\n                }\r\n                writeData(\"Swine Drummer\" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n                writeData(\"Swine Slasher\" + \"\\n\" + liste_enemy[1].getCurrent_health() + \"pv\\n\" + liste_enemy[1].getCurrent_def() + \" def\\nde type \" + liste_enemy[1].getType(), 400, 50, en2);\r\n                writeData(\"Swine Skiver\" + \"\\n\" + liste_enemy[2].getCurrent_health() + \"pv\\n\" + liste_enemy[2].getCurrent_def() + \" def\\nde type \" + liste_enemy[2].getType(), 700, 50, en3);\r\n                writeData(\"Swine Chopper\" + \"\\n\" + liste_enemy[3].getCurrent_health() + \"pv\\n\" + liste_enemy[3].getCurrent_def() + \" def\\nde type \" + liste_enemy[3].getType(), 1000, 50, en4);\r\n                affImageEN(0, true, combat);\r\n                affImageEN(1, true, combat);\r\n                affImageEN(2, true, combat);\r\n                affImageEN(3, true, combat);\r\n            }\r\n            but1.setVisible(false);\r\n            menu.setVisible(true);\r\n\r\n            affFleche(tourHero);\r\n        }\r\n        if (combat == 5) {\r\n            liste_enemy = new Enemy[1];\r\n            liste_enemy[0] = genBoss();\r\n            writeData(\"Heart of the dungeon \" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n            affImageEN(0, true, combat);\r\n\r\n            ien2.setVisible(false);\r\n            ien3.setVisible(false);\r\n            ien4.setVisible(false);\r\n            en2.setVisible(false); //désactive autre image\r\n            en3.setVisible(false);\r\n            en4.setVisible(false);\r\n\r\n            Ci10.setText(\"Hearth of the dungeon \"); //set le text des meu item sur le nom du monstre\r\n            Ci11.setText(\"Hearth of the dungeon\");\r\n            Ci12.setText(\"Hearth of the dungeon \");\r\n            Ci13.setText(\"Hearth of the dungeon \");\r\n            Ci14.setText(\"Hearth of the dungeon\");\r\n            Ci15.setText(\"Hearth of the dungeon\");\r\n            Ci16.setText(\"Hearth of the dungeon\");\r\n            Ci17.setText(\"Hearth of the dungeon \");\r\n\r\n            Ci10.setVisible(true);\r\n            Ci11.setVisible(true);\r\n            Ci12.setVisible(true);\r\n            Ci13.setVisible(true);\r\n            Ci14.setVisible(true);\r\n            Ci15.setVisible(true);\r\n            Ci16.setVisible(true);\r\n            Ci17.setVisible(true);\r\n\r\n            for (int i = 0; i < liste_héros.length; i++) {\r\n                if (liste_héros[i].getCurrent_health() > 0) {\r\n                    tourHero = i;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (nombre_héros.equals(\"1\")) {\r\n                en1.setVisible(true);\r\n                he1.setVisible(true);\r\n                ien1.setVisible(true);\r\n\r\n                for (int i = 0; i < liste_héros.length; i++) {\r\n\r\n                    if (liste_classe[i].equals(\"healer\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"healer\", i, true);\r\n                        } else {\r\n                            affHero(\"healer\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"mage\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"mage\", i, true);\r\n                        } else {\r\n                            affHero(\"mage\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"hunter\")) {\r\n                        liste_héros[i].setNbfleche(liste_héros[i].getNbfleche() + 5);\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"hunter\", i, true);\r\n                        } else {\r\n                            affHero(\"hunter\", i, false);\r\n                        }\r\n                    } else {\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"warrior\", i, true);\r\n                        } else {\r\n                            affHero(\"warrior\", i, false);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (nombre_héros.equals(\"2\")) {\r\n                en1.setVisible(true);\r\n                he1.setVisible(true);\r\n                he2.setVisible(true);\r\n                ien1.setVisible(true);\r\n\r\n                for (int i = 0; i < liste_héros.length; i++) {\r\n                    if (liste_classe[i].equals(\"healer\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"healer\", i, true);\r\n                        } else {\r\n                            affHero(\"healer\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"mage\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"mage\", i, true);\r\n                        } else {\r\n                            affHero(\"mage\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"hunter\")) {\r\n                        liste_héros[i].setNbfleche(liste_héros[i].getNbfleche() + 5);\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"hunter\", i, true);\r\n                        } else {\r\n                            affHero(\"hunter\", i, false);\r\n                        }\r\n                    } else {\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"warrior\", i, true);\r\n                        } else {\r\n                            affHero(\"warrior\", i, false);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if (nombre_héros.equals(\"3\")) {\r\n                en1.setVisible(true);\r\n                he1.setVisible(true);\r\n                he2.setVisible(true);\r\n                he3.setVisible(true);\r\n                ien1.setVisible(true);\r\n\r\n                for (int i = 0; i < liste_héros.length; i++) {\r\n                    if (liste_classe[i].equals(\"healer\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"healer\", i, true);\r\n                        } else {\r\n                            affHero(\"healer\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"mage\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"mage\", i, true);\r\n                        } else {\r\n                            affHero(\"mage\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"hunter\")) {\r\n                        liste_héros[i].setNbfleche(liste_héros[i].getNbfleche() + 5);\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"hunter\", i, true);\r\n                        } else {\r\n                            affHero(\"hunter\", i, false);\r\n                        }\r\n                    } else {\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"warrior\", i, true);\r\n                        } else {\r\n                            affHero(\"warrior\", i, false);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (nombre_héros.equals(\"4\")) {\r\n                en1.setVisible(true);\r\n                he1.setVisible(true);\r\n                he2.setVisible(true);\r\n                he3.setVisible(true);\r\n                he4.setVisible(true);\r\n                ien1.setVisible(true);\r\n\r\n                for (int i = 0; i < liste_héros.length; i++) {\r\n                    if (liste_classe[i].equals(\"healer\")) {\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                                liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                            } else {\r\n                                liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                            }\r\n                            affHero(\"healer\", i, true);\r\n                        } else {\r\n                            affHero(\"healer\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"mage\")) {\r\n                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {\r\n                            liste_héros[i].setMagie(liste_héros[i].getMagie());\r\n                        } else {\r\n                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);\r\n                        }\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"mage\", i, true);\r\n                        } else {\r\n                            affHero(\"mage\", i, false);\r\n                        }\r\n                    } else if (liste_classe[i].equals(\"hunter\")) {\r\n                        liste_héros[i].setNbfleche(liste_héros[i].getNbfleche() + 5);\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"hunter\", i, true);\r\n                        } else {\r\n                            affHero(\"hunter\", i, false);\r\n                        }\r\n                    } else {\r\n                        if (liste_héros[i].getCurrent_health() > 0) {\r\n                            affHero(\"warrior\", i, true);\r\n                        } else {\r\n                            affHero(\"warrior\", i, false);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n            but1.setVisible(false);\r\n            menu.setVisible(true);\r\n\r\n            affFleche(tourHero);\r\n        }\r\n\r\n    }\r\n\r\n    @FXML\r\n    void menuManger(MouseEvent event) {\r\n        consommable[] inv = liste_héros[tourHero].getInventaire_consumable(); //inv héros\r\n        boeuf.setVisible(false);\r\n        repas_fait_maison.setVisible(false); //désactive menu item\r\n        int a = 0;\r\n        for (int i = 0; i < inv.length; i++) {\r\n            if (inv[i].getName() != null && inv[i].getName().equals(\"boeuf\")) {\r\n                boeuf.setVisible(true); //réactive si on les trouves\r\n                a += 1;\r\n            } else if (inv[i].getName() != null && inv[i].getName().equals(\"repas fait maison\")) {\r\n                repas_fait_maison.setVisible(true);\r\n                a += 1;\r\n            }\r\n        }\r\n        if (a == 0) { //si inv sans nourriture\r\n            pasNour.setVisible(true); //affiche menu item pas de nourriture\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void manger2(ActionEvent event) throws FileNotFoundException, InterruptedException {\r\n        Hero hero = liste_héros[tourHero];\r\n        consommable[] inv = hero.getInventaire_consumable();\r\n        int i = 0;\r\n        while (true) {\r\n            if (inv[i].getName() != null && inv[i].getName().equals(\"boeuf\")) { //si boeuf\r\n                int soin = inv[i].getSoin();\r\n                double pvact = hero.getCurrent_health();\r\n                double pv = hero.getHealth();\r\n                if (pvact + soin > pv) { //soigne le héros au plus jusqua ses pv max\r\n                    hero.setCurrent_health(pv);\r\n                } else {\r\n                    hero.setCurrent_health(pvact + soin);\r\n                }\r\n                affHero(liste_classe[tourHero], tourHero, true);\r\n                hero.suppConsumable(inv[i]);\r\n                break;\r\n            }\r\n            i += 1;\r\n\r\n        }\r\n        if (tourHero != Integer.parseInt(nombre_héros) - 1) { //si le héros n'est pas le dernier de sa ligne\r\n            int temp = tourHero;\r\n            for (int j = tourHero + 1; j < liste_héros.length; j++) {\r\n                if (liste_héros[j].getCurrent_health() > 0) {\r\n                    tourHero = j; //cherche le prochain héros vivant et change le tour héros pourquil joue\r\n                    break;\r\n                }\r\n            }\r\n            if (tourHero == temp) { //si pas d'autre héros peuvent jouer\r\n                tourEnemi(liste_enemy, liste_héros);\r\n            }\r\n        } else { //si dernier de sa ligne\r\n            tourEnemi(liste_enemy, liste_héros);\r\n            for (int j = 0; j < liste_héros.length; j++) {\r\n                if (liste_héros[j].getCurrent_health() > 0) {\r\n                    tourHero = j; //cherche prochain héros en vie\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        affFleche(tourHero);\r\n    }   //manger\r\n\r\n    @FXML\r\n    void manger3(ActionEvent event) throws FileNotFoundException, InterruptedException {\r\n        Hero hero = liste_héros[tourHero];\r\n        affHero(liste_classe[tourHero], tourHero, true);\r\n        consommable[] inv = hero.getInventaire_consumable();\r\n        int i = 0;\r\n        while (true) {\r\n            if (inv[i].getName() != null && inv[i].getName().equals(\"repas fait maison\")) {\r\n                int soin = inv[i].getSoin();\r\n                double pvact = hero.getCurrent_health();\r\n                double pv = hero.getHealth();\r\n                if (pvact + soin > pv) {\r\n                    hero.setCurrent_health(pv);\r\n                } else {\r\n                    hero.setCurrent_health(pvact + soin);\r\n                }\r\n                affHero(liste_classe[tourHero], tourHero, true);\r\n                hero.suppConsumable(inv[i]);\r\n                break;\r\n            }\r\n            i += 1;\r\n\r\n        }\r\n        if (tourHero != Integer.parseInt(nombre_héros) - 1) {\r\n            int temp = tourHero;\r\n            for (int j = tourHero + 1; j < liste_héros.length; j++) {\r\n                if (liste_héros[j].getCurrent_health() > 0) {\r\n                    tourHero = j;\r\n                    break;\r\n                }\r\n            }\r\n            if (tourHero == temp) {\r\n                tourEnemi(liste_enemy, liste_héros);\r\n            }\r\n        } else {\r\n            tourEnemi(liste_enemy, liste_héros);\r\n            for (int j = 0; j < liste_héros.length; j++) {\r\n                if (liste_héros[j].getCurrent_health() > 0) {\r\n                    tourHero = j;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        affFleche(tourHero);\r\n    }\r\n\r\n    //----------------------------------------------------------------------------\r\n    @FXML\r\n    void passer(ActionEvent event) throws FileNotFoundException, InterruptedException { //passer son tour\r\n        if (tourHero != Integer.parseInt(nombre_héros) - 1) {\r\n            int temp = tourHero;\r\n            for (int j = tourHero + 1; j < liste_héros.length; j++) {\r\n                if (liste_héros[j].getCurrent_health() > 0) {\r\n                    tourHero = j;\r\n                    System.out.println(tourHero);\r\n                    break;\r\n                }\r\n            }\r\n            if (tourHero == temp) {\r\n                tourEnemi(liste_enemy, liste_héros);\r\n            }\r\n        } else {\r\n            tourEnemi(liste_enemy, liste_héros);\r\n            for (int j = 0; j < liste_héros.length; j++) {\r\n                if (liste_héros[j].getCurrent_health() > 0) {\r\n                    tourHero = j;\r\n                    System.out.println(tourHero);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        affFleche(tourHero);\r\n        atk1.setVisible(false); //désactive tout menu item pour pas avoir de menu item fantome\r\n        atk2.setVisible(false);\r\n        atk3.setVisible(false);\r\n        atk4.setVisible(false);\r\n        atk5.setVisible(false);\r\n        atk6.setVisible(false);\r\n        atk7.setVisible(false);\r\n        atk8.setVisible(false);\r\n        atk9.setVisible(false);\r\n        atk10.setVisible(false);\r\n        atk11.setVisible(false);\r\n        boeuf.setVisible(false);\r\n        repas_fait_maison.setVisible(false);\r\n        parmure.setVisible(false);\r\n        pdégat.setVisible(false);\r\n        pvie.setVisible(false);\r\n        pmana.setVisible(false);\r\n        paspot.setVisible(false);\r\n        pasNour.setVisible(false);\r\n        pasBalle.setVisible(false);\r\n        pasMana.setVisible(false);\r\n    }\r\n\r\n    @FXML\r\n    void menuBoire(MouseEvent event) {\r\n        consommable[] inv = liste_héros[tourHero].getInventaire_consumable();\r\n\r\n        int a = 0;\r\n        for (int i = 0; i < inv.length; i++) { //active les menu item selon disponibilité\r\n            if (inv[i].getName() != null && inv[i].getName().equals(\"potion de vie\")) {\r\n                pvie.setVisible(true);\r\n                a += 1;\r\n            } else if (inv[i].getName() != null && inv[i].getName().equals(\"potion de mana\")) {\r\n                pmana.setVisible(true);\r\n                a += 1;\r\n            } else if (inv[i].getName() != null && inv[i].getName().equals(\"potion de dégat\")) {\r\n                pdégat.setVisible(true);\r\n                a += 1;\r\n            } else if (inv[i].getName() != null && inv[i].getName().equals(\"potion d'armure\")) {\r\n                parmure.setVisible(true);\r\n                a += 1;\r\n            }\r\n        }\r\n        if (a == 0) {\r\n            paspot.setVisible(true);\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void boirearmure(ActionEvent event) throws FileNotFoundException, InterruptedException {\r\n        potion = 1; //atribu valeur au choix effectué\r\n        boire(potion);\r\n\r\n    } //potion\r\n\r\n    @FXML\r\n    void boiredégat(ActionEvent event) throws FileNotFoundException, InterruptedException {\r\n        potion = 2;\r\n        boire(potion);\r\n\r\n    }\r\n\r\n    @FXML\r\n    void boiremana(ActionEvent event) throws FileNotFoundException, InterruptedException {\r\n        potion = 3;\r\n        boire(potion);\r\n\r\n    }\r\n\r\n    @FXML\r\n    void boirepv(ActionEvent event) throws FileNotFoundException, InterruptedException {\r\n        potion = 4;\r\n        boire(potion);\r\n\r\n    }\r\n\r\n    public void boire(int n) throws FileNotFoundException, InterruptedException {\r\n        Hero hero = liste_héros[tourHero];\r\n        consommable[] inv = hero.getInventaire_consumable();\r\n        int i = 0;\r\n        while (true) { //agissemnt potion\r\n            if (n == 4 && inv[i].getName() != null && inv[i].getName().equals(\"potion de vie\")) {\r\n                int soin = inv[i].getSoin();\r\n                double pvact = hero.getCurrent_health();\r\n                double pv = hero.getHealth();\r\n                if (pvact + soin > pv) {\r\n                    hero.setCurrent_health(pv);\r\n                } else {\r\n                    hero.setCurrent_health(pvact + soin);\r\n                }\r\n                affHero(liste_classe[tourHero], tourHero, true);\r\n                hero.suppConsumable(inv[i]);\r\n                break;\r\n            } else if (n == 3 && inv[i].getName() != null && inv[i].getName().equals(\"potion de mana\")) {\r\n                int Smana = inv[i].getMana();\r\n                double manaact = hero.getCurrent_magie();\r\n                double mana = hero.getMagie();\r\n                if (manaact + Smana > mana) {\r\n                    hero.setCurrent_magie((int) mana);\r\n                } else {\r\n                    hero.setCurrent_health(manaact + Smana);\r\n                }\r\n                affHero(liste_classe[tourHero], tourHero, true);\r\n                hero.suppConsumable(inv[i]);\r\n                break;\r\n            } else if (n == 2 && inv[i].getName() != null && inv[i].getName().equals(\"potion de dégat\")) {\r\n                int bonus_degat = inv[i].getBonus_degat();\r\n                double degat_base = hero.getDegat_base();\r\n                hero.setDegat_base((int) (bonus_degat + degat_base));\r\n                affHero(liste_classe[tourHero], tourHero, true);\r\n                hero.suppConsumable(inv[i]);\r\n                break;\r\n            } else if (n == 1 && inv[i].getName() != null && inv[i].getName().equals(\"potion d'armure\")) {\r\n                int bonus_def = inv[i].getBonus_def();\r\n                double def = hero.getCurrent_def();\r\n                hero.setCurrent_def((int) (def + bonus_def));\r\n                affHero(liste_classe[tourHero], tourHero, true);\r\n                hero.suppConsumable(inv[i]);\r\n                break;\r\n            }\r\n            i += 1;\r\n\r\n        }\r\n        if (tourHero != Integer.parseInt(nombre_héros) - 1) {\r\n            int temp = tourHero;\r\n            for (int j = tourHero + 1; j < liste_héros.length; j++) {\r\n                if (liste_héros[j].getCurrent_health() > 0) {\r\n                    tourHero = j;\r\n                    break;\r\n                }\r\n            }\r\n            if (tourHero == temp) {\r\n                tourEnemi(liste_enemy, liste_héros);\r\n            }\r\n        } else {\r\n            tourEnemi(liste_enemy, liste_héros);\r\n            for (int j = 0; j < liste_héros.length; j++) {\r\n                if (liste_héros[j].getCurrent_health() > 0) {\r\n                    tourHero = j;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        affFleche(tourHero);\r\n        pmana.setVisible(false);\r\n        pvie.setVisible(false);\r\n        parmure.setVisible(false);\r\n        pdégat.setVisible(false);\r\n        paspot.setVisible(false);\r\n    }\r\n\r\n    @FXML\r\n    void selectionAtk(MouseEvent event) {\r\n        int[] tabEn = new int[liste_enemy.length];\r\n        for (int i = 0; i < liste_enemy.length; i++) {\r\n            if (liste_enemy[i].getCurrent_health() > 0) {\r\n                tabEn[i] = i; //si en vie\r\n            } else {\r\n                tabEn[i] = -1;//si mort\r\n            }\r\n        }\r\n        for (int i = 0; i < liste_enemy.length; i++) {\r\n            if (tabEn[i] == 0) { //si en vie en 1er position\r\n                Ci10.setVisible(true); //affichage menu item des cible pour toute les attaques selon leurs nombre\r\n                Ci11.setVisible(true);\r\n                Ci12.setVisible(true);\r\n                Ci13.setVisible(true);\r\n                Ci14.setVisible(true);\r\n                Ci15.setVisible(true);\r\n                Ci16.setVisible(true);\r\n                Ci17.setVisible(true);\r\n            } else if (tabEn[i] == 1) {\r\n                Ci20.setVisible(true);\r\n                Ci21.setVisible(true);\r\n                Ci22.setVisible(true);\r\n                Ci23.setVisible(true);\r\n                Ci24.setVisible(true);\r\n                Ci25.setVisible(true);\r\n                Ci26.setVisible(true);\r\n                Ci27.setVisible(true);\r\n            } else if (tabEn[i] == 2) {\r\n                Ci30.setVisible(true);\r\n                Ci31.setVisible(true);\r\n                Ci32.setVisible(true);\r\n                Ci33.setVisible(true);\r\n                Ci34.setVisible(true);\r\n                Ci35.setVisible(true);\r\n                Ci36.setVisible(true);\r\n                Ci37.setVisible(true);\r\n            } else if (tabEn[i] == 3) {\r\n                Ci40.setVisible(true);\r\n                Ci41.setVisible(true);\r\n                Ci42.setVisible(true);\r\n                Ci43.setVisible(true);\r\n                Ci44.setVisible(true);\r\n                Ci45.setVisible(true);\r\n                Ci46.setVisible(true);\r\n                Ci47.setVisible(true);\r\n            }\r\n        }\r\n\r\n        int[] tabHe = new int[Integer.parseInt(nombre_héros)];\r\n        int[] tabHeDed = new int[Integer.parseInt(nombre_héros)];\r\n        for (int i = 0; i < tabHe.length; i++) {\r\n            if (liste_héros[i].getCurrent_health() > 0) {\r\n                tabHe[i] = i;//si en vie\r\n            } else {\r\n                tabHe[i] = -1;\r\n            }\r\n            if (liste_héros[i].getCurrent_health() <= 0) {\r\n                tabHeDed[i] = i; //si mort\r\n            } else {\r\n                tabHeDed[i] = -1;\r\n            }\r\n        }\r\n        for (int i = 0; i < tabHe.length; i++) {\r\n            if (tabHe[i] == 0) {\r\n                hero1.setVisible(true); //affichage menu item pour soin que des héros vivant\r\n            }\r\n            if (tabHe[i] == 1) {\r\n                hero2.setVisible(true);\r\n            }\r\n            if (tabHe[i] == 2) {\r\n                hero3.setVisible(true);\r\n            }\r\n            if (tabHe[i] == 3) {\r\n                hero4.setVisible(true);\r\n            }\r\n            if (tabHeDed[i] == 0) {\r\n                hero11.setVisible(true);//affichage menu item pour soin que des héros mort\r\n            }\r\n            if (tabHeDed[i] == 1) {\r\n                hero21.setVisible(true);\r\n            }\r\n            if (tabHeDed[i] == 2) {\r\n                hero31.setVisible(true);\r\n            }\r\n            if (tabHeDed[i] == 3) {\r\n                hero41.setVisible(true);\r\n            }\r\n        }\r\n\r\n        if (liste_classe[tourHero].equals(\"warrior\")) { //affichage des menu item des attaque selon les classes\r\n            atk1.setVisible(true);\r\n            atk2.setVisible(true);\r\n        }\r\n        if (liste_classe[tourHero].equals(\"hunter\")) {\r\n            atk3.setVisible(true);\r\n            if (liste_héros[tourHero].getNbfleche() > 0) {\r\n                atk4.setVisible(true);\r\n            } else {\r\n                pasBalle.setVisible(true);\r\n            }\r\n        }\r\n        if (liste_classe[tourHero].equals(\"mage\")) {\r\n            if (liste_héros[tourHero].getCurrent_magie() >= 2) {\r\n                atk5.setVisible(true);\r\n                atk6.setVisible(true);\r\n                atk7.setVisible(true);\r\n                atk8.setVisible(true);\r\n            } else {\r\n                pasMana.setVisible(true);\r\n            }\r\n        }\r\n        if (liste_classe[tourHero].equals(\"healer\")) {\r\n            if (liste_héros[tourHero].getCurrent_magie() >= 2) {\r\n                atk9.setVisible(true);\r\n            }\r\n            if (liste_héros[tourHero].getCurrent_magie() >= 4) {\r\n                atk10.setVisible(true);\r\n            }\r\n            if (liste_héros[tourHero].getCurrent_magie() >= 3) {\r\n                atk11.setVisible(true);\r\n            } else {\r\n                pasMana.setVisible(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void atk1(MouseEvent event) {\r\n        attaque = 1;\r\n    }\r\n\r\n    @FXML\r\n    void atk2(MouseEvent event) {\r\n        attaque = 2;\r\n    }\r\n\r\n    @FXML\r\n    void atk3(MouseEvent event) {\r\n        attaque = 3;\r\n    }\r\n\r\n    @FXML\r\n    void atk4(MouseEvent event) {\r\n        attaque = 4;\r\n    }\r\n\r\n    @FXML\r\n    void atk5(MouseEvent event) {\r\n        attaque = 5;\r\n    }\r\n\r\n    @FXML\r\n    void atk6(MouseEvent event) {\r\n        attaque = 6;\r\n    }\r\n\r\n    @FXML\r\n    void atk7(MouseEvent event) {\r\n        attaque = 7;\r\n    }\r\n\r\n    @FXML\r\n    void atk8(MouseEvent event) {\r\n        attaque = 8;\r\n    }\r\n\r\n    @FXML\r\n    void atk9(MouseEvent event) {\r\n        attaque = 9;\r\n    }\r\n\r\n    @FXML\r\n    void atk10(MouseEvent event) {\r\n        attaque = 10;\r\n    }\r\n\r\n    @FXML\r\n    void cible1(ActionEvent event) throws FileNotFoundException, InterruptedException {\r\n        cible = 0;\r\n        attaque(attaque, cible);\r\n    }\r\n\r\n    @FXML\r\n    void cible2(ActionEvent event) throws FileNotFoundException, InterruptedException {\r\n        cible = 1;\r\n        attaque(attaque, cible);\r\n    }\r\n\r\n    @FXML\r\n    void cible3(ActionEvent event) throws FileNotFoundException, InterruptedException {\r\n        cible = 2;\r\n        attaque(attaque, cible);\r\n    }\r\n\r\n    @FXML\r\n    void cible4(ActionEvent event) throws FileNotFoundException, InterruptedException {\r\n        cible = 3;\r\n        attaque(attaque, cible);\r\n    }\r\n\r\n    @FXML\r\n    void soinGr(ActionEvent event) throws FileNotFoundException, InterruptedException {\r\n        healGR((Healer) liste_héros[tourHero], liste_héros);\r\n        for (int i = 0; i < liste_héros.length; i++) {\r\n            if (liste_héros[i].getCurrent_health() > liste_héros[i].getHealth()) {\r\n                liste_enemy[i].setCurrent_health(liste_héros[i].getHealth());\r\n            }\r\n            affHero(liste_classe[i], i, true);\r\n        }\r\n        writeData(\"soin de groupe de \" + ((liste_héros[tourHero].getSoin_base() + liste_arme[tourHero].getBonus_soin()) / 2) + \"pv\\nsi critique alors x2\", 1200, 300, textdégat);\r\n        atk1.setVisible(false);\r\n        atk2.setVisible(false);\r\n        atk3.setVisible(false);\r\n        atk4.setVisible(false);\r\n        atk5.setVisible(false);\r\n        atk6.setVisible(false);\r\n        atk7.setVisible(false);\r\n        atk8.setVisible(false);\r\n        atk9.setVisible(false);\r\n        atk10.setVisible(false);\r\n        atk11.setVisible(false);\r\n        pasBalle.setVisible(false);\r\n        pasMana.setVisible(false);\r\n\r\n\r\n        if (tourHero != Integer.parseInt(nombre_héros) - 1) {\r\n            int temp = tourHero;\r\n            for (int j = tourHero + 1; j < liste_héros.length; j++) {\r\n                if (liste_héros[j].getCurrent_health() > 0) {\r\n                    tourHero = j;\r\n                    break;\r\n                }\r\n            }\r\n            if (tourHero == temp) {\r\n                tourEnemi(liste_enemy, liste_héros);\r\n            }\r\n        } else {\r\n            tourEnemi(liste_enemy, liste_héros);\r\n            for (int j = 0; j < liste_héros.length; j++) {\r\n                if (liste_héros[j].getCurrent_health() > 0) {\r\n                    tourHero = j;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        affFleche(tourHero);\r\n\r\n    }\r\n\r\n    public void attaque(int n, int cible) throws FileNotFoundException, InterruptedException {\r\n        if (n == 1) { //si attaque 1\r\n            double vie = liste_enemy[cible].getCurrent_health();\r\n            receiveDamage(Attaque((Warrior) liste_héros[tourHero]), liste_enemy[cible]); //cible recoit attaque\r\n            if (liste_enemy[cible].getCurrent_health() < 0) {\r\n                liste_enemy[cible].setCurrent_health(0);\r\n                affImageEN(cible, false, combat);\r\n            }\r\n            double diff = vie - abs(liste_enemy[cible].getCurrent_health());\r\n            writeData(String.valueOf(diff) + \" dégat infligé\", 1200, 300, textdégat);\r\n        }\r\n        if (n == 2) {\r\n            double vie = liste_enemy[cible].getCurrent_health();\r\n            receiveDamage(Berserk((Warrior) liste_héros[tourHero]), liste_enemy[cible]);\r\n            if (liste_enemy[cible].getCurrent_health() < 0) {\r\n                liste_enemy[cible].setCurrent_health(0);\r\n                affImageEN(cible, false, combat);\r\n            }\r\n            double diff = vie - abs(liste_enemy[cible].getCurrent_health());\r\n            writeData(String.valueOf(diff) + \" dégat infligé\", 1200, 300, textdégat);\r\n        }\r\n        if (n == 3) {\r\n            double vie = liste_enemy[cible].getCurrent_health();\r\n            receiveDamage(Attaque_au_couteau((Hunter) liste_héros[tourHero]), liste_enemy[cible]);\r\n            if (liste_enemy[cible].getCurrent_health() < 0) {\r\n                liste_enemy[cible].setCurrent_health(0);\r\n                affImageEN(cible, false, combat);\r\n            }\r\n            double diff = vie - abs(liste_enemy[cible].getCurrent_health());\r\n            writeData(String.valueOf(diff) + \" dégat infligé\", 1200, 300, textdégat);\r\n        }\r\n        if (n == 4) {\r\n            double vie = liste_enemy[cible].getCurrent_health();\r\n            receiveDamage(Tir((Hunter) liste_héros[tourHero]), liste_enemy[cible]);\r\n            if (liste_enemy[cible].getCurrent_health() < 0) {\r\n                liste_enemy[cible].setCurrent_health(0);\r\n                affImageEN(cible, false, combat);\r\n            }\r\n            double diff = vie - abs(liste_enemy[cible].getCurrent_health());\r\n            writeData(String.valueOf(diff) + \" dégat infligé\", 1200, 300, textdégat);\r\n        }\r\n        if (n == 5) {\r\n            double vie = liste_enemy[cible].getCurrent_health();\r\n            receiveDamage(bouleDeFeu((Mage) liste_héros[tourHero]), liste_enemy[cible]);\r\n            if (liste_enemy[cible].getCurrent_health() < 0) {\r\n                liste_enemy[cible].setCurrent_health(0);\r\n                affImageEN(cible, false, combat);\r\n            }\r\n            double diff = vie - abs(liste_enemy[cible].getCurrent_health());\r\n            writeData(String.valueOf(diff) + \" dégat infligé\", 1200, 300, textdégat);\r\n        }\r\n        if (n == 6) {\r\n            double vie = liste_enemy[cible].getCurrent_health();\r\n            receiveDamage(lameDeau((Mage) liste_héros[tourHero]), liste_enemy[cible]);\r\n            if (liste_enemy[cible].getCurrent_health() < 0) {\r\n                liste_enemy[cible].setCurrent_health(0);\r\n                affImageEN(cible, false, combat);\r\n            }\r\n            double diff = vie - abs(liste_enemy[cible].getCurrent_health());\r\n            writeData(String.valueOf(diff) + \" dégat infligé\", 1200, 300, textdégat);\r\n        }\r\n        if (n == 7) {\r\n            double vie = liste_enemy[cible].getCurrent_health();\r\n            receiveDamage(séisme((Mage) liste_héros[tourHero]), liste_enemy[cible]);\r\n            if (liste_enemy[cible].getCurrent_health() < 0) {\r\n                liste_enemy[cible].setCurrent_health(0);\r\n                affImageEN(cible, false, combat);\r\n            }\r\n            double diff = vie - abs(liste_enemy[cible].getCurrent_health());\r\n            writeData(String.valueOf(diff) + \" dégat infligé\", 1200, 300, textdégat);\r\n        }\r\n        if (n == 8) {\r\n            double vie = liste_enemy[cible].getCurrent_health();\r\n            receiveDamage(feuilleLame((Mage) liste_héros[tourHero]), liste_enemy[cible]);\r\n            if (liste_enemy[cible].getCurrent_health() < 0) {\r\n                liste_enemy[cible].setCurrent_health(0);\r\n                affImageEN(cible, false, combat);\r\n            }\r\n            double diff = vie - abs(liste_enemy[cible].getCurrent_health());\r\n            writeData(String.valueOf(diff) + \" dégat infligé\", 1200, 300, textdégat);\r\n        }\r\n        if (n == 9) {\r\n            double vie = liste_héros[cible].getCurrent_health();\r\n            heal((Healer) liste_héros[tourHero], (Combattant) liste_héros[cible]);\r\n            if (liste_héros[cible].getCurrent_health() > liste_héros[cible].getHealth()) {\r\n                liste_enemy[cible].setCurrent_health(liste_héros[cible].getHealth());\r\n            }\r\n            affHero(liste_classe[cible], cible, true);\r\n            double diff = abs(liste_héros[cible].getCurrent_health()) - vie;\r\n            writeData(String.valueOf(diff) + \" dégat soigné\", 1200, 300, textdégat);\r\n        }\r\n        if (n == 10) {\r\n            ressurect((Healer) liste_héros[tourHero], (Combattant) liste_héros[cible]);\r\n            if (liste_héros[cible].getCurrent_health() > liste_héros[cible].getHealth()) {\r\n                liste_enemy[cible].setCurrent_health(liste_héros[cible].getHealth());\r\n            }\r\n            affHero(liste_classe[cible], cible, true);\r\n            double diff = (liste_héros[cible].getCurrent_health());\r\n            writeData(String.valueOf(diff) + \" dégat soigné\", 1200, 300, textdégat);\r\n        }\r\n\r\n        if (cible == 0) {\r\n            if (combat == 1) {\r\n                writeData(\"Bone Arbalist \" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n            }\r\n            if (combat == 2) {\r\n                writeData(\"Brigand Hunter \" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n            }\r\n            if (combat == 3) {\r\n                writeData(\"Spitter \" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n            }\r\n            if (combat == 4) {\r\n                writeData(\"Swine Drummer \" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n            }\r\n            if (combat == 5) {\r\n                writeData(\"Heart of the dungeon \" + \"\\n\" + liste_enemy[0].getCurrent_health() + \"pv\\n\" + liste_enemy[0].getCurrent_def() + \" def\\nde type \" + liste_enemy[0].getType(), 100, 50, en1);\r\n            }\r\n            Ci10.setVisible(false);\r\n            Ci11.setVisible(false);\r\n            Ci12.setVisible(false);\r\n            Ci13.setVisible(false);\r\n            Ci14.setVisible(false);\r\n            Ci15.setVisible(false);\r\n            Ci16.setVisible(false);\r\n            Ci17.setVisible(false);\r\n            hero1.setVisible(false);\r\n            hero11.setVisible(false);\r\n\r\n        }  //affiche le statut actuel des monstres\r\n        else if (cible == 1) {\r\n            if (combat == 1) {\r\n                writeData(\"Bone Courtier\" + \"\\n\" + liste_enemy[1].getCurrent_health() + \"pv\\n\" + liste_enemy[1].getCurrent_def() + \" def\\nde type \" + liste_enemy[1].getType(), 400, 50, en2);\r\n            }\r\n            if (combat == 2) {\r\n                writeData(\"Brigand Raider\" + \"\\n\" + liste_enemy[1].getCurrent_health() + \"pv\\n\" + liste_enemy[1].getCurrent_def() + \" def\\nde type \" + liste_enemy[1].getType(), 400, 50, en2);\r\n            }\r\n            if (combat == 3) {\r\n                writeData(\"Cultist\" + \"\\n\" + liste_enemy[1].getCurrent_health() + \"pv\\n\" + liste_enemy[1].getCurrent_def() + \" def\\nde type \" + liste_enemy[1].getType(), 400, 50, en2);\r\n            }\r\n            if (combat == 4) {\r\n                writeData(\"Swine Slasher\" + \"\\n\" + liste_enemy[1].getCurrent_health() + \"pv\\n\" + liste_enemy[1].getCurrent_def() + \" def\\nde type \" + liste_enemy[1].getType(), 400, 50, en2);\r\n            }\r\n            Ci20.setVisible(false);\r\n            Ci21.setVisible(false);\r\n            Ci22.setVisible(false);\r\n            Ci23.setVisible(false);\r\n            Ci24.setVisible(false);\r\n            Ci25.setVisible(false);\r\n            Ci26.setVisible(false);\r\n            Ci27.setVisible(false);\r\n            hero2.setVisible(false);\r\n            hero21.setVisible(false);\r\n        }\r\n        else if (cible == 2) {\r\n            if (combat == 1) {\r\n                writeData(\"Bone Defender\" + \"\\n\" + liste_enemy[2].getCurrent_health() + \"pv\\n\" + liste_enemy[2].getCurrent_def() + \" def\\nde type \" + liste_enemy[2].getType(), 700, 50, en3);\r\n            }\r\n            if (combat == 2) {\r\n                writeData(\"Cutthroat\" + \"\\n\" + liste_enemy[2].getCurrent_health() + \"pv\\n\" + liste_enemy[2].getCurrent_def() + \" def\\nde type \" + liste_enemy[2].getType(), 700, 50, en3);\r\n            }\r\n            if (combat == 3) {\r\n                writeData(\"Gargoyle\" + \"\\n\" + liste_enemy[2].getCurrent_health() + \"pv\\n\" + liste_enemy[2].getCurrent_def() + \" def\\nde type \" + liste_enemy[2].getType(), 700, 50, en3);\r\n            }\r\n            if (combat == 4) {\r\n                writeData(\"Swine Skiver\" + \"\\n\" + liste_enemy[2].getCurrent_health() + \"pv\\n\" + liste_enemy[2].getCurrent_def() + \" def\\nde type \" + liste_enemy[2].getType(), 700, 50, en3);\r\n            }\r\n            Ci30.setVisible(false);\r\n            Ci31.setVisible(false);\r\n            Ci32.setVisible(false);\r\n            Ci33.setVisible(false);\r\n            Ci34.setVisible(false);\r\n            Ci35.setVisible(false);\r\n            Ci36.setVisible(false);\r\n            Ci37.setVisible(false);\r\n            hero3.setVisible(false);\r\n            hero31.setVisible(false);\r\n        }\r\n        else if (cible == 3) {\r\n            if (combat == 1) {\r\n                writeData(\"Bone Soldier\" + \"\\n\" + liste_enemy[3].getCurrent_health() + \"pv\\n\" + liste_enemy[3].getCurrent_def() + \" def\\nde type \" + liste_enemy[3].getType(), 1000, 50, en4);\r\n            }\r\n            if (combat == 2) {\r\n                writeData(\"Vvulf\" + \"\\n\" + liste_enemy[3].getCurrent_health() + \"pv\\n\" + liste_enemy[3].getCurrent_def() + \" def\\nde type \" + liste_enemy[3].getType(), 1000, 50, en4);\r\n            }\r\n            if (combat == 3) {\r\n                writeData(\"Ghoul\" + \"\\n\" + liste_enemy[3].getCurrent_health() + \"pv\\n\" + liste_enemy[3].getCurrent_def() + \" def\\nde type \" + liste_enemy[3].getType(), 1000, 50, en4);\r\n            }\r\n            if (combat == 4) {\r\n                writeData(\"Swine Chopper\" + \"\\n\" + liste_enemy[3].getCurrent_health() + \"pv\\n\" + liste_enemy[3].getCurrent_def() + \" def\\nde type \" + liste_enemy[3].getType(), 1000, 50, en4);\r\n            }\r\n            Ci40.setVisible(false);\r\n            Ci41.setVisible(false);\r\n            Ci42.setVisible(false);\r\n            Ci43.setVisible(false);\r\n            Ci44.setVisible(false);\r\n            Ci45.setVisible(false);\r\n            Ci46.setVisible(false);\r\n            Ci47.setVisible(false);\r\n            hero4.setVisible(false);\r\n            hero41.setVisible(false);\r\n        }\r\n\r\n        atk1.setVisible(false);\r\n        atk2.setVisible(false);\r\n        atk3.setVisible(false);\r\n        atk4.setVisible(false);\r\n        atk5.setVisible(false);\r\n        atk6.setVisible(false);\r\n        atk7.setVisible(false);\r\n        atk8.setVisible(false);\r\n        atk9.setVisible(false);\r\n        atk10.setVisible(false);\r\n        atk11.setVisible(false);\r\n        pasBalle.setVisible(false);\r\n        pasMana.setVisible(false);\r\n\r\n\r\n        if (tourHero != Integer.parseInt(nombre_héros) - 1) {\r\n            int temp = tourHero;\r\n            for (int j = tourHero + 1; j < liste_héros.length; j++) {\r\n                if (liste_héros[j].getCurrent_health() > 0) {\r\n                    tourHero = j;\r\n                    break;\r\n                }\r\n            }\r\n            if (tourHero == temp) {\r\n                tourEnemi(liste_enemy, liste_héros);\r\n            }\r\n        } else {\r\n            tourEnemi(liste_enemy, liste_héros);\r\n            for (int j = 0; j < liste_héros.length; j++) {\r\n                if (liste_héros[j].getCurrent_health() > 0) {\r\n                    tourHero = j;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        affFleche(tourHero);\r\n        int fin = 0; //initialise le compteur de fin\r\n\r\n\r\n        for (int i = 0; i < liste_enemy.length; i++) {\r\n            if (liste_enemy[i].getCurrent_health() > 0) {\r\n                fin += 1; //si ennemi en vie\r\n            }\r\n        }\r\n\r\n\r\n        if (fin == 0) {// si aucun ennemi en vie\r\n            tourHero = 0;\r\n            menu.setVisible(false);\r\n            if (combat == 5) { //si dernier combat\r\n                perdu.setVisible(true);\r\n                perdu.setText(\"vous avez vaincu le donjon\");\r\n            } else {\r\n                rec.setVisible(true);\r\n            }\r\n            textdégat.setVisible(false);\r\n            textdégatrecu.setVisible(false);\r\n            ien1.setVisible(false);\r\n            ien2.setVisible(false);\r\n            ien3.setVisible(false);\r\n            ien4.setVisible(false);\r\n            imhe1.setVisible(false);\r\n            imhe2.setVisible(false);\r\n            imhe3.setVisible(false);\r\n            imhe4.setVisible(false);\r\n            fl1.setVisible(false);\r\n            fl2.setVisible(false);\r\n            fl3.setVisible(false);\r\n            fl4.setVisible(false);\r\n            en1.setVisible(false);\r\n            en2.setVisible(false);\r\n            en3.setVisible(false);\r\n            en4.setVisible(false);\r\n            he1.setVisible(false);\r\n            he2.setVisible(false);\r\n            he3.setVisible(false);\r\n            he4.setVisible(false);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //----------------------------------------------------------------------------\r\n    public void tourEnemi(Enemy[] liste_enemy, Hero[] liste_héros) throws InterruptedException, FileNotFoundException {\r\n        String listedégat = new String();\r\n        int fin = 0;\r\n        for (int i = 0; i < liste_enemy.length; i++) {\r\n            if (liste_enemy[i].getCurrent_health() > 0) { //si ennemi en vie\r\n                boolean var3 = true;\r\n                while (var3) {\r\n\r\n                    Random r = new Random();\r\n                    int n = 0; //attaque héro aléatoire\r\n                    n = r.nextInt(liste_héros.length); //si vivant attaque héros random\r\n\r\n                    if (liste_héros[n].getCurrent_health() > 0) {\r\n\r\n                        double vie = liste_héros[n].getCurrent_health();\r\n                        receiveDamage(charge(liste_enemy[i]), liste_héros[n]); //les ennemis n'attaquent pas le mort\r\n                        var3 = false;\r\n                        if (liste_héros[n].getCurrent_health() > 0) {\r\n                            double diff = vie - liste_héros[n].getCurrent_health();\r\n                            listedégat += diff + \", \";\r\n                            affHero(liste_classe[n], n, true);\r\n                        } else {\r\n                            double diff = vie;\r\n                            listedégat += diff + \", \";\r\n                            liste_héros[n].setCurrent_health(0);\r\n                            affHero(liste_classe[n], n, false);\r\n                            for (int j = 0; j < liste_héros.length; j++) {//vérifie liste héro si vivant après chaque attaque\r\n                                if (liste_héros[j].getCurrent_health() <= 0) {\r\n                                    fin += 1;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        writeData(\"dégats recus: \" + listedégat, 1200, 350, textdégatrecu);\r\n\r\n        if (fin == liste_héros.length) { //si tout héros mort\r\n            perdu.setVisible(true);\r\n            end.setVisible(true);\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void Rec(MouseEvent event) {\r\n        rec.setVisible(false); //efface bouton recompense\r\n        writeData(liste_classe[tourHero], 150, 100, reclabel);\r\n\r\n        if (liste_classe[tourHero].equals(\"hunter\")) { //affiche le text d'arme correspondant à la classe et au level\r\n            recarme.setVisible(true);\r\n            if (combat == 1) {\r\n                recarme.setText(\"pistolet huilé 15 degat bonus et 10 dégat type feu\");\r\n            } else if (combat == 2) {\r\n                recarme.setText(\"pistolet de Reaver 20 degat bonus et 15 dégat type terre\");\r\n            } else if (combat == 3) {\r\n                recarme.setText(\"god pistol 25 degat bonus et 20 dégat type eau\");\r\n            }\r\n            if (combat == 4) {\r\n                recarme.setVisible(false);\r\n            }\r\n            recmana.setVisible(false);\r\n        } else if (liste_classe[tourHero].equals(\"healer\")) {\r\n            recarme.setVisible(true);\r\n            if (combat == 1) {\r\n                recarme.setText(\"baton de cerisié 15 soin bonus\");\r\n            } else if (combat == 2) {\r\n                recarme.setText(\"baton béni par un saint 20 soin bonus\");\r\n            } else if (combat == 3) {\r\n                recarme.setText(\"Crosse papal avec une pomme d'éden 25 soin bonus\");\r\n            }\r\n            if (combat == 4) {\r\n                recarme.setVisible(false);\r\n            }\r\n            recmana.setVisible(true);\r\n            recmana.setText(\"mana max +10\");\r\n        } else if (liste_classe[tourHero].equals(\"warrior\")) {\r\n            recarme.setVisible(true);\r\n            if (combat == 1) {\r\n                recarme.setText(\"épé de bonne facture 15 dégat bonus 10 dégat de type feuille\");\r\n            } else if (combat == 2) {\r\n                recarme.setText(\"épé royale 20 dégat bonus 15 dégat de type eau\");\r\n            } else if (combat == 3) {\r\n                recarme.setText(\"Excalibur 25 dégat bonus 20 dégat de type feu\");\r\n            }\r\n            if (combat == 4) {\r\n                recarme.setVisible(false);\r\n            }\r\n            recmana.setVisible(false);\r\n        } else if (liste_classe[tourHero].equals(\"mage\")) {\r\n            recarme.setVisible(true);\r\n            if (combat == 1) {\r\n                recarme.setText(\"grimoire poussiéreux 15 dégat bonus 10 dégat de type feuille\");\r\n            } else if (combat == 2) {\r\n                recarme.setText(\"grimoire oublié 20 dégat bonus 15 dégat de type eau\");\r\n            } else if (combat == 3) {\r\n                recarme.setText(\"Necronomicon 25 dégat bonus 20 dégat de type terre\");\r\n            }\r\n            if (combat == 4) {\r\n                recarme.setVisible(false);\r\n            }\r\n            recmana.setVisible(true);\r\n            recmana.setText(\"mana max +10\");\r\n        }\r\n        recdef.setVisible(true);\r\n        recdef.setText(\"def +10\");\r\n        recchance.setVisible(true);\r\n        recchance.setText(\"chance +10\");\r\n        recnour.setVisible(true);\r\n        recnour.setText(\"repas fait maison +50pv\");\r\n        recpotion.setVisible(true);\r\n        if (combat == 2) {\r\n            sortir.setText(\"s'enfoncer dans la crypte\");\r\n        }\r\n        if (combat == 3) {\r\n            sortir.setText(\"suivre les cris\");\r\n        }\r\n        if (combat == 4) {\r\n            sortir.setText(\"confronter la source\");\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void rdef(MouseEvent event) {\r\n        liste_héros[tourHero].setDef(liste_héros[tourHero].getDef() + 10);\r\n        liste_héros[tourHero].setCurrent_def(liste_héros[tourHero].getDef());\r\n        tourHero += 1;\r\n        reclabel.setVisible(false);\r\n        recchance.setVisible(false);\r\n        recdef.setVisible(false);\r\n        recchance.setVisible(false);\r\n        recnour.setVisible(false);\r\n        recmana.setVisible(false);\r\n        recarme.setVisible(false);\r\n        recpotion.setVisible(false);\r\n        if (tourHero == liste_héros.length) {\r\n            writeData(\"fin de la zone\", 150, 100, reclabel);\r\n            sortir.setVisible(true);\r\n        } else {\r\n            rec.setVisible(true);\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void rchance(MouseEvent event) {\r\n        liste_héros[tourHero].setChance(liste_héros[tourHero].getChance() + 10);\r\n        tourHero += 1;\r\n        reclabel.setVisible(false);\r\n        recchance.setVisible(false);\r\n        recdef.setVisible(false);\r\n        recchance.setVisible(false);\r\n        recnour.setVisible(false);\r\n        recmana.setVisible(false);\r\n        recarme.setVisible(false);\r\n        recpotion.setVisible(false);\r\n        if (tourHero == liste_héros.length) {\r\n            writeData(\"fin de la zone\", 150, 100, reclabel);\r\n            sortir.setVisible(true);\r\n        } else {\r\n            rec.setVisible(true);\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void rmana(MouseEvent event) {\r\n        liste_héros[tourHero].setMagie(liste_héros[tourHero].getMagie() + 10);\r\n        liste_héros[tourHero].setCurrent_magie(liste_héros[tourHero].getMagie());\r\n        tourHero += 1;\r\n        reclabel.setVisible(false);\r\n        recchance.setVisible(false);\r\n        recdef.setVisible(false);\r\n        recchance.setVisible(false);\r\n        recnour.setVisible(false);\r\n        recmana.setVisible(false);\r\n        recarme.setVisible(false);\r\n        recpotion.setVisible(false);\r\n        if (tourHero == liste_héros.length) {\r\n            writeData(\"fin de la zone\", 150, 100, reclabel);\r\n            sortir.setVisible(true);\r\n        } else {\r\n            rec.setVisible(true);\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void rnour(MouseEvent event) {\r\n        consommable food = new consommable();\r\n        food.setClasse(\"Food\");\r\n        food.setName(\"fin de la zone\");\r\n        food.setSoin(50);\r\n        liste_héros[tourHero].addConsumable(food);\r\n        tourHero += 1;\r\n        reclabel.setVisible(false);\r\n        recchance.setVisible(false);\r\n        recdef.setVisible(false);\r\n        recchance.setVisible(false);\r\n        recnour.setVisible(false);\r\n        recmana.setVisible(false);\r\n        recarme.setVisible(false);\r\n        recpotion.setVisible(false);\r\n        if (tourHero == liste_héros.length) {\r\n            writeData(\"fin de la zone\", 150, 100, reclabel);\r\n            sortir.setVisible(true);\r\n        } else {\r\n            rec.setVisible(true);\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void rpot1(ActionEvent event) {\r\n        consommable potion = new consommable();\r\n        potion.setClasse(\"Potion\");\r\n        potion.setName(\"potion de mana\");\r\n        potion.setMana(10);\r\n        liste_héros[tourHero].addConsumable(potion);\r\n        tourHero += 1;\r\n        reclabel.setVisible(false);\r\n        recchance.setVisible(false);\r\n        recdef.setVisible(false);\r\n        recchance.setVisible(false);\r\n        recnour.setVisible(false);\r\n        recmana.setVisible(false);\r\n        recarme.setVisible(false);\r\n        recpotion.setVisible(false);\r\n        if (tourHero == liste_héros.length) {\r\n            writeData(\"fin de la zone\", 150, 100, reclabel);\r\n            sortir.setVisible(true);\r\n        } else {\r\n            rec.setVisible(true);\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void rpot2(ActionEvent event) {\r\n        consommable potion = new consommable();\r\n        potion.setClasse(\"Potion\");\r\n        potion.setName(\"potion de vie\");\r\n        potion.setSoin(40);\r\n        liste_héros[tourHero].addConsumable(potion);\r\n        tourHero += 1;\r\n        reclabel.setVisible(false);\r\n        recchance.setVisible(false);\r\n        recdef.setVisible(false);\r\n        recchance.setVisible(false);\r\n        recnour.setVisible(false);\r\n        recmana.setVisible(false);\r\n        recarme.setVisible(false);\r\n        recpotion.setVisible(false);\r\n        if (tourHero == liste_héros.length) {\r\n            writeData(\"fin de la zone\", 150, 100, reclabel);\r\n            sortir.setVisible(true);\r\n        } else {\r\n            rec.setVisible(true);\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void rpot3(ActionEvent event) {\r\n        consommable potion = new consommable();\r\n        potion.setClasse(\"Potion\");\r\n        potion.setName(\"potion de dégat\");\r\n        potion.setBonus_degat(10);\r\n        liste_héros[tourHero].addConsumable(potion);\r\n        tourHero += 1;\r\n        reclabel.setVisible(false);\r\n        recchance.setVisible(false);\r\n        recdef.setVisible(false);\r\n        recchance.setVisible(false);\r\n        recnour.setVisible(false);\r\n        recmana.setVisible(false);\r\n        recarme.setVisible(false);\r\n        recpotion.setVisible(false);\r\n        if (tourHero == liste_héros.length) {\r\n            writeData(\"fin de la zone\", 150, 100, reclabel);\r\n            sortir.setVisible(true);\r\n        } else {\r\n            rec.setVisible(true);\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void rpot4(ActionEvent event) {\r\n        consommable potion = new consommable();\r\n        potion.setClasse(\"Potion\");\r\n        potion.setName(\"potion d'armure\");\r\n        potion.setBonus_def(50);\r\n        liste_héros[tourHero].addConsumable(potion);\r\n        tourHero += 1;\r\n        reclabel.setVisible(false);\r\n        recchance.setVisible(false);\r\n        recdef.setVisible(false);\r\n        recchance.setVisible(false);\r\n        recnour.setVisible(false);\r\n        recmana.setVisible(false);\r\n        recarme.setVisible(false);\r\n        recpotion.setVisible(false);\r\n        if (tourHero == liste_héros.length) {\r\n            writeData(\"fin de la zone\", 150, 100, reclabel);\r\n            sortir.setVisible(true);\r\n        } else {\r\n            rec.setVisible(true);\r\n        }\r\n    }\r\n\r\n\r\n    @FXML\r\n    void rarme(MouseEvent event) {\r\n        if (liste_classe[tourHero].equals(\"healer\")) {\r\n            Weapon arme_equip = liste_héros[tourHero].getInventaire_weapon()[liste_héros[tourHero].getWeapon_equipped()];\r\n            if (combat == 1) {\r\n                arme_equip.setBonus_soin(15);\r\n                arme_equip.setName(\"Baton de cerisié\");\r\n                arme_equip.setType(\"terre\");\r\n            } else if (combat == 2) {\r\n                arme_equip.setBonus_soin(20);\r\n                arme_equip.setName(\"Baton béni par un saint\");\r\n                arme_equip.setType(\"feu\");\r\n            } else if (combat == 3) {\r\n                arme_equip.setBonus_soin(25);\r\n                arme_equip.setName(\"Crosse papal avec une pomme d'éden\");\r\n                arme_equip.setType(\"feuille\");\r\n            }\r\n        } else if (liste_classe[tourHero].equals(\"hunter\")) {\r\n            Weapon arme_equip = liste_héros[tourHero].getInventaire_weapon()[liste_héros[tourHero].getWeapon_equipped()];\r\n            if (combat == 1) {\r\n                arme_equip.setBonus_degat(15);\r\n                arme_equip.setName(\"pistolet huilé\");\r\n                arme_equip.setType(\"feu\");\r\n                arme_equip.setType_degat(10);\r\n            } else if (combat == 2) {\r\n                arme_equip.setBonus_degat(20);\r\n                arme_equip.setName(\"Pistolet de Reaver\");\r\n                arme_equip.setType(\"terrre\");\r\n                arme_equip.setType_degat(15);\r\n            } else if (combat == 3) {\r\n                arme_equip.setBonus_degat(15);\r\n                arme_equip.setName(\"fod pistol\");\r\n                arme_equip.setType(\"eau\");\r\n                arme_equip.setType_degat(20);\r\n            }\r\n        } else if (liste_classe[tourHero].equals(\"warrior\")) {\r\n            Weapon arme_equip = liste_héros[tourHero].getInventaire_weapon()[liste_héros[tourHero].getWeapon_equipped()];\r\n            if (combat == 1) {\r\n                arme_equip.setBonus_degat(15);\r\n                arme_equip.setName(\"Épé de bonne facture\");\r\n                arme_equip.setType(\"feuille\");\r\n                arme_equip.setType_degat(10);\r\n                liste_héros[tourHero].addWeapon(arme_equip);\r\n            } else if (combat == 2) {\r\n                arme_equip.setBonus_degat(20);\r\n                arme_equip.setName(\"Épé royale\");\r\n                arme_equip.setType(\"eau\");\r\n                arme_equip.setType_degat(15);\r\n            } else if (combat == 3) {\r\n                arme_equip.setBonus_degat(25);\r\n                arme_equip.setName(\"Excalibur\");\r\n                arme_equip.setType(\"feu\");\r\n                arme_equip.setType_degat(20);\r\n            }\r\n        } else if (liste_classe[tourHero].equals(\"mage\")) {\r\n            Weapon arme_equip = liste_héros[tourHero].getInventaire_weapon()[liste_héros[tourHero].getWeapon_equipped()];\r\n            if (combat == 1) {\r\n                arme_equip.setBonus_degat(15);\r\n                arme_equip.setName(\"Grimoire poussièreux\");\r\n                arme_equip.setType(\"feuille\");\r\n                arme_equip.setType_degat(10);\r\n            } else if (combat == 2) {\r\n                arme_equip.setBonus_degat(20);\r\n                arme_equip.setName(\"Grimoire oublié\");\r\n                arme_equip.setType(\"eau\");\r\n                arme_equip.setType_degat(15);\r\n            } else if (combat == 3) {\r\n                arme_equip.setBonus_degat(25);\r\n                arme_equip.setName(\"Necronomicon\");\r\n                arme_equip.setType(\"terre\");\r\n                arme_equip.setType_degat(20);\r\n            }\r\n        }\r\n        tourHero += 1;\r\n        reclabel.setVisible(false);\r\n        recchance.setVisible(false);\r\n        recdef.setVisible(false);\r\n        recchance.setVisible(false);\r\n        recnour.setVisible(false);\r\n        recmana.setVisible(false);\r\n        recarme.setVisible(false);\r\n        recpotion.setVisible(false);\r\n        if (tourHero == liste_héros.length) {\r\n            writeData(\"fin de la zone\", 150, 100, reclabel);\r\n            sortir.setVisible(true);\r\n        } else {\r\n            rec.setVisible(true);\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void sortir(MouseEvent event) throws IOException {\r\n        reclabel.setVisible(false);\r\n        sortir.setVisible(false);\r\n        but1.setVisible(true);\r\n        if (combat == 1) {\r\n            Ci10.setText(\"Brigand Hunter\"); //change nom des ennemis dans item selon combat\r\n            Ci11.setText(\"Brigand Hunter\");\r\n            Ci12.setText(\"Brigand Hunter\");\r\n            Ci13.setText(\"Brigand Hunter\");\r\n            Ci14.setText(\"Brigand Hunter\");\r\n            Ci15.setText(\"Brigand Hunter\");\r\n            Ci16.setText(\"Brigand Hunter\");\r\n            Ci17.setText(\"Brigand Hunter\");\r\n\r\n            Ci20.setText(\"Brigand Raider\");\r\n            Ci21.setText(\"Brigand Raider\");\r\n            Ci22.setText(\"Brigand Raider\");\r\n            Ci23.setText(\"Brigand Raider\");\r\n            Ci24.setText(\"Brigand Raider\");\r\n            Ci25.setText(\"Brigand Raider\");\r\n            Ci26.setText(\"Brigand Raider\");\r\n            Ci27.setText(\"Brigand Raider\");\r\n\r\n            Ci30.setText(\"Cutthroat\");\r\n            Ci31.setText(\"Cutthroat\");\r\n            Ci32.setText(\"Cutthroat\");\r\n            Ci33.setText(\"Cutthroat\");\r\n            Ci34.setText(\"Cutthroat\");\r\n            Ci35.setText(\"Cutthroat\");\r\n            Ci36.setText(\"Cutthroat\");\r\n            Ci37.setText(\"Cutthroat\");\r\n\r\n            Ci40.setText(\"Vvulf\");\r\n            Ci41.setText(\"Vvulf\");\r\n            Ci42.setText(\"Vvulf\");\r\n            Ci43.setText(\"Vvulf\");\r\n            Ci44.setText(\"Vvulf\");\r\n            Ci45.setText(\"Vvulf\");\r\n            Ci46.setText(\"Vvulf\");\r\n            Ci47.setText(\"Vvulf\");\r\n\r\n            but1.setText(\"entrer dans la crypte\");\r\n            String path = \"src/main/resources/picture/dungeon2/dungeon2.png\";\r\n            InputStream stream = new FileInputStream(path);\r\n            Image image = new Image(stream);\r\n            fond.setImage(image);\r\n        } else if (combat == 2) {\r\n            Ci10.setText(\"Spitter \");\r\n            Ci11.setText(\"Spitter \");\r\n            Ci12.setText(\"Spitter \");\r\n            Ci13.setText(\"Spitter \");\r\n            Ci14.setText(\"Spitter \");\r\n            Ci15.setText(\"Spitter \");\r\n            Ci16.setText(\"Spitter \");\r\n            Ci17.setText(\"Spitter \");\r\n\r\n            Ci20.setText(\"Cultist \");\r\n            Ci21.setText(\"Cultist \");\r\n            Ci22.setText(\"Cultist \");\r\n            Ci23.setText(\"Cultist \");\r\n            Ci24.setText(\"Cultist \");\r\n            Ci25.setText(\"Cultist \");\r\n            Ci26.setText(\"Cultist \");\r\n            Ci27.setText(\"Cultist \");\r\n\r\n            Ci30.setText(\"Gargoyle\");\r\n            Ci31.setText(\"Gargoyle\");\r\n            Ci32.setText(\"Gargoyle\");\r\n            Ci33.setText(\"Gargoyle\");\r\n            Ci34.setText(\"Gargoyle\");\r\n            Ci35.setText(\"Gargoyle\");\r\n            Ci36.setText(\"Gargoyle\");\r\n            Ci37.setText(\"Gargoyle\");\r\n\r\n            Ci40.setText(\"Ghoul\");\r\n            Ci41.setText(\"Ghoul\");\r\n            Ci42.setText(\"Ghoul\");\r\n            Ci43.setText(\"Ghoul\");\r\n            Ci44.setText(\"Ghoul\");\r\n            Ci45.setText(\"Ghoul\");\r\n            Ci46.setText(\"Ghoul\");\r\n            Ci47.setText(\"Ghoul\");\r\n            but1.setText(\"avancer dans les sombres couloirs\");\r\n            String path = \"src/main/resources/picture/dungeon3/dungeon3.png\";\r\n            InputStream stream = new FileInputStream(path);\r\n            Image image = new Image(stream);\r\n            fond.setImage(image);\r\n        } else if (combat == 3) {\r\n            Ci10.setText(\"Swine Drummer \");\r\n            Ci11.setText(\"Swine Drummer \");\r\n            Ci12.setText(\"Swine Drummer \");\r\n            Ci13.setText(\"Swine Drummer \");\r\n            Ci14.setText(\"Swine Drummer \");\r\n            Ci15.setText(\"Swine Drummer \");\r\n            Ci16.setText(\"Swine Drummer \");\r\n            Ci17.setText(\"Swine Drummer \");\r\n\r\n            Ci20.setText(\"Swine Slasher \");\r\n            Ci21.setText(\"Swine Slasher \");\r\n            Ci22.setText(\"Swine Slasher \");\r\n            Ci23.setText(\"Swine Slasher \");\r\n            Ci24.setText(\"Swine Slasher \");\r\n            Ci25.setText(\"Swine Slasher \");\r\n            Ci26.setText(\"Swine Slasher \");\r\n            Ci27.setText(\"Swine Slasher \");\r\n\r\n            Ci30.setText(\"Swine Skiver\");\r\n            Ci31.setText(\"Swine Skiver\");\r\n            Ci32.setText(\"Swine Skiver\");\r\n            Ci33.setText(\"Swine Skiver\");\r\n            Ci34.setText(\"Swine Skiver\");\r\n            Ci35.setText(\"Swine Skiver\");\r\n            Ci36.setText(\"Swine Skiver\");\r\n            Ci37.setText(\"Swine Skiver\");\r\n\r\n            Ci40.setText(\"Swine Chopper\");\r\n            Ci41.setText(\"Swine Chopper\");\r\n            Ci42.setText(\"Swine Chopper\");\r\n            Ci43.setText(\"Swine Chopper\");\r\n            Ci44.setText(\"Swine Chopper\");\r\n            Ci45.setText(\"Swine Chopper\");\r\n            Ci46.setText(\"Swine Chopper\");\r\n            Ci47.setText(\"Swine Chopper\");\r\n            but1.setText(\"chercher la source des cris\");\r\n            String path = \"src/main/resources/picture/dungeon4/dungeon4.png\";\r\n            InputStream stream = new FileInputStream(path);\r\n            Image image = new Image(stream);\r\n            fond.setImage(image);\r\n        } else if (combat == 4) {\r\n            but1.setText(\"contempler l'horreur\");\r\n\r\n            String path = \"src/main/resources/picture/finaldungeon/Darkest dungeon.png\";\r\n            InputStream stream = new FileInputStream(path);\r\n            Image image = new Image(stream);\r\n            fond.setImage(image);\r\n        }\r\n        combat += 1;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/GUI/ControllerDungeon.java b/src/main/java/GUI/ControllerDungeon.java
--- a/src/main/java/GUI/ControllerDungeon.java	(revision 4b841a6ac7ec994904e70d43068c20c59c9bd431)
+++ b/src/main/java/GUI/ControllerDungeon.java	(date 1670873540973)
@@ -9,6 +9,8 @@
 import javafx.scene.image.Image;
 import javafx.scene.image.ImageView;
 import javafx.scene.input.MouseEvent;
+import javafx.scene.media.Media;
+import javafx.scene.media.MediaPlayer;
 import javafx.scene.text.Text;
 import jeu_console.Combattant.Combattant;
 import jeu_console.Combattant.Enemy;
@@ -20,10 +22,7 @@
 import jeu_console.Item.arme_potion.Weapon;
 import jeu_console.Item.arme_potion.consommable;
 
-import java.io.FileInputStream;
-import java.io.FileNotFoundException;
-import java.io.IOException;
-import java.io.InputStream;
+import java.io.*;
 import java.util.Random;
 
 import static java.lang.Math.abs;
@@ -58,6 +57,8 @@
     private int combat = 1;
     @FXML
     private ImageView end;
+    @FXML
+    private ImageView faiblesse;
 
 
     @FXML
@@ -802,6 +803,7 @@
 
     @FXML
     public void aff(MouseEvent event) throws FileNotFoundException {
+        faiblesse.setVisible(true);
         if (combat == 1) {
             String nombre_héros = lecture(2);
             if (nombre_héros.equals("1")) {
@@ -976,35 +978,40 @@
                     liste_enemy[i] = Enemy.genEnemy(combat);
 
                     if (liste_classe[i].equals("healer")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("healer", i, true);
                         } else {
                             affHero("healer", i, false);
                         }
-                    } else if (liste_classe[i].equals("mage")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                    }
+                    else if (liste_classe[i].equals("mage")) {
+
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
+
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("mage", i, true);
                         } else {
                             affHero("mage", i, false);
                         }
-                    } else if (liste_classe[i].equals("hunter")) {
+                    }
+                    else if (liste_classe[i].equals("hunter")) {
                         liste_héros[i].setNbfleche(liste_héros[i].getNbfleche() + 5);
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("hunter", i, true);
                         } else {
                             affHero("hunter", i, false);
                         }
-                    } else {
+                    }
+                    else {
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("warrior", i, true);
                         } else {
@@ -1028,35 +1035,38 @@
                 for (int i = 0; i < liste_enemy.length; i++) {
                     liste_enemy[i] = Enemy.genEnemy(combat);
                     if (liste_classe[i].equals("healer")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("healer", i, true);
                         } else {
                             affHero("healer", i, false);
                         }
-                    } else if (liste_classe[i].equals("mage")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                    }
+                    else if (liste_classe[i].equals("mage")) {
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("mage", i, true);
                         } else {
                             affHero("mage", i, false);
                         }
-                    } else if (liste_classe[i].equals("hunter")) {
+                    }
+                    else if (liste_classe[i].equals("hunter")) {
                         liste_héros[i].setNbfleche(liste_héros[i].getNbfleche() + 5);
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("hunter", i, true);
                         } else {
                             affHero("hunter", i, false);
                         }
-                    } else {
+                    }
+                    else {
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("warrior", i, true);
                         } else {
@@ -1086,35 +1096,38 @@
                 for (int i = 0; i < liste_enemy.length; i++) {
                     liste_enemy[i] = Enemy.genEnemy(combat);
                     if (liste_classe[i].equals("healer")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("healer", i, true);
                         } else {
                             affHero("healer", i, false);
                         }
-                    } else if (liste_classe[i].equals("mage")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                    }
+                    else if (liste_classe[i].equals("mage")) {
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("mage", i, true);
                         } else {
                             affHero("mage", i, false);
                         }
-                    } else if (liste_classe[i].equals("hunter")) {
+                    }
+                    else if (liste_classe[i].equals("hunter")) {
                         liste_héros[i].setNbfleche(liste_héros[i].getNbfleche() + 5);
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("hunter", i, true);
                         } else {
                             affHero("hunter", i, false);
                         }
-                    } else {
+                    }
+                    else {
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("warrior", i, true);
                         } else {
@@ -1149,34 +1162,37 @@
                     liste_enemy[i] = Enemy.genEnemy(combat);
                     if (liste_classe[i].equals("healer")) {
                         if (liste_héros[i].getCurrent_health() > 0) {
-                            if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                                liste_héros[i].setMagie(liste_héros[i].getMagie());
+                            if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                                liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                             } else {
-                                liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                                liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                             }
                             affHero("healer", i, true);
                         } else {
                             affHero("healer", i, false);
                         }
-                    } else if (liste_classe[i].equals("mage")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                    }
+                    else if (liste_classe[i].equals("mage")) {
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("mage", i, true);
                         } else {
                             affHero("mage", i, false);
                         }
-                    } else if (liste_classe[i].equals("hunter")) {
+                    }
+                    else if (liste_classe[i].equals("hunter")) {
                         liste_héros[i].setNbfleche(liste_héros[i].getNbfleche() + 5);
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("hunter", i, true);
                         } else {
                             affHero("hunter", i, false);
                         }
-                    } else {
+                    }
+                    else {
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("warrior", i, true);
                         } else {
@@ -1215,10 +1231,10 @@
                     liste_enemy[i] = Enemy.genEnemy(combat);
 
                     if (liste_classe[i].equals("healer")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("healer", i, true);
@@ -1226,10 +1242,10 @@
                             affHero("healer", i, false);
                         }
                     } else if (liste_classe[i].equals("mage")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("mage", i, true);
@@ -1267,10 +1283,10 @@
                 for (int i = 0; i < liste_enemy.length; i++) {
                     liste_enemy[i] = Enemy.genEnemy(combat);
                     if (liste_classe[i].equals("healer")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("healer", i, true);
@@ -1278,10 +1294,10 @@
                             affHero("healer", i, false);
                         }
                     } else if (liste_classe[i].equals("mage")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("mage", i, true);
@@ -1325,10 +1341,10 @@
                 for (int i = 0; i < liste_enemy.length; i++) {
                     liste_enemy[i] = Enemy.genEnemy(combat);
                     if (liste_classe[i].equals("healer")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("healer", i, true);
@@ -1336,10 +1352,10 @@
                             affHero("healer", i, false);
                         }
                     } else if (liste_classe[i].equals("mage")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("mage", i, true);
@@ -1388,20 +1404,20 @@
                     liste_enemy[i] = Enemy.genEnemy(combat);
                     if (liste_classe[i].equals("healer")) {
                         if (liste_héros[i].getCurrent_health() > 0) {
-                            if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                                liste_héros[i].setMagie(liste_héros[i].getMagie());
+                            if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                                liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                             } else {
-                                liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                                liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                             }
                             affHero("healer", i, true);
                         } else {
                             affHero("healer", i, false);
                         }
                     } else if (liste_classe[i].equals("mage")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("mage", i, true);
@@ -1454,10 +1470,10 @@
                     liste_enemy[i] = Enemy.genEnemy(combat);
 
                     if (liste_classe[i].equals("healer")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("healer", i, true);
@@ -1465,10 +1481,10 @@
                             affHero("healer", i, false);
                         }
                     } else if (liste_classe[i].equals("mage")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("mage", i, true);
@@ -1506,10 +1522,10 @@
                 for (int i = 0; i < liste_enemy.length; i++) {
                     liste_enemy[i] = Enemy.genEnemy(combat);
                     if (liste_classe[i].equals("healer")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("healer", i, true);
@@ -1517,10 +1533,10 @@
                             affHero("healer", i, false);
                         }
                     } else if (liste_classe[i].equals("mage")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("mage", i, true);
@@ -1564,10 +1580,10 @@
                 for (int i = 0; i < liste_enemy.length; i++) {
                     liste_enemy[i] = Enemy.genEnemy(combat);
                     if (liste_classe[i].equals("healer")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("healer", i, true);
@@ -1575,10 +1591,10 @@
                             affHero("healer", i, false);
                         }
                     } else if (liste_classe[i].equals("mage")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("mage", i, true);
@@ -1627,20 +1643,20 @@
                     liste_enemy[i] = Enemy.genEnemy(combat);
                     if (liste_classe[i].equals("healer")) {
                         if (liste_héros[i].getCurrent_health() > 0) {
-                            if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                                liste_héros[i].setMagie(liste_héros[i].getMagie());
+                            if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                                liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                             } else {
-                                liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                                liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                             }
                             affHero("healer", i, true);
                         } else {
                             affHero("healer", i, false);
                         }
                     } else if (liste_classe[i].equals("mage")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("mage", i, true);
@@ -1722,10 +1738,10 @@
                 for (int i = 0; i < liste_héros.length; i++) {
 
                     if (liste_classe[i].equals("healer")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("healer", i, true);
@@ -1733,10 +1749,10 @@
                             affHero("healer", i, false);
                         }
                     } else if (liste_classe[i].equals("mage")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("mage", i, true);
@@ -1817,10 +1833,10 @@
 
                 for (int i = 0; i < liste_héros.length; i++) {
                     if (liste_classe[i].equals("healer")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("healer", i, true);
@@ -1828,10 +1844,10 @@
                             affHero("healer", i, false);
                         }
                     } else if (liste_classe[i].equals("mage")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("mage", i, true);
@@ -1866,20 +1882,20 @@
                 for (int i = 0; i < liste_héros.length; i++) {
                     if (liste_classe[i].equals("healer")) {
                         if (liste_héros[i].getCurrent_health() > 0) {
-                            if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                                liste_héros[i].setMagie(liste_héros[i].getMagie());
+                            if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                                liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                             } else {
-                                liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                                liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                             }
                             affHero("healer", i, true);
                         } else {
                             affHero("healer", i, false);
                         }
                     } else if (liste_classe[i].equals("mage")) {
-                        if (liste_héros[i].getCurrent_magie() < liste_héros[i].getMagie()) {
-                            liste_héros[i].setMagie(liste_héros[i].getMagie());
+                        if (liste_héros[i].getCurrent_magie() > (liste_héros[i].getMagie()/2)) {
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getMagie());
                         } else {
-                            liste_héros[i].setMagie(liste_héros[i].getCurrent_magie() + liste_héros[i].getMagie() / 2);
+                            liste_héros[i].setCurrent_magie(liste_héros[i].getCurrent_magie() + (int) (liste_héros[i].getMagie() / 2));
                         }
                         if (liste_héros[i].getCurrent_health() > 0) {
                             affHero("mage", i, true);
@@ -2729,6 +2745,7 @@
             he2.setVisible(false);
             he3.setVisible(false);
             he4.setVisible(false);
+            faiblesse.setVisible(false);
         }
 
 
@@ -2778,6 +2795,7 @@
         if (fin == liste_héros.length) { //si tout héros mort
             perdu.setVisible(true);
             end.setVisible(true);
+            faiblesse.setVisible(false);
         }
     }
 
@@ -3179,6 +3197,8 @@
             InputStream stream = new FileInputStream(path);
             Image image = new Image(stream);
             fond.setImage(image);
+
+
         } else if (combat == 2) {
             Ci10.setText("Spitter ");
             Ci11.setText("Spitter ");
Index: src/main/java/GUI/Gui.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package GUI;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\n\r\n\r\npublic class Gui extends Application {\r\n\r\n\r\n    public static void main(String[] args) {\r\n        launch(args);\r\n    }\r\n\r\n\r\n    @Override\r\n    public void start(Stage primaryStage) throws Exception { //lancement premiere scene\r\n\r\n        Parent root = FXMLLoader.load(getClass().getResource(\"Start.fxml\"));\r\n        primaryStage.setTitle(\"Rpg\");\r\n        primaryStage.setScene(new Scene(root));\r\n        primaryStage.show();\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/GUI/Gui.java b/src/main/java/GUI/Gui.java
--- a/src/main/java/GUI/Gui.java	(revision 4b841a6ac7ec994904e70d43068c20c59c9bd431)
+++ b/src/main/java/GUI/Gui.java	(date 1670873663357)
@@ -5,11 +5,14 @@
 import javafx.scene.Parent;
 import javafx.scene.Scene;
 import javafx.stage.Stage;
+import javafx.scene.media.Media;
+import javafx.scene.media.MediaPlayer;
+import javafx.scene.media.MediaView;
+import java.io.File;
 
 
 public class Gui extends Application {
 
-
     public static void main(String[] args) {
         launch(args);
     }
@@ -22,6 +25,8 @@
         primaryStage.setTitle("Rpg");
         primaryStage.setScene(new Scene(root));
         primaryStage.show();
+
+
     }
 
 
Index: src/main/java/GUI/ControllerStart.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package GUI;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.IOException;\r\n\r\npublic class ControllerStart extends Core {\r\n    @FXML\r\n    private Button bouton1;\r\n\r\n    @FXML\r\n    void enter(MouseEvent event) throws IOException {\r\n        créaFile();\r\n        Stage stage = (Stage) bouton1.getScene().getWindow();\r\n        Parent root = FXMLLoader.load(getClass().getResource(\"Taverne.fxml\"));\r\n        stage.setScene(new Scene(root));\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/GUI/ControllerStart.java b/src/main/java/GUI/ControllerStart.java
--- a/src/main/java/GUI/ControllerStart.java	(revision 4b841a6ac7ec994904e70d43068c20c59c9bd431)
+++ b/src/main/java/GUI/ControllerStart.java	(date 1670873663352)
@@ -6,20 +6,30 @@
 import javafx.scene.Scene;
 import javafx.scene.control.Button;
 import javafx.scene.input.MouseEvent;
+import javafx.scene.media.Media;
+import javafx.scene.media.MediaPlayer;
 import javafx.stage.Stage;
 
+import java.io.File;
 import java.io.IOException;
 
 public class ControllerStart extends Core {
+
     @FXML
     private Button bouton1;
-
     @FXML
     void enter(MouseEvent event) throws IOException {
         créaFile();
         Stage stage = (Stage) bouton1.getScene().getWindow();
         Parent root = FXMLLoader.load(getClass().getResource("Taverne.fxml"));
         stage.setScene(new Scene(root));
+
+        String path = "src/main/resources/song/Explore the Ruins.mp3";
+        Media media = new Media(new File(path).toURI().toString());
+        MediaPlayer mediaPlayer = new MediaPlayer(media);
+        mediaPlayer.setAutoPlay(true);
+        mediaPlayer.setVolume(0.05);
+
     }
 
 }
Index: src/main/java/GUI/ControllerTaverne.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package GUI;\r\n\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.text.Text;\r\nimport javafx.stage.Stage;\r\nimport jeu_console.Combattant.Hero.Hero;\r\n\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\n\r\n\r\npublic class ControllerTaverne extends Core {\r\n    public Hero[] listehéros;\r\n\r\n    @FXML\r\n    private Button bouton1;\r\n    @FXML\r\n    private Button bouton2;\r\n    @FXML\r\n    private Button bouton3;\r\n    @FXML\r\n    private Button bouton4;\r\n    @FXML\r\n    private Text énoncé1;\r\n    @FXML\r\n    private Text énoncé2;\r\n    @FXML\r\n    private Button sortieTav;\r\n    @FXML\r\n    private Button GHealer;\r\n    @FXML\r\n    private Button GHunter;\r\n    @FXML\r\n    private Button GMAge;\r\n    @FXML\r\n    private Button GWarrior;\r\n    @FXML\r\n    private Label label1;\r\n    @FXML\r\n    private Label label2;\r\n\r\n\r\n    @FXML\r\n    void choix1(MouseEvent event) throws FileNotFoundException {\r\n        ecriture(\"\\n1\");\r\n\r\n        listehéros = new Hero[1];\r\n\r\n        ecriture(\"\\nnombre ennemis\");\r\n        ecriture(\"\\n1\");\r\n        ecriture(\"\\nliste classe\");\r\n\r\n\r\n        bouton1.setVisible(false);\r\n        bouton2.setVisible(false);\r\n        bouton3.setVisible(false);\r\n        bouton4.setVisible(false);\r\n        énoncé1.setVisible(false); //les boutons des autres choix (nombre héros)\r\n\r\n        énoncé2.setVisible(true);\r\n        GHealer.setVisible(true);\r\n        GWarrior.setVisible(true); //les bouton de choix de classe\r\n        GMAge.setVisible(true);\r\n        GHunter.setVisible(true);\r\n        writeData(\"/\" + lecture(2), 750, 210, label1);\r\n        writeData(\"1\", 740, 210, label2); //le nombre de classe à choisir en cour\r\n\r\n    }\r\n\r\n    @FXML\r\n    void choix2(MouseEvent event) throws FileNotFoundException {\r\n        ecriture(\"\\n2\");\r\n\r\n        listehéros = new Hero[2];\r\n\r\n        ecriture(\"\\nnombre ennemis\");\r\n        ecriture(\"\\n2\");\r\n        ecriture(\"\\nliste classe\");\r\n\r\n        bouton1.setVisible(false);\r\n        bouton2.setVisible(false);\r\n        bouton3.setVisible(false);\r\n        bouton4.setVisible(false);\r\n        énoncé1.setVisible(false);\r\n\r\n        énoncé2.setVisible(true);\r\n        GHealer.setVisible(true);\r\n        GWarrior.setVisible(true);\r\n        GMAge.setVisible(true);\r\n        GHunter.setVisible(true);\r\n        writeData(\"/\" + lecture(2), 750, 210, label1);\r\n        writeData(\"1\", 740, 210, label2);\r\n    }\r\n\r\n    @FXML\r\n    void choix3(MouseEvent event) throws FileNotFoundException {\r\n        ecriture(\"\\n3\");\r\n\r\n        listehéros = new Hero[3];\r\n\r\n        ecriture(\"\\nnombre ennemis\");\r\n        ecriture(\"\\n3\");\r\n        ecriture(\"\\nliste classe\");\r\n\r\n        bouton1.setVisible(false);\r\n        bouton2.setVisible(false);\r\n        bouton3.setVisible(false);\r\n        bouton4.setVisible(false);\r\n        énoncé1.setVisible(false);\r\n\r\n        énoncé2.setVisible(true);\r\n        GHealer.setVisible(true);\r\n        GWarrior.setVisible(true);\r\n        GMAge.setVisible(true);\r\n        GHunter.setVisible(true);\r\n        writeData(\"/\" + lecture(2), 750, 210, label1);\r\n        writeData(\"1\", 740, 210, label2);\r\n\r\n    }\r\n\r\n    @FXML\r\n    void choix4(MouseEvent event) throws FileNotFoundException {\r\n        ecriture(\"\\n4\");\r\n\r\n        listehéros = new Hero[4];\r\n\r\n        ecriture(\"\\nnombre ennemis\");\r\n        ecriture(\"\\n4\");\r\n        ecriture(\"\\nliste classe\");\r\n\r\n        bouton1.setVisible(false);\r\n        bouton2.setVisible(false);\r\n        bouton3.setVisible(false);\r\n        bouton4.setVisible(false);\r\n        énoncé1.setVisible(false);\r\n\r\n        énoncé2.setVisible(true);\r\n        GHealer.setVisible(true);\r\n        GWarrior.setVisible(true);\r\n        GMAge.setVisible(true);\r\n        GHunter.setVisible(true);\r\n        writeData(\"/\" + lecture(2), 750, 210, label1);\r\n        writeData(\"1\", 740, 210, label2);\r\n\r\n    }\r\n\r\n\r\n    @FXML\r\n    void genHealer(MouseEvent event) throws FileNotFoundException {\r\n        if (lecture(2).equals(\"1\")) { //si 1 seul héros\r\n            listehéros[0] = new Hero(); //créer la liste et initialisation\r\n            ecriture(\"\\nhealer\"); //liste la classe\r\n\r\n            énoncé2.setVisible(false);\r\n            GHealer.setVisible(false);\r\n            GWarrior.setVisible(false);\r\n            GMAge.setVisible(false);\r\n            GHunter.setVisible(false);\r\n            label2.setVisible(false);\r\n            label1.setVisible(false);\r\n            sortieTav.setVisible(true);\r\n        }\r\n\r\n        if (lecture(2).equals(\"2\")) {\r\n            Boolean a = true;\r\n            int i = 0;\r\n            while (a) {\r\n\r\n                if (listehéros[i] == null) {\r\n                    if (i == 1) { //héros en dernière position\r\n                        listehéros[1] = new Hero();\r\n                        ecriture(\" healer\");\r\n                        a = false;\r\n                        énoncé2.setVisible(false);\r\n                        GHealer.setVisible(false);\r\n                        GWarrior.setVisible(false);\r\n                        GMAge.setVisible(false);\r\n                        GHunter.setVisible(false);\r\n                        label2.setVisible(false);\r\n                        label1.setVisible(false);\r\n                        sortieTav.setVisible(true);\r\n                    }\r\n                    if (i != 1) {\r\n                        listehéros[i] = new Hero(); //héros se trouvant avant, permet d'avoir l'odre des choix qui est l'odre de la liste des classe\r\n                        ecriture(\"\\nhealer\");\r\n                        a = false;\r\n                        writeData(\"2\", 740, 210, label2);\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n\r\n        }\r\n\r\n        if (lecture(2).equals(\"3\")) {\r\n            Boolean a = true;\r\n            int i = 0;\r\n            while (a) {\r\n\r\n                if (listehéros[i] == null) {\r\n                    if (i == 2) {\r\n                        listehéros[2] = new Hero();\r\n                        ecriture(\" healer\");\r\n                        a = false;\r\n                        énoncé2.setVisible(false);\r\n                        GHealer.setVisible(false);\r\n                        GWarrior.setVisible(false);\r\n                        GMAge.setVisible(false);\r\n                        GHunter.setVisible(false);\r\n                        label2.setVisible(false);\r\n                        label1.setVisible(false);\r\n                        sortieTav.setVisible(true);\r\n                    }\r\n                    if (i != 2) {\r\n                        listehéros[i] = new Hero();\r\n                        a = false;\r\n                        if (i == 1) {\r\n                            writeData(\"3\", 740, 210, label2);\r\n                            ecriture(\" healer\");\r\n                        }\r\n                        if (i == 0) {\r\n                            writeData(\"2\", 740, 210, label2);\r\n                            ecriture(\"\\nhealer\");\r\n                        }\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n\r\n        }\r\n\r\n        if (lecture(2).equals(\"4\")) {\r\n            Boolean a = true;\r\n            int i = 0;\r\n            while (a) {\r\n\r\n                if (listehéros[i] == null) {\r\n                    if (i == 3) {\r\n                        listehéros[3] = new Hero();\r\n                        ecriture(\" healer\");\r\n                        a = false;\r\n                        énoncé2.setVisible(false);\r\n                        GHealer.setVisible(false);\r\n                        GWarrior.setVisible(false);\r\n                        GMAge.setVisible(false);\r\n                        GHunter.setVisible(false);\r\n                        label2.setVisible(false);\r\n                        label1.setVisible(false);\r\n                        sortieTav.setVisible(true);\r\n                    }\r\n                    if (i != 3) {\r\n                        listehéros[i] = new Hero();\r\n                        a = false;\r\n                        if (i == 2) {\r\n                            writeData(\"4\", 740, 210, label2);\r\n                            ecriture(\" healer\");\r\n                        }\r\n                        if (i == 1) {\r\n                            writeData(\"3\", 740, 210, label2);\r\n                            ecriture(\" healer\");\r\n                        }\r\n                        if (i == 0) {\r\n                            writeData(\"2\", 740, 210, label2);\r\n                            ecriture(\"\\nhealer\");\r\n                        }\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    @FXML\r\n    void genHunter(MouseEvent event) throws FileNotFoundException {\r\n        if (lecture(2).equals(\"1\")) {\r\n            listehéros[0] = new Hero();\r\n            ecriture(\"\\nhunter\");\r\n\r\n            énoncé2.setVisible(false);\r\n            GHealer.setVisible(false);\r\n            GWarrior.setVisible(false);\r\n            GMAge.setVisible(false);\r\n            GHunter.setVisible(false);\r\n            label2.setVisible(false);\r\n            label1.setVisible(false);\r\n            sortieTav.setVisible(true);\r\n        }\r\n\r\n        if (lecture(2).equals(\"2\")) {\r\n            Boolean a = true;\r\n            int i = 0;\r\n            while (a) {\r\n\r\n                if (listehéros[i] == null) {\r\n                    if (i == 1) {\r\n                        listehéros[1] = new Hero();\r\n                        ecriture(\" hunter\");\r\n                        a = false;\r\n                        énoncé2.setVisible(false);\r\n                        GHealer.setVisible(false);\r\n                        GWarrior.setVisible(false);\r\n                        GMAge.setVisible(false);\r\n                        GHunter.setVisible(false);\r\n                        label2.setVisible(false);\r\n                        label1.setVisible(false);\r\n                        sortieTav.setVisible(true);\r\n                    }\r\n                    if (i != 1) {\r\n                        listehéros[i] = new Hero();\r\n                        ecriture(\"\\nhunter\");\r\n                        a = false;\r\n                        writeData(\"2\", 740, 210, label2);\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n\r\n        }\r\n\r\n        if (lecture(2).equals(\"3\")) {\r\n            Boolean a = true;\r\n            int i = 0;\r\n            while (a) {\r\n\r\n                if (listehéros[i] == null) {\r\n                    if (i == 2) {\r\n                        listehéros[2] = new Hero();\r\n                        ecriture(\" hunter\");\r\n                        a = false;\r\n                        énoncé2.setVisible(false);\r\n                        GHealer.setVisible(false);\r\n                        GWarrior.setVisible(false);\r\n                        GMAge.setVisible(false);\r\n                        GHunter.setVisible(false);\r\n                        label2.setVisible(false);\r\n                        label1.setVisible(false);\r\n                        sortieTav.setVisible(true);\r\n                    }\r\n                    if (i != 2) {\r\n                        listehéros[i] = new Hero();\r\n                        ecriture(\" hunter\");\r\n                        a = false;\r\n                        if (i == 1) {\r\n                            writeData(\"3\", 740, 210, label2);\r\n                        }\r\n                        if (i == 0) {\r\n                            writeData(\"2\", 740, 210, label2);\r\n                            ecriture(\"\\nhunter\");\r\n                        }\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n\r\n        }\r\n\r\n        if (lecture(2).equals(\"4\")) {\r\n            Boolean a = true;\r\n            int i = 0;\r\n            while (a) {\r\n\r\n                if (listehéros[i] == null) {\r\n                    if (i == 3) {\r\n                        listehéros[3] = new Hero();\r\n                        ecriture(\" hunter\");\r\n                        a = false;\r\n                        énoncé2.setVisible(false);\r\n                        GHealer.setVisible(false);\r\n                        GWarrior.setVisible(false);\r\n                        GMAge.setVisible(false);\r\n                        GHunter.setVisible(false);\r\n                        label2.setVisible(false);\r\n                        label1.setVisible(false);\r\n                        sortieTav.setVisible(true);\r\n                    }\r\n                    if (i != 3) {\r\n                        listehéros[i] = new Hero();\r\n                        a = false;\r\n                        if (i == 2) {\r\n                            writeData(\"4\", 740, 210, label2);\r\n                            ecriture(\" hunter\");\r\n                        }\r\n                        if (i == 1) {\r\n                            writeData(\"3\", 740, 210, label2);\r\n                            ecriture(\" hunter\");\r\n                        }\r\n                        if (i == 0) {\r\n                            writeData(\"2\", 740, 210, label2);\r\n                            ecriture(\"\\nhunter\");\r\n                        }\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void genMage(MouseEvent event) throws FileNotFoundException {\r\n        if (lecture(2).equals(\"1\")) {\r\n            listehéros[0] = new Hero();\r\n            ecriture(\"\\nmage\");\r\n\r\n            énoncé2.setVisible(false);\r\n            GHealer.setVisible(false);\r\n            GWarrior.setVisible(false);\r\n            GMAge.setVisible(false);\r\n            GHunter.setVisible(false);\r\n            label2.setVisible(false);\r\n            label1.setVisible(false);\r\n            sortieTav.setVisible(true);\r\n        }\r\n\r\n        if (lecture(2).equals(\"2\")) {\r\n            Boolean a = true;\r\n            int i = 0;\r\n            while (a) {\r\n\r\n                if (listehéros[i] == null) {\r\n                    if (i == 1) {\r\n                        listehéros[1] = new Hero();\r\n                        ecriture(\" mage\");\r\n                        a = false;\r\n                        énoncé2.setVisible(false);\r\n                        GHealer.setVisible(false);\r\n                        GWarrior.setVisible(false);\r\n                        GMAge.setVisible(false);\r\n                        GHunter.setVisible(false);\r\n                        label2.setVisible(false);\r\n                        label1.setVisible(false);\r\n                        sortieTav.setVisible(true);\r\n\r\n                    }\r\n                    if (i != 1) {\r\n                        listehéros[i] = new Hero();\r\n                        ecriture(\"\\nmage\");\r\n                        a = false;\r\n                        writeData(\"2\", 740, 210, label2);\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n\r\n        }\r\n\r\n        if (lecture(2).equals(\"3\")) {\r\n            Boolean a = true;\r\n            int i = 0;\r\n            while (a) {\r\n\r\n                if (listehéros[i] == null) {\r\n                    if (i == 2) {\r\n                        listehéros[2] = new Hero();\r\n                        ecriture(\" mage\");\r\n                        a = false;\r\n                        énoncé2.setVisible(false);\r\n                        GHealer.setVisible(false);\r\n                        GWarrior.setVisible(false);\r\n                        GMAge.setVisible(false);\r\n                        GHunter.setVisible(false);\r\n                        label2.setVisible(false);\r\n                        label1.setVisible(false);\r\n                        sortieTav.setVisible(true);\r\n                    }\r\n                    if (i != 2) {\r\n                        listehéros[i] = new Hero();\r\n                        a = false;\r\n                        if (i == 1) {\r\n                            writeData(\"3\", 740, 210, label2);\r\n                            ecriture(\" mage\");\r\n                        }\r\n                        if (i == 0) {\r\n                            writeData(\"2\", 740, 210, label2);\r\n                            ecriture(\"\\nmage\");\r\n                        }\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n\r\n        }\r\n\r\n        if (lecture(2).equals(\"4\")) {\r\n            Boolean a = true;\r\n            int i = 0;\r\n            while (a) {\r\n\r\n                if (listehéros[i] == null) {\r\n                    if (i == 3) {\r\n                        listehéros[3] = new Hero();\r\n                        a = false;\r\n                        énoncé2.setVisible(false);\r\n                        GHealer.setVisible(false);\r\n                        GWarrior.setVisible(false);\r\n                        GMAge.setVisible(false);\r\n                        GHunter.setVisible(false);\r\n                        label2.setVisible(false);\r\n                        label1.setVisible(false);\r\n                        sortieTav.setVisible(true);\r\n                        ecriture(\" mage\");\r\n                    }\r\n                    if (i != 3) {\r\n                        listehéros[i] = new Hero();\r\n                        a = false;\r\n                        if (i == 2) {\r\n                            writeData(\"4\", 740, 210, label2);\r\n                            ecriture(\" mage\");\r\n                        }\r\n                        if (i == 1) {\r\n                            writeData(\"3\", 740, 210, label2);\r\n                            ecriture(\" mage\");\r\n                        }\r\n                        if (i == 0) {\r\n                            writeData(\"2\", 740, 210, label2);\r\n                            ecriture(\"\\nmage\");\r\n                        }\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void genWarrior(MouseEvent event) throws FileNotFoundException {\r\n        if (lecture(2).equals(\"1\")) {\r\n            ecriture(\"\\nwarrior\");\r\n            listehéros[0] = new Hero();\r\n\r\n            énoncé2.setVisible(false);\r\n            GHealer.setVisible(false);\r\n            GWarrior.setVisible(false);\r\n            GMAge.setVisible(false);\r\n            GHunter.setVisible(false);\r\n            label2.setVisible(false);\r\n            label1.setVisible(false);\r\n            sortieTav.setVisible(true);\r\n\r\n        }\r\n\r\n        if (lecture(2).equals(\"2\")) {\r\n            Boolean a = true;\r\n            int i = 0;\r\n            while (a) {\r\n\r\n                if (listehéros[i] == null) {\r\n                    if (i == 1) {\r\n                        ecriture(\" warrior\");\r\n                        listehéros[1] = new Hero();\r\n                        a = false;\r\n                        énoncé2.setVisible(false);\r\n                        GHealer.setVisible(false);\r\n                        GWarrior.setVisible(false);\r\n                        GMAge.setVisible(false);\r\n                        GHunter.setVisible(false);\r\n                        label2.setVisible(false);\r\n                        label1.setVisible(false);\r\n                        sortieTav.setVisible(true);\r\n\r\n                    }\r\n                    if (i != 1) {\r\n                        ecriture(\"\\nwarrior\");\r\n                        listehéros[i] = new Hero();\r\n                        a = false;\r\n                        writeData(\"2\", 740, 210, label2);\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n\r\n        }\r\n\r\n        if (lecture(2).equals(\"3\")) {\r\n            Boolean a = true;\r\n            int i = 0;\r\n            while (a) {\r\n\r\n                if (listehéros[i] == null) {\r\n                    if (i == 2) {\r\n                        listehéros[2] = new Hero();\r\n                        ecriture(\" warrior\");\r\n                        a = false;\r\n                        énoncé2.setVisible(false);\r\n                        GHealer.setVisible(false);\r\n                        GWarrior.setVisible(false);\r\n                        GMAge.setVisible(false);\r\n                        GHunter.setVisible(false);\r\n                        label2.setVisible(false);\r\n                        label1.setVisible(false);\r\n                        sortieTav.setVisible(true);\r\n                    }\r\n                    if (i != 2) {\r\n                        listehéros[i] = new Hero();\r\n                        a = false;\r\n                        if (i == 1) {\r\n                            writeData(\"3\", 740, 210, label2);\r\n                            ecriture(\" warrior\");\r\n                        }\r\n                        if (i == 0) {\r\n                            writeData(\"2\", 740, 210, label2);\r\n                            ecriture(\"\\nwarrior\");\r\n                        }\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n\r\n        }\r\n\r\n        if (lecture(2).equals(\"4\")) {\r\n            Boolean a = true;\r\n            int i = 0;\r\n            while (a) {\r\n\r\n                if (listehéros[i] == null) {\r\n                    if (i == 3) {\r\n                        ecriture(\" warrior\");\r\n                        listehéros[i] = new Hero();\r\n                        a = false;\r\n                        énoncé2.setVisible(false);\r\n                        GHealer.setVisible(false);\r\n                        GWarrior.setVisible(false);\r\n                        GMAge.setVisible(false);\r\n                        GHunter.setVisible(false);\r\n                        label2.setVisible(false);\r\n                        label1.setVisible(false);\r\n                        sortieTav.setVisible(true);\r\n                    }\r\n                    if (i != 3) {\r\n                        listehéros[i] = new Hero();\r\n                        a = false;\r\n                        if (i == 2) {\r\n                            writeData(\"4\", 740, 210, label2);\r\n                            ecriture(\" warrior\");\r\n                        }\r\n                        if (i == 1) {\r\n                            writeData(\"3\", 740, 210, label2);\r\n                            ecriture(\" warrior\");\r\n                        }\r\n                        if (i == 0) {\r\n                            writeData(\"2\", 740, 210, label2);\r\n                            ecriture(\"\\nwarrior\");\r\n                        }\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void entDungeon(MouseEvent event) throws IOException {\r\n        Stage stage = (Stage) sortieTav.getScene().getWindow(); //charge une nouvelle scene\r\n        Parent root = FXMLLoader.load(getClass().getResource(\"Dungeon.fxml\"));\r\n        stage.setScene(new Scene(root));\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/GUI/ControllerTaverne.java b/src/main/java/GUI/ControllerTaverne.java
--- a/src/main/java/GUI/ControllerTaverne.java	(revision 4b841a6ac7ec994904e70d43068c20c59c9bd431)
+++ b/src/main/java/GUI/ControllerTaverne.java	(date 1670873540978)
@@ -7,10 +7,13 @@
 import javafx.scene.control.Button;
 import javafx.scene.control.Label;
 import javafx.scene.input.MouseEvent;
+import javafx.scene.media.Media;
+import javafx.scene.media.MediaPlayer;
 import javafx.scene.text.Text;
 import javafx.stage.Stage;
 import jeu_console.Combattant.Hero.Hero;
 
+import java.io.File;
 import java.io.FileNotFoundException;
 import java.io.IOException;
 
@@ -664,6 +667,8 @@
         Stage stage = (Stage) sortieTav.getScene().getWindow(); //charge une nouvelle scene
         Parent root = FXMLLoader.load(getClass().getResource("Dungeon.fxml"));
         stage.setScene(new Scene(root));
+
+
     }
 
 
Index: src/main/java/GUI/Core.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package GUI;\r\n\r\nimport javafx.scene.control.Label;\r\nimport lombok.EqualsAndHashCode;\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\nimport lombok.ToString;\r\n\r\nimport java.io.*;\r\n\r\n\r\n@EqualsAndHashCode\r\n@ToString\r\n\r\n@Getter\r\n@Setter\r\n\r\npublic class Core {\r\n\r\n    public static void créaFile() throws FileNotFoundException {\r\n        try {\r\n            File file = new File(\"paramètre.txt\"); //créer un fichier txt\r\n            file.createNewFile();\r\n            FileWriter fw = new FileWriter(\"paramètre.txt\", false);\r\n            fw.write(\"nombre_héros\"); //1er ligne du fichier\r\n            fw.close();\r\n\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public static String lecture(int ligne) throws FileNotFoundException {\r\n        int i;\r\n        String line = new String();\r\n        try {\r\n            FileReader file = new FileReader(\"paramètre.txt\");\r\n            BufferedReader buffer = new BufferedReader(file);\r\n\r\n            for (i = 1; i < 10; i++) { //lit les 10 premiere ligne\r\n                if (i == ligne)\r\n                    line = buffer.readLine();\r\n                else\r\n                    buffer.readLine();\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return line; //retourne la ligne\r\n    }\r\n\r\n    public static void ecriture(String data) {\r\n        try {\r\n            FileWriter fw = new FileWriter(\"paramètre.txt\", true);//écrit dans un fichier txt\r\n            fw.write(data);\r\n            fw.close();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n\r\n    public static void writeData(String data, int x, int y, Label label) { //méthode pour changer l\"emplacement et le text d'un label\r\n        label.setText(data);\r\n        label.setLayoutX(x);\r\n        label.setLayoutY(y);\r\n        label.setVisible(true);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/GUI/Core.java b/src/main/java/GUI/Core.java
--- a/src/main/java/GUI/Core.java	(revision 4b841a6ac7ec994904e70d43068c20c59c9bd431)
+++ b/src/main/java/GUI/Core.java	(date 1670873540959)
@@ -1,6 +1,8 @@
 package GUI;
 
 import javafx.scene.control.Label;
+import javafx.scene.media.Media;
+import javafx.scene.media.MediaPlayer;
 import lombok.EqualsAndHashCode;
 import lombok.Getter;
 import lombok.Setter;
@@ -59,7 +61,6 @@
         }
     }
 
-
     public static void writeData(String data, int x, int y, Label label) { //méthode pour changer l"emplacement et le text d'un label
         label.setText(data);
         label.setLayoutX(x);
@@ -67,4 +68,5 @@
         label.setVisible(true);
     }
 
+
 }
Index: src/main/java/jeu_console/Combattant/Enemy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package jeu_console.Combattant;\r\n\r\nimport java.util.Random;\r\n\r\npublic class Enemy extends Combattant {\r\n\r\n    private int level;\r\n\r\n\r\n    public static Enemy genEnemy(int level) {\r\n        Enemy création = new Enemy(); //nouvel ennemi\r\n        Random r = new Random();\r\n\r\n        int n = 50 + r.nextInt(50) + level * 5;//la vie\r\n        création.setHealth(n);\r\n        création.setCurrent_health(création.getHealth());\r\n\r\n        int n2 = 15 + r.nextInt(15) + 5 * level; //les dégats de base\r\n        création.setDegat_base(n2);\r\n\r\n        int n3 = 5 + r.nextInt(10) + 5 * level; //la défense\r\n        création.setCurrent_def(n3);\r\n        création.setDef(n3);\r\n\r\n        int n4 = r.nextInt(3);// son type\r\n        switch (n4) {\r\n\r\n            case 0 -> création.setType(\"feu\");\r\n            case 1 -> création.setType(\"feuille\");\r\n            case 2 -> création.setType(\"eau\");\r\n            case 3 -> création.setType(\"terre\");\r\n\r\n        }\r\n\r\n        return création;\r\n    } //création avec variable bornée des ennemis\r\n\r\n    public static double[] charge(Enemy lanceur) {\r\n\r\n        double[] tab_dégat = new double[5];\r\n\r\n        tab_dégat[0] = lanceur.getDegat_base();//dégat de base\r\n        tab_dégat[1] = 0;\r\n        tab_dégat[2] = 0;\r\n        tab_dégat[3] = 0;\r\n        tab_dégat[4] = 0;\r\n\r\n        switch (lanceur.getType()) { //récupération type, attaque élémentaire correspondant à la moitié des dégats bruts\r\n\r\n            case \"feu\" -> tab_dégat[1] = (double) lanceur.getDegat_base() / 2;\r\n            case \"eau\" -> tab_dégat[2] = (double) lanceur.getDegat_base() / 2;\r\n            case \"feuille\" -> tab_dégat[3] = (double) lanceur.getDegat_base() / 2;\r\n            case \"terre\" -> tab_dégat[4] = (double) lanceur.getDegat_base() / 2;\r\n        }\r\n\r\n        return tab_dégat;\r\n    } //méthode d'attaque des ennemis\r\n\r\n    public static Enemy genBoss() {\r\n        Enemy création = new Enemy();\r\n\r\n        Random r = new Random();\r\n        création.setHealth(1000); //vie fixe\r\n        création.setCurrent_health(création.getHealth());\r\n\r\n        int n2 = 50 + r.nextInt(35);\r\n        création.setDegat_base(n2);\r\n\r\n        int n3 = 30 + r.nextInt(20);\r\n        création.setDef(n3);\r\n        création.setCurrent_def(n3);\r\n\r\n        int n4 = r.nextInt(3);\r\n        switch (n4) {\r\n\r\n            case 0 -> création.setType(\"feu\");\r\n            case 1 -> création.setType(\"feuille\");\r\n            case 2 -> création.setType(\"eau\");\r\n            case 3 -> création.setType(\"terre\");\r\n        }\r\n\r\n\r\n        return création;\r\n    } //création boss avec stats bornée\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/jeu_console/Combattant/Enemy.java b/src/main/java/jeu_console/Combattant/Enemy.java
--- a/src/main/java/jeu_console/Combattant/Enemy.java	(revision 4b841a6ac7ec994904e70d43068c20c59c9bd431)
+++ b/src/main/java/jeu_console/Combattant/Enemy.java	(date 1670873267853)
@@ -12,10 +12,10 @@
         Random r = new Random();
 
         int n = 50 + r.nextInt(50) + level * 5;//la vie
-        création.setHealth(n);
+        création.setHealth(1);
         création.setCurrent_health(création.getHealth());
 
-        int n2 = 15 + r.nextInt(15) + 5 * level; //les dégats de base
+        int n2 = 20 + r.nextInt(20) + 5 * level; //les dégats de base
         création.setDegat_base(n2);
 
         int n3 = 5 + r.nextInt(10) + 5 * level; //la défense
Index: paramètre.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>nombre_héros\r\n1\r\nnombre ennemis\r\n1\r\nliste classe\r\nwarrior
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/paramètre.txt b/paramètre.txt
--- a/paramètre.txt	(revision 4b841a6ac7ec994904e70d43068c20c59c9bd431)
+++ b/paramètre.txt	(date 1670873666687)
@@ -1,6 +1,1 @@
-nombre_héros
-1
-nombre ennemis
-1
-liste classe
-warrior
\ No newline at end of file
+nombre_héros
\ No newline at end of file
Index: src/main/java/jeu_console/Combattant/Hero/Hero.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package jeu_console.Combattant.Hero;\r\n\r\n\r\nimport jeu_console.Combattant.Combattant;\r\nimport jeu_console.Item.arme_potion.Weapon;\r\nimport jeu_console.Item.arme_potion.consommable;\r\nimport lombok.EqualsAndHashCode;\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\nimport lombok.ToString;\r\n\r\nimport java.util.Objects;\r\n\r\n@Getter\r\n@Setter\r\n@EqualsAndHashCode\r\n@ToString\r\n\r\npublic class Hero extends Combattant {\r\n\r\n    private Weapon[] inventaire_weapon;\r\n    private int weapon_equipped;\r\n    private consommable[] inventaire_consumable;\r\n\r\n    public void initialise_inventory() {\r\n\r\n        this.inventaire_weapon = new Weapon[1];\r\n        this.inventaire_consumable = new consommable[10];\r\n\r\n        for (int i = 0; i < this.inventaire_weapon.length; i++) {\r\n\r\n            this.inventaire_weapon[i] = new Weapon(); //remplissage de l'array\r\n        }\r\n\r\n        for (int i = 0; i < this.inventaire_consumable.length; i++) {\r\n\r\n            this.inventaire_consumable[i] = new consommable();\r\n        }\r\n\r\n    } //création array et remplissage de ses éléments par élément vide\r\n\r\n    public void addWeapon(Weapon weapon) {\r\n\r\n        for (int i = 0; i < this.inventaire_weapon.length; i++) {\r\n\r\n            if (this.inventaire_weapon[i].getName() == null) {\r\n\r\n                this.inventaire_weapon[i] = weapon; //si la place est occupé par un élément vide\r\n                break;\r\n            }\r\n\r\n            if (i == this.inventaire_weapon.length) {\r\n\r\n                System.out.println(\"inventaire d'arme plein\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public void addConsumable(consommable consommable) {\r\n\r\n        for (int i = 0; i < this.inventaire_consumable.length; i++) {\r\n\r\n            if (this.inventaire_consumable[i].getName() == null) {\r\n\r\n                this.inventaire_consumable[i] = consommable;\r\n                break;\r\n            }\r\n            if (i == this.inventaire_consumable.length - 1) {\r\n\r\n                System.out.println(\"inventaire de consommable plein\");\r\n            }\r\n        }\r\n    }\r\n\r\n    public void suppConsumable(consommable consommable) {\r\n\r\n        for (int i = 0; i < this.inventaire_consumable.length; i++) {\r\n\r\n            if (consommable.getName() == null) {\r\n\r\n                System.out.println(\"vous n'avez pas de consommable ici\");\r\n                break;\r\n            }\r\n\r\n            if (Objects.equals(this.inventaire_consumable[i].getName(), consommable.getName())) {\r\n\r\n                this.inventaire_consumable[i] = new consommable();\r\n            }\r\n        }\r\n    }\r\n\r\n    public void equipWeapon(Weapon weapon) {\r\n        for (int i = 0; i < this.inventaire_weapon.length; i++) {\r\n            if (weapon.getName().equals(this.inventaire_weapon[i].getName())) {\r\n                this.weapon_equipped = i;\r\n            }\r\n        }\r\n    } //si l'invnetaire d'arme permet plus de une arme\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/jeu_console/Combattant/Hero/Hero.java b/src/main/java/jeu_console/Combattant/Hero/Hero.java
--- a/src/main/java/jeu_console/Combattant/Hero/Hero.java	(revision 4b841a6ac7ec994904e70d43068c20c59c9bd431)
+++ b/src/main/java/jeu_console/Combattant/Hero/Hero.java	(date 1670318696000)
@@ -96,7 +96,7 @@
                 this.weapon_equipped = i;
             }
         }
-    } //si l'invnetaire d'arme permet plus de une arme
+    } //si l'inventaire d'arme permet plus de une arme
 
 }
 
Index: src/main/java/module-info.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>module com.example.demo {\r\n    requires javafx.controls;\r\n    requires javafx.fxml;\r\n    requires lombok;\r\n\r\n\r\n    opens GUI to javafx.fxml;\r\n    exports GUI;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/module-info.java b/src/main/java/module-info.java
--- a/src/main/java/module-info.java	(revision 4b841a6ac7ec994904e70d43068c20c59c9bd431)
+++ b/src/main/java/module-info.java	(date 1670863016270)
@@ -2,6 +2,7 @@
     requires javafx.controls;
     requires javafx.fxml;
     requires lombok;
+    requires javafx.media;
 
 
     opens GUI to javafx.fxml;
Index: src/main/resources/GUI/Dungeon.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.image.*?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.layout.ColumnConstraints?>\r\n<?import javafx.scene.layout.GridPane?>\r\n<?import javafx.scene.layout.RowConstraints?>\r\n<?import javafx.scene.text.*?>\r\n<GridPane xmlns:fx=\"http://javafx.com/fxml/1\" maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\"\r\n          prefHeight=\"533.0\" prefWidth=\"1500.0\" xmlns=\"http://javafx.com/javafx/19\"\r\n          fx:controller=\"GUI.ControllerDungeon\">\r\n    <columnConstraints>\r\n        <ColumnConstraints hgrow=\"SOMETIMES\" minWidth=\"10.0\" prefWidth=\"100.0\"/>\r\n    </columnConstraints>\r\n    <rowConstraints>\r\n        <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\"/>\r\n    </rowConstraints>\r\n    <children>\r\n        <AnchorPane prefHeight=\"533.0\" prefWidth=\"1500.0\">\r\n            <children>\r\n                <ImageView fx:id=\"fond\" fitHeight=\"600.0\" fitWidth=\"1600.0\" pickOnBounds=\"true\" preserveRatio=\"true\">\r\n                    <image>\r\n                        <Image url=\"@../picture/dungeon1/donjon.png\"/>\r\n                    </image>\r\n                </ImageView>\r\n                <ImageView fx:id=\"ien1\" fitHeight=\"150.0\" fitWidth=\"200.0\" layoutX=\"150.0\" layoutY=\"70.0\"\r\n                           pickOnBounds=\"true\" preserveRatio=\"true\" visible=\"false\"/>\r\n                <ImageView fx:id=\"ien2\" fitHeight=\"150.0\" fitWidth=\"200.0\" layoutX=\"450.0\" layoutY=\"70.0\"\r\n                           pickOnBounds=\"true\" preserveRatio=\"true\" visible=\"false\"/>\r\n                <ImageView fx:id=\"ien3\" fitHeight=\"150.0\" fitWidth=\"200.0\" layoutX=\"750.0\" layoutY=\"70.0\"\r\n                           pickOnBounds=\"true\" preserveRatio=\"true\" visible=\"false\"/>\r\n                <ImageView fx:id=\"ien4\" fitHeight=\"150.0\" fitWidth=\"200.0\" layoutX=\"1050.0\" layoutY=\"70.0\"\r\n                           pickOnBounds=\"true\" preserveRatio=\"true\" visible=\"false\"/>\r\n                <ImageView fx:id=\"fl1\" fitHeight=\"150.0\" fitWidth=\"200.0\" layoutX=\"135.0\" layoutY=\"400.0\"\r\n                           pickOnBounds=\"true\" preserveRatio=\"true\" visible=\"false\">\r\n                    <image>\r\n                        <Image url=\"@../picture/fleche.png\"/>\r\n                    </image>\r\n                </ImageView>\r\n                <ImageView fx:id=\"fl2\" fitHeight=\"150.0\" fitWidth=\"200.0\" layoutX=\"435.0\" layoutY=\"400.0\"\r\n                           pickOnBounds=\"true\" preserveRatio=\"true\" visible=\"false\">\r\n                    <image>\r\n                        <Image url=\"@../picture/fleche.png\"/>\r\n                    </image>\r\n                </ImageView>\r\n                <ImageView fx:id=\"fl3\" fitHeight=\"150.0\" fitWidth=\"200.0\" layoutX=\"735.0\" layoutY=\"400.0\"\r\n                           pickOnBounds=\"true\" preserveRatio=\"true\" visible=\"false\">\r\n                    <image>\r\n                        <Image url=\"@../picture/fleche.png\"/>\r\n                    </image>\r\n                </ImageView>\r\n                <ImageView fx:id=\"fl4\" fitHeight=\"150.0\" fitWidth=\"200.0\" layoutX=\"1035.0\" layoutY=\"400.0\"\r\n                           pickOnBounds=\"true\" preserveRatio=\"true\" visible=\"false\">\r\n                    <image>\r\n                        <Image url=\"@../picture/fleche.png\"/>\r\n                    </image>\r\n                </ImageView>\r\n                <Label fx:id=\"en1\" text=\"Label\" textFill=\"#0e38cf\" visible=\"false\">\r\n                    <font>\r\n                        <Font name=\"Bell MT Bold\" size=\"13.0\"/>\r\n                    </font>\r\n                </Label>\r\n                <Label fx:id=\"en2\" text=\"Label\" textFill=\"#0e38cf\" visible=\"false\">\r\n                    <font>\r\n                        <Font size=\"13.0\"/>\r\n                    </font>\r\n                </Label>\r\n                <Label fx:id=\"en3\" text=\"Label\" textFill=\"#0e38cf\" visible=\"false\">\r\n                    <font>\r\n                        <Font size=\"13.0\"/>\r\n                    </font>\r\n                </Label>\r\n                <Label fx:id=\"en4\" text=\"Label\" textFill=\"#0e38cf\" visible=\"false\">\r\n                    <font>\r\n                        <Font size=\"13.0\"/>\r\n                    </font>\r\n                </Label>\r\n                <Button fx:id=\"but1\" layoutX=\"651.0\" layoutY=\"408.0\" mnemonicParsing=\"false\" onMouseClicked=\"#aff\"\r\n                        text=\"S'enfoncer dans la forêt\">\r\n                    <font>\r\n                        <Font name=\"Bell MT\" size=\"18.0\"/>\r\n                    </font>\r\n                </Button>\r\n                <ImageView fx:id=\"imhe1\" fitHeight=\"150.0\" fitWidth=\"200.0\" layoutX=\"150.0\" layoutY=\"250.0\"\r\n                           pickOnBounds=\"true\" preserveRatio=\"true\"/>\r\n                <ImageView fx:id=\"imhe2\" fitHeight=\"150.0\" fitWidth=\"200.0\" layoutX=\"450.0\" layoutY=\"250.0\"\r\n                           pickOnBounds=\"true\" preserveRatio=\"true\"/>\r\n                <ImageView fx:id=\"imhe3\" fitHeight=\"150.0\" fitWidth=\"200.0\" layoutX=\"750.0\" layoutY=\"250.0\"\r\n                           pickOnBounds=\"true\" preserveRatio=\"true\"/>\r\n                <ImageView fx:id=\"imhe4\" fitHeight=\"150.0\" fitWidth=\"200.0\" layoutX=\"1050.0\" layoutY=\"250.0\"\r\n                           pickOnBounds=\"true\" preserveRatio=\"true\"/>\r\n                <Label fx:id=\"he1\" layoutX=\"106.0\" layoutY=\"68.0\" text=\"Label\" textFill=\"#9400b1\" visible=\"false\">\r\n                    <font>\r\n                        <Font name=\"Bell MT Bold\" size=\"13.0\"/>\r\n                    </font>\r\n                </Label>\r\n                <Label fx:id=\"he2\" layoutX=\"134.0\" layoutY=\"149.0\" text=\"Label\" textFill=\"#9400b1\" visible=\"false\">\r\n                    <font>\r\n                        <Font size=\"13.0\"/>\r\n                    </font>\r\n                </Label>\r\n                <Label fx:id=\"he3\" layoutX=\"106.0\" layoutY=\"233.0\" text=\"Label\" textFill=\"#d302fa\" visible=\"false\">\r\n                    <font>\r\n                        <Font size=\"13.0\"/>\r\n                    </font>\r\n                </Label>\r\n                <Label fx:id=\"he4\" layoutX=\"196.0\" layoutY=\"216.0\" text=\"Label\" textFill=\"#d302fa\" visible=\"false\">\r\n                    <font>\r\n                        <Font size=\"13.0\"/>\r\n                    </font>\r\n                </Label>\r\n                <MenuButton fx:id=\"menu\" layoutX=\"1200.0\" layoutY=\"124.0\" mnemonicParsing=\"false\" prefHeight=\"30.0\"\r\n                            prefWidth=\"200.0\" text=\"menu\" visible=\"false\">\r\n                    <items>\r\n                        <MenuItem fx:id=\"Actions\" mnemonicParsing=\"false\" text=\"Attaques\">\r\n                            <graphic>\r\n                                <MenuButton mnemonicParsing=\"false\" onMouseClicked=\"#selectionAtk\"\r\n                                            text=\"Toutes les attaques\">\r\n                                    <items>\r\n                                        <MenuItem fx:id=\"atk1\" mnemonicParsing=\"false\" text=\"Coup d'épée\"\r\n                                                  visible=\"false\">\r\n                                            <graphic>\r\n                                                <MenuButton fx:id=\"qui1\" mnemonicParsing=\"false\" onMouseClicked=\"#atk1\"\r\n                                                            text=\"qui?\">\r\n                                                    <items>\r\n                                                        <MenuItem fx:id=\"Ci10\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible1\" text=\"Bone Arbalist\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci20\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible2\" text=\"Bone Courtier\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci30\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible3\" text=\"Bone Defender\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci40\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible4\" text=\"Bone soldier\"\r\n                                                                  visible=\"false\"/>\r\n                                                    </items>\r\n                                                </MenuButton>\r\n                                            </graphic>\r\n                                        </MenuItem>\r\n                                        <MenuItem fx:id=\"atk2\" mnemonicParsing=\"false\" text=\"Berserk -50%pv x2dégat\"\r\n                                                  visible=\"false\">\r\n                                            <graphic>\r\n                                                <MenuButton mnemonicParsing=\"false\" onMouseClicked=\"#atk2\" text=\"qui?\">\r\n                                                    <items>\r\n                                                        <MenuItem fx:id=\"Ci11\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible1\" text=\"Bone Arbalist\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci21\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible2\" text=\"Bone Courtier\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci31\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible3\" text=\"Bone Defender\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci41\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible4\" text=\"Bone soldier\"\r\n                                                                  visible=\"false\"/>\r\n                                                    </items>\r\n                                                </MenuButton>\r\n                                            </graphic>\r\n                                        </MenuItem>\r\n                                        <MenuItem fx:id=\"atk3\" mnemonicParsing=\"false\" text=\"Coup de couteau\"\r\n                                                  visible=\"false\">\r\n                                            <graphic>\r\n                                                <MenuButton mnemonicParsing=\"false\" onMouseClicked=\"#atk3\" text=\"qui?\">\r\n                                                    <items>\r\n                                                        <MenuItem fx:id=\"Ci12\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible1\" text=\"Bone Arbalist\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci22\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible2\" text=\"Bone Courtier\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci32\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible3\" text=\"Bone Defender\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci42\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible4\" text=\"Bone soldier\"\r\n                                                                  visible=\"false\"/>\r\n                                                    </items>\r\n                                                </MenuButton>\r\n                                            </graphic>\r\n                                        </MenuItem>\r\n                                        <MenuItem fx:id=\"atk4\" mnemonicParsing=\"false\" text=\"Tir\" visible=\"false\">\r\n                                            <graphic>\r\n                                                <MenuButton mnemonicParsing=\"false\" onMouseClicked=\"#atk4\" text=\"qui?\">\r\n                                                    <items>\r\n                                                        <MenuItem fx:id=\"Ci13\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible1\" text=\"Bone Arbalist\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci23\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible2\" text=\"Bone Courtier\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci33\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible3\" text=\"Bone Defender\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci43\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible4\" text=\"Bone soldier\"\r\n                                                                  visible=\"false\"/>\r\n                                                    </items>\r\n                                                </MenuButton>\r\n                                            </graphic>\r\n                                        </MenuItem>\r\n                                        <MenuItem fx:id=\"pasBalle\" mnemonicParsing=\"false\" text=\"Plus de balle\"\r\n                                                  visible=\"false\"/>\r\n                                        <MenuItem fx:id=\"atk5\" mnemonicParsing=\"false\" text=\"Boule de feu 2mana\"\r\n                                                  visible=\"false\">\r\n                                            <graphic>\r\n                                                <MenuButton mnemonicParsing=\"false\" onMouseClicked=\"#atk5\" text=\"qui?\">\r\n                                                    <items>\r\n                                                        <MenuItem fx:id=\"Ci14\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible1\" text=\"Bone Arbalist\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci24\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible2\" text=\"Bone Courtier\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci34\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible3\" text=\"Bone Defender\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci44\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible4\" text=\"Bone soldier\"\r\n                                                                  visible=\"false\"/>\r\n                                                    </items>\r\n                                                </MenuButton>\r\n                                            </graphic>\r\n                                        </MenuItem>\r\n                                        <MenuItem fx:id=\"atk6\" mnemonicParsing=\"false\" text=\"Lame d'eau 2mana\"\r\n                                                  visible=\"false\">\r\n                                            <graphic>\r\n                                                <MenuButton mnemonicParsing=\"false\" onMouseClicked=\"#atk6\" text=\"qui?\">\r\n                                                    <items>\r\n                                                        <MenuItem fx:id=\"Ci15\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible1\" text=\"Bone Arbalist\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci25\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible2\" text=\"Bone Courtier\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci35\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible3\" text=\"Bone Defender\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci45\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible4\" text=\"Bone soldier\"\r\n                                                                  visible=\"false\"/>\r\n                                                    </items>\r\n                                                </MenuButton>\r\n                                            </graphic>\r\n                                        </MenuItem>\r\n                                        <MenuItem fx:id=\"atk7\" mnemonicParsing=\"false\" text=\"Séisme 2mana\"\r\n                                                  visible=\"false\">\r\n                                            <graphic>\r\n                                                <MenuButton mnemonicParsing=\"false\" onMouseClicked=\"#atk7\" text=\"qui?\">\r\n                                                    <items>\r\n                                                        <MenuItem fx:id=\"Ci16\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible1\" text=\"Bone Arbalist\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci26\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible2\" text=\"Bone Courtier\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci36\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible3\" text=\"Bone Defender\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci46\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible4\" text=\"Bone soldier\"\r\n                                                                  visible=\"false\"/>\r\n                                                    </items>\r\n                                                </MenuButton>\r\n                                            </graphic>\r\n                                        </MenuItem>\r\n                                        <MenuItem fx:id=\"atk8\" mnemonicParsing=\"false\" text=\"Feuille lame 2mana\"\r\n                                                  visible=\"false\">\r\n                                            <graphic>\r\n                                                <MenuButton mnemonicParsing=\"false\" onMouseClicked=\"#atk8\" text=\"qui?\">\r\n                                                    <items>\r\n                                                        <MenuItem fx:id=\"Ci17\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible1\" text=\"Bone Arbalist\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci27\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible2\" text=\"Bone Courtier\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci37\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible3\" text=\"Bone Defender\"\r\n                                                                  visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"Ci47\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible4\" text=\"Bone soldier\"\r\n                                                                  visible=\"false\"/>\r\n                                                    </items>\r\n                                                </MenuButton>\r\n                                            </graphic>\r\n                                        </MenuItem>\r\n                                        <MenuItem fx:id=\"pasMana\" mnemonicParsing=\"false\" text=\"Pas assez de mana\"\r\n                                                  visible=\"false\"/>\r\n                                        <MenuItem fx:id=\"atk9\" mnemonicParsing=\"false\" text=\"Heal 2mana\"\r\n                                                  visible=\"false\">\r\n                                            <graphic>\r\n                                                <MenuButton mnemonicParsing=\"false\" onMouseClicked=\"#atk9\" text=\"qui?\">\r\n                                                    <items>\r\n                                                        <MenuItem fx:id=\"hero1\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible1\" text=\"hero1\" visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"hero2\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible2\" text=\"hero2\" visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"hero3\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible3\" text=\"hero3\" visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"hero4\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible4\" text=\"hero4\" visible=\"false\"/>\r\n                                                    </items>\r\n                                                </MenuButton>\r\n                                            </graphic>\r\n                                        </MenuItem>\r\n                                        <MenuItem fx:id=\"atk10\" mnemonicParsing=\"false\" text=\"Ressurection 4 mana\"\r\n                                                  visible=\"false\">\r\n                                            <graphic>\r\n                                                <MenuButton mnemonicParsing=\"false\" onMouseClicked=\"#atk10\" text=\"qui?\">\r\n                                                    <items>\r\n                                                        <MenuItem fx:id=\"hero11\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible1\" text=\"hero1\" visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"hero21\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible2\" text=\"hero2\" visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"hero31\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible3\" text=\"hero3\" visible=\"false\"/>\r\n                                                        <MenuItem fx:id=\"hero41\" mnemonicParsing=\"false\"\r\n                                                                  onAction=\"#cible4\" text=\"hero4\" visible=\"false\"/>\r\n                                                    </items>\r\n                                                </MenuButton>\r\n                                            </graphic>\r\n                                        </MenuItem>\r\n                                        <MenuItem fx:id=\"atk11\" mnemonicParsing=\"false\" onAction=\"#soinGr\"\r\n                                                  text=\"Soin de groupe 3mana soin/2\" visible=\"false\"/>\r\n                                    </items>\r\n                                </MenuButton>\r\n                            </graphic>\r\n                        </MenuItem>\r\n                        <MenuItem mnemonicParsing=\"false\" text=\"Boire une potion\">\r\n                            <graphic>\r\n                                <MenuButton mnemonicParsing=\"false\" onMouseClicked=\"#menuBoire\" text=\"inventaire\">\r\n                                    <items>\r\n                                        <MenuItem fx:id=\"pvie\" mnemonicParsing=\"false\" onAction=\"#boirepv\"\r\n                                                  text=\"potion de vie +50pv\" visible=\"false\"/>\r\n                                        <MenuItem fx:id=\"pdégat\" mnemonicParsing=\"false\" onAction=\"#boiredégat\"\r\n                                                  text=\"potion de dégat +10dégat\" visible=\"false\"/>\r\n                                        <MenuItem fx:id=\"pmana\" mnemonicParsing=\"false\" onAction=\"#boiremana\"\r\n                                                  text=\"potion de mana +10mana\" visible=\"false\"/>\r\n                                        <MenuItem fx:id=\"parmure\" mnemonicParsing=\"false\" onAction=\"#boirearmure\"\r\n                                                  text=\"potion d'armure +10def\" visible=\"false\"/>\r\n                                        <MenuItem fx:id=\"paspot\" mnemonicParsing=\"false\"\r\n                                                  text=\"vous n'avez pas de potion\" visible=\"false\"/>\r\n                                    </items>\r\n                                </MenuButton>\r\n                            </graphic>\r\n                        </MenuItem>\r\n                        <MenuItem mnemonicParsing=\"false\" text=\"Manger\">\r\n                            <graphic>\r\n                                <MenuButton mnemonicParsing=\"false\" onMouseClicked=\"#menuManger\" text=\"inventaire\">\r\n                                    <items>\r\n                                        <MenuItem fx:id=\"boeuf\" mnemonicParsing=\"false\" onAction=\"#manger2\"\r\n                                                  text=\"boeuf +25pv\" visible=\"false\"/>\r\n                                        <MenuItem fx:id=\"repas_fait_maison\" mnemonicParsing=\"false\" onAction=\"#manger3\"\r\n                                                  text=\"repas fait maison +50pv\" visible=\"false\"/>\r\n                                        <MenuItem fx:id=\"pasNour\" mnemonicParsing=\"false\"\r\n                                                  text=\"vous n'avez pas de nourriture\" visible=\"false\"/>\r\n                                    </items>\r\n                                </MenuButton>\r\n                            </graphic>\r\n                        </MenuItem>\r\n                        <MenuItem mnemonicParsing=\"false\" onAction=\"#passer\" text=\"passer son tour\"/>\r\n                    </items>\r\n                </MenuButton>\r\n                <Label fx:id=\"textdégat\" layoutX=\"1364.0\" layoutY=\"292.0\" text=\"Label\" textFill=\"#fa0606\"\r\n                       visible=\"false\">\r\n                    <font>\r\n                        <Font size=\"16.0\"/>\r\n                    </font>\r\n                </Label>\r\n                <Label fx:id=\"textdégatrecu\" layoutX=\"936.0\" layoutY=\"311.0\" text=\"Label\" textFill=\"#ffa000\"\r\n                       visible=\"false\">\r\n                    <font>\r\n                        <Font size=\"16.0\"/>\r\n                    </font>\r\n                </Label>\r\n                <Button fx:id=\"rec\" layoutX=\"709.0\" layoutY=\"266.0\" mnemonicParsing=\"false\" onMouseClicked=\"#Rec\"\r\n                        text=\"recompense\" visible=\"false\"/>\r\n                <Button fx:id=\"recarme\" layoutX=\"150.0\" layoutY=\"150.0\" mnemonicParsing=\"false\" onMouseClicked=\"#rarme\"\r\n                        text=\"arme\" visible=\"false\"/>\r\n                <Button fx:id=\"recchance\" layoutX=\"150.0\" layoutY=\"200.0\" mnemonicParsing=\"false\"\r\n                        onMouseClicked=\"#rchance\" text=\"chance\" visible=\"false\"/>\r\n                <Button fx:id=\"recdef\" layoutX=\"150.0\" layoutY=\"250.0\" mnemonicParsing=\"false\" onMouseClicked=\"#rdef\"\r\n                        text=\"def\" visible=\"false\"/>\r\n                <Button fx:id=\"recnour\" layoutX=\"150.0\" layoutY=\"300.0\" mnemonicParsing=\"false\" onMouseClicked=\"#rnour\"\r\n                        text=\"nourriture\" visible=\"false\"/>\r\n                <Button fx:id=\"recmana\" layoutX=\"150.0\" layoutY=\"400.0\" mnemonicParsing=\"false\" onMouseClicked=\"#rmana\"\r\n                        text=\"mana\" visible=\"false\"/>\r\n                <MenuButton fx:id=\"recpotion\" layoutX=\"150.0\" layoutY=\"350.0\" mnemonicParsing=\"false\" text=\"potion\"\r\n                            visible=\"false\">\r\n                    <items>\r\n                        <MenuItem mnemonicParsing=\"false\" onAction=\"#rpot1\" text=\"potion de mana\"/>\r\n                        <MenuItem mnemonicParsing=\"false\" onAction=\"#rpot2\" text=\"porion de vie\"/>\r\n                        <MenuItem mnemonicParsing=\"false\" onAction=\"#rpot3\" text=\"potion de def\"/>\r\n                        <MenuItem mnemonicParsing=\"false\" onAction=\"#rpot4\" text=\"potion de dégat\"/>\r\n                    </items>\r\n                </MenuButton>\r\n                <Label fx:id=\"reclabel\" layoutX=\"236.0\" layoutY=\"115.0\" text=\"rec\" textFill=\"RED\" visible=\"false\">\r\n                    <font>\r\n                        <Font size=\"18.0\"/>\r\n                    </font>\r\n                </Label>\r\n                <Button fx:id=\"sortir\" layoutX=\"150.0\" layoutY=\"150.0\" mnemonicParsing=\"false\" onMouseClicked=\"#sortir\"\r\n                        text=\"sortir de la forêt\" visible=\"false\"/>\r\n                <ImageView fx:id=\"end\" fitHeight=\"600.0\" fitWidth=\"1600.0\" layoutX=\"-1.0\" layoutY=\"33.0\"\r\n                           pickOnBounds=\"true\" preserveRatio=\"true\" visible=\"false\">\r\n                    <image>\r\n                        <Image url=\"@../picture/fin.jpg\"/>\r\n                    </image>\r\n                </ImageView>\r\n                <Text fx:id=\"perdu\" fill=\"#fc0000\" layoutX=\"523.0\" layoutY=\"351.0\" stroke=\"#fad4d4\" strokeType=\"OUTSIDE\"\r\n                      text=\"Le donjon s'est montré trop difficile pour vous, aventurier\" visible=\"false\">\r\n                    <font>\r\n                        <Font size=\"18.0\"/>\r\n                    </font>\r\n                </Text>\r\n            </children>\r\n        </AnchorPane>\r\n    </children>\r\n</GridPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/GUI/Dungeon.fxml b/src/main/resources/GUI/Dungeon.fxml
--- a/src/main/resources/GUI/Dungeon.fxml	(revision 4b841a6ac7ec994904e70d43068c20c59c9bd431)
+++ b/src/main/resources/GUI/Dungeon.fxml	(date 1670315628000)
@@ -2,182 +2,135 @@
 
 <?import javafx.scene.control.*?>
 <?import javafx.scene.image.*?>
-<?import javafx.scene.layout.AnchorPane?>
-<?import javafx.scene.layout.ColumnConstraints?>
-<?import javafx.scene.layout.GridPane?>
-<?import javafx.scene.layout.RowConstraints?>
+<?import javafx.scene.layout.*?>
 <?import javafx.scene.text.*?>
-<GridPane xmlns:fx="http://javafx.com/fxml/1" maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity"
-          prefHeight="533.0" prefWidth="1500.0" xmlns="http://javafx.com/javafx/19"
-          fx:controller="GUI.ControllerDungeon">
+
+<GridPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="533.0" prefWidth="1500.0" xmlns="http://javafx.com/javafx/17.0.2-ea" xmlns:fx="http://javafx.com/fxml/1" fx:controller="GUI.ControllerDungeon">
     <columnConstraints>
-        <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0"/>
+        <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0" />
     </columnConstraints>
     <rowConstraints>
-        <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES"/>
+        <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
     </rowConstraints>
     <children>
         <AnchorPane prefHeight="533.0" prefWidth="1500.0">
             <children>
                 <ImageView fx:id="fond" fitHeight="600.0" fitWidth="1600.0" pickOnBounds="true" preserveRatio="true">
                     <image>
-                        <Image url="@../picture/dungeon1/donjon.png"/>
+                        <Image url="@../picture/dungeon1/donjon.png" />
                     </image>
                 </ImageView>
-                <ImageView fx:id="ien1" fitHeight="150.0" fitWidth="200.0" layoutX="150.0" layoutY="70.0"
-                           pickOnBounds="true" preserveRatio="true" visible="false"/>
-                <ImageView fx:id="ien2" fitHeight="150.0" fitWidth="200.0" layoutX="450.0" layoutY="70.0"
-                           pickOnBounds="true" preserveRatio="true" visible="false"/>
-                <ImageView fx:id="ien3" fitHeight="150.0" fitWidth="200.0" layoutX="750.0" layoutY="70.0"
-                           pickOnBounds="true" preserveRatio="true" visible="false"/>
-                <ImageView fx:id="ien4" fitHeight="150.0" fitWidth="200.0" layoutX="1050.0" layoutY="70.0"
-                           pickOnBounds="true" preserveRatio="true" visible="false"/>
-                <ImageView fx:id="fl1" fitHeight="150.0" fitWidth="200.0" layoutX="135.0" layoutY="400.0"
-                           pickOnBounds="true" preserveRatio="true" visible="false">
+                <ImageView fx:id="ien1" fitHeight="150.0" fitWidth="200.0" layoutX="150.0" layoutY="70.0" pickOnBounds="true" preserveRatio="true" visible="false" />
+                <ImageView fx:id="ien2" fitHeight="150.0" fitWidth="200.0" layoutX="450.0" layoutY="70.0" pickOnBounds="true" preserveRatio="true" visible="false" />
+                <ImageView fx:id="ien3" fitHeight="150.0" fitWidth="200.0" layoutX="750.0" layoutY="70.0" pickOnBounds="true" preserveRatio="true" visible="false" />
+                <ImageView fx:id="ien4" fitHeight="150.0" fitWidth="200.0" layoutX="1050.0" layoutY="70.0" pickOnBounds="true" preserveRatio="true" visible="false" />
+                <ImageView fx:id="fl1" fitHeight="150.0" fitWidth="200.0" layoutX="135.0" layoutY="400.0" pickOnBounds="true" preserveRatio="true" visible="false">
                     <image>
-                        <Image url="@../picture/fleche.png"/>
+                        <Image url="@../picture/fleche.png" />
                     </image>
                 </ImageView>
-                <ImageView fx:id="fl2" fitHeight="150.0" fitWidth="200.0" layoutX="435.0" layoutY="400.0"
-                           pickOnBounds="true" preserveRatio="true" visible="false">
+                <ImageView fx:id="fl2" fitHeight="150.0" fitWidth="200.0" layoutX="435.0" layoutY="400.0" pickOnBounds="true" preserveRatio="true" visible="false">
                     <image>
-                        <Image url="@../picture/fleche.png"/>
+                        <Image url="@../picture/fleche.png" />
                     </image>
                 </ImageView>
-                <ImageView fx:id="fl3" fitHeight="150.0" fitWidth="200.0" layoutX="735.0" layoutY="400.0"
-                           pickOnBounds="true" preserveRatio="true" visible="false">
+                <ImageView fx:id="fl3" fitHeight="150.0" fitWidth="200.0" layoutX="735.0" layoutY="400.0" pickOnBounds="true" preserveRatio="true" visible="false">
                     <image>
-                        <Image url="@../picture/fleche.png"/>
+                        <Image url="@../picture/fleche.png" />
                     </image>
                 </ImageView>
-                <ImageView fx:id="fl4" fitHeight="150.0" fitWidth="200.0" layoutX="1035.0" layoutY="400.0"
-                           pickOnBounds="true" preserveRatio="true" visible="false">
+                <ImageView fx:id="fl4" fitHeight="150.0" fitWidth="200.0" layoutX="1035.0" layoutY="400.0" pickOnBounds="true" preserveRatio="true" visible="false">
                     <image>
-                        <Image url="@../picture/fleche.png"/>
+                        <Image url="@../picture/fleche.png" />
                     </image>
                 </ImageView>
                 <Label fx:id="en1" text="Label" textFill="#0e38cf" visible="false">
                     <font>
-                        <Font name="Bell MT Bold" size="13.0"/>
+                        <Font name="Bell MT Bold" size="13.0" />
                     </font>
                 </Label>
                 <Label fx:id="en2" text="Label" textFill="#0e38cf" visible="false">
                     <font>
-                        <Font size="13.0"/>
+                        <Font name="Bell MT Bold" size="13.0" />
                     </font>
                 </Label>
                 <Label fx:id="en3" text="Label" textFill="#0e38cf" visible="false">
                     <font>
-                        <Font size="13.0"/>
+                        <Font name="Bell MT Bold" size="13.0" />
                     </font>
                 </Label>
                 <Label fx:id="en4" text="Label" textFill="#0e38cf" visible="false">
                     <font>
-                        <Font size="13.0"/>
+                        <Font name="Bell MT Bold" size="13.0" />
                     </font>
                 </Label>
-                <Button fx:id="but1" layoutX="651.0" layoutY="408.0" mnemonicParsing="false" onMouseClicked="#aff"
-                        text="S'enfoncer dans la forêt">
+                <Button fx:id="but1" layoutX="651.0" layoutY="408.0" mnemonicParsing="false" onMouseClicked="#aff" text="S'enfoncer dans la forêt">
                     <font>
-                        <Font name="Bell MT" size="18.0"/>
+                        <Font name="Bell MT" size="18.0" />
                     </font>
                 </Button>
-                <ImageView fx:id="imhe1" fitHeight="150.0" fitWidth="200.0" layoutX="150.0" layoutY="250.0"
-                           pickOnBounds="true" preserveRatio="true"/>
-                <ImageView fx:id="imhe2" fitHeight="150.0" fitWidth="200.0" layoutX="450.0" layoutY="250.0"
-                           pickOnBounds="true" preserveRatio="true"/>
-                <ImageView fx:id="imhe3" fitHeight="150.0" fitWidth="200.0" layoutX="750.0" layoutY="250.0"
-                           pickOnBounds="true" preserveRatio="true"/>
-                <ImageView fx:id="imhe4" fitHeight="150.0" fitWidth="200.0" layoutX="1050.0" layoutY="250.0"
-                           pickOnBounds="true" preserveRatio="true"/>
+                <ImageView fx:id="imhe1" fitHeight="150.0" fitWidth="200.0" layoutX="150.0" layoutY="250.0" pickOnBounds="true" preserveRatio="true" />
+                <ImageView fx:id="imhe2" fitHeight="150.0" fitWidth="200.0" layoutX="450.0" layoutY="250.0" pickOnBounds="true" preserveRatio="true" />
+                <ImageView fx:id="imhe3" fitHeight="150.0" fitWidth="200.0" layoutX="750.0" layoutY="250.0" pickOnBounds="true" preserveRatio="true" />
+                <ImageView fx:id="imhe4" fitHeight="150.0" fitWidth="200.0" layoutX="1050.0" layoutY="250.0" pickOnBounds="true" preserveRatio="true" />
                 <Label fx:id="he1" layoutX="106.0" layoutY="68.0" text="Label" textFill="#9400b1" visible="false">
                     <font>
-                        <Font name="Bell MT Bold" size="13.0"/>
+                        <Font name="Bell MT" size="13.0" />
                     </font>
                 </Label>
                 <Label fx:id="he2" layoutX="134.0" layoutY="149.0" text="Label" textFill="#9400b1" visible="false">
                     <font>
-                        <Font size="13.0"/>
+                        <Font name="Bell MT Bold" size="13.0" />
                     </font>
                 </Label>
                 <Label fx:id="he3" layoutX="106.0" layoutY="233.0" text="Label" textFill="#d302fa" visible="false">
                     <font>
-                        <Font size="13.0"/>
+                        <Font name="Bell MT Bold" size="13.0" />
                     </font>
                 </Label>
                 <Label fx:id="he4" layoutX="196.0" layoutY="216.0" text="Label" textFill="#d302fa" visible="false">
                     <font>
-                        <Font size="13.0"/>
+                        <Font name="Bell MT Bold" size="13.0" />
                     </font>
                 </Label>
-                <MenuButton fx:id="menu" layoutX="1200.0" layoutY="124.0" mnemonicParsing="false" prefHeight="30.0"
-                            prefWidth="200.0" text="menu" visible="false">
+                <MenuButton fx:id="menu" layoutX="1200.0" layoutY="124.0" mnemonicParsing="false" prefHeight="30.0" prefWidth="200.0" text="menu" visible="false">
                     <items>
                         <MenuItem fx:id="Actions" mnemonicParsing="false" text="Attaques">
                             <graphic>
-                                <MenuButton mnemonicParsing="false" onMouseClicked="#selectionAtk"
-                                            text="Toutes les attaques">
+                                <MenuButton mnemonicParsing="false" onMouseClicked="#selectionAtk" text="Toutes les attaques">
                                     <items>
-                                        <MenuItem fx:id="atk1" mnemonicParsing="false" text="Coup d'épée"
-                                                  visible="false">
+                                        <MenuItem fx:id="atk1" mnemonicParsing="false" text="Coup d'épée" visible="false">
                                             <graphic>
-                                                <MenuButton fx:id="qui1" mnemonicParsing="false" onMouseClicked="#atk1"
-                                                            text="qui?">
+                                                <MenuButton fx:id="qui1" mnemonicParsing="false" onMouseClicked="#atk1" text="qui?">
                                                     <items>
-                                                        <MenuItem fx:id="Ci10" mnemonicParsing="false"
-                                                                  onAction="#cible1" text="Bone Arbalist"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci20" mnemonicParsing="false"
-                                                                  onAction="#cible2" text="Bone Courtier"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci30" mnemonicParsing="false"
-                                                                  onAction="#cible3" text="Bone Defender"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci40" mnemonicParsing="false"
-                                                                  onAction="#cible4" text="Bone soldier"
-                                                                  visible="false"/>
+                                                        <MenuItem fx:id="Ci10" mnemonicParsing="false" onAction="#cible1" text="Bone Arbalist" visible="false" />
+                                                        <MenuItem fx:id="Ci20" mnemonicParsing="false" onAction="#cible2" text="Bone Courtier" visible="false" />
+                                                        <MenuItem fx:id="Ci30" mnemonicParsing="false" onAction="#cible3" text="Bone Defender" visible="false" />
+                                                        <MenuItem fx:id="Ci40" mnemonicParsing="false" onAction="#cible4" text="Bone soldier" visible="false" />
                                                     </items>
                                                 </MenuButton>
                                             </graphic>
                                         </MenuItem>
-                                        <MenuItem fx:id="atk2" mnemonicParsing="false" text="Berserk -50%pv x2dégat"
-                                                  visible="false">
+                                        <MenuItem fx:id="atk2" mnemonicParsing="false" text="Berserk -50%pv x2dégat" visible="false">
                                             <graphic>
                                                 <MenuButton mnemonicParsing="false" onMouseClicked="#atk2" text="qui?">
                                                     <items>
-                                                        <MenuItem fx:id="Ci11" mnemonicParsing="false"
-                                                                  onAction="#cible1" text="Bone Arbalist"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci21" mnemonicParsing="false"
-                                                                  onAction="#cible2" text="Bone Courtier"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci31" mnemonicParsing="false"
-                                                                  onAction="#cible3" text="Bone Defender"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci41" mnemonicParsing="false"
-                                                                  onAction="#cible4" text="Bone soldier"
-                                                                  visible="false"/>
+                                                        <MenuItem fx:id="Ci11" mnemonicParsing="false" onAction="#cible1" text="Bone Arbalist" visible="false" />
+                                                        <MenuItem fx:id="Ci21" mnemonicParsing="false" onAction="#cible2" text="Bone Courtier" visible="false" />
+                                                        <MenuItem fx:id="Ci31" mnemonicParsing="false" onAction="#cible3" text="Bone Defender" visible="false" />
+                                                        <MenuItem fx:id="Ci41" mnemonicParsing="false" onAction="#cible4" text="Bone soldier" visible="false" />
                                                     </items>
                                                 </MenuButton>
                                             </graphic>
                                         </MenuItem>
-                                        <MenuItem fx:id="atk3" mnemonicParsing="false" text="Coup de couteau"
-                                                  visible="false">
+                                        <MenuItem fx:id="atk3" mnemonicParsing="false" text="Coup de couteau" visible="false">
                                             <graphic>
                                                 <MenuButton mnemonicParsing="false" onMouseClicked="#atk3" text="qui?">
                                                     <items>
-                                                        <MenuItem fx:id="Ci12" mnemonicParsing="false"
-                                                                  onAction="#cible1" text="Bone Arbalist"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci22" mnemonicParsing="false"
-                                                                  onAction="#cible2" text="Bone Courtier"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci32" mnemonicParsing="false"
-                                                                  onAction="#cible3" text="Bone Defender"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci42" mnemonicParsing="false"
-                                                                  onAction="#cible4" text="Bone soldier"
-                                                                  visible="false"/>
+                                                        <MenuItem fx:id="Ci12" mnemonicParsing="false" onAction="#cible1" text="Bone Arbalist" visible="false" />
+                                                        <MenuItem fx:id="Ci22" mnemonicParsing="false" onAction="#cible2" text="Bone Courtier" visible="false" />
+                                                        <MenuItem fx:id="Ci32" mnemonicParsing="false" onAction="#cible3" text="Bone Defender" visible="false" />
+                                                        <MenuItem fx:id="Ci42" mnemonicParsing="false" onAction="#cible4" text="Bone soldier" visible="false" />
                                                     </items>
                                                 </MenuButton>
                                             </graphic>
@@ -186,146 +139,89 @@
                                             <graphic>
                                                 <MenuButton mnemonicParsing="false" onMouseClicked="#atk4" text="qui?">
                                                     <items>
-                                                        <MenuItem fx:id="Ci13" mnemonicParsing="false"
-                                                                  onAction="#cible1" text="Bone Arbalist"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci23" mnemonicParsing="false"
-                                                                  onAction="#cible2" text="Bone Courtier"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci33" mnemonicParsing="false"
-                                                                  onAction="#cible3" text="Bone Defender"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci43" mnemonicParsing="false"
-                                                                  onAction="#cible4" text="Bone soldier"
-                                                                  visible="false"/>
+                                                        <MenuItem fx:id="Ci13" mnemonicParsing="false" onAction="#cible1" text="Bone Arbalist" visible="false" />
+                                                        <MenuItem fx:id="Ci23" mnemonicParsing="false" onAction="#cible2" text="Bone Courtier" visible="false" />
+                                                        <MenuItem fx:id="Ci33" mnemonicParsing="false" onAction="#cible3" text="Bone Defender" visible="false" />
+                                                        <MenuItem fx:id="Ci43" mnemonicParsing="false" onAction="#cible4" text="Bone soldier" visible="false" />
                                                     </items>
                                                 </MenuButton>
                                             </graphic>
                                         </MenuItem>
-                                        <MenuItem fx:id="pasBalle" mnemonicParsing="false" text="Plus de balle"
-                                                  visible="false"/>
-                                        <MenuItem fx:id="atk5" mnemonicParsing="false" text="Boule de feu 2mana"
-                                                  visible="false">
+                                        <MenuItem fx:id="pasBalle" mnemonicParsing="false" text="Plus de balle" visible="false" />
+                                        <MenuItem fx:id="atk5" mnemonicParsing="false" text="Boule de feu 2mana" visible="false">
                                             <graphic>
                                                 <MenuButton mnemonicParsing="false" onMouseClicked="#atk5" text="qui?">
                                                     <items>
-                                                        <MenuItem fx:id="Ci14" mnemonicParsing="false"
-                                                                  onAction="#cible1" text="Bone Arbalist"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci24" mnemonicParsing="false"
-                                                                  onAction="#cible2" text="Bone Courtier"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci34" mnemonicParsing="false"
-                                                                  onAction="#cible3" text="Bone Defender"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci44" mnemonicParsing="false"
-                                                                  onAction="#cible4" text="Bone soldier"
-                                                                  visible="false"/>
+                                                        <MenuItem fx:id="Ci14" mnemonicParsing="false" onAction="#cible1" text="Bone Arbalist" visible="false" />
+                                                        <MenuItem fx:id="Ci24" mnemonicParsing="false" onAction="#cible2" text="Bone Courtier" visible="false" />
+                                                        <MenuItem fx:id="Ci34" mnemonicParsing="false" onAction="#cible3" text="Bone Defender" visible="false" />
+                                                        <MenuItem fx:id="Ci44" mnemonicParsing="false" onAction="#cible4" text="Bone soldier" visible="false" />
                                                     </items>
                                                 </MenuButton>
                                             </graphic>
                                         </MenuItem>
-                                        <MenuItem fx:id="atk6" mnemonicParsing="false" text="Lame d'eau 2mana"
-                                                  visible="false">
+                                        <MenuItem fx:id="atk6" mnemonicParsing="false" text="Lame d'eau 2mana" visible="false">
                                             <graphic>
                                                 <MenuButton mnemonicParsing="false" onMouseClicked="#atk6" text="qui?">
                                                     <items>
-                                                        <MenuItem fx:id="Ci15" mnemonicParsing="false"
-                                                                  onAction="#cible1" text="Bone Arbalist"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci25" mnemonicParsing="false"
-                                                                  onAction="#cible2" text="Bone Courtier"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci35" mnemonicParsing="false"
-                                                                  onAction="#cible3" text="Bone Defender"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci45" mnemonicParsing="false"
-                                                                  onAction="#cible4" text="Bone soldier"
-                                                                  visible="false"/>
+                                                        <MenuItem fx:id="Ci15" mnemonicParsing="false" onAction="#cible1" text="Bone Arbalist" visible="false" />
+                                                        <MenuItem fx:id="Ci25" mnemonicParsing="false" onAction="#cible2" text="Bone Courtier" visible="false" />
+                                                        <MenuItem fx:id="Ci35" mnemonicParsing="false" onAction="#cible3" text="Bone Defender" visible="false" />
+                                                        <MenuItem fx:id="Ci45" mnemonicParsing="false" onAction="#cible4" text="Bone soldier" visible="false" />
                                                     </items>
                                                 </MenuButton>
                                             </graphic>
                                         </MenuItem>
-                                        <MenuItem fx:id="atk7" mnemonicParsing="false" text="Séisme 2mana"
-                                                  visible="false">
+                                        <MenuItem fx:id="atk7" mnemonicParsing="false" text="Séisme 2mana" visible="false">
                                             <graphic>
                                                 <MenuButton mnemonicParsing="false" onMouseClicked="#atk7" text="qui?">
                                                     <items>
-                                                        <MenuItem fx:id="Ci16" mnemonicParsing="false"
-                                                                  onAction="#cible1" text="Bone Arbalist"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci26" mnemonicParsing="false"
-                                                                  onAction="#cible2" text="Bone Courtier"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci36" mnemonicParsing="false"
-                                                                  onAction="#cible3" text="Bone Defender"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci46" mnemonicParsing="false"
-                                                                  onAction="#cible4" text="Bone soldier"
-                                                                  visible="false"/>
+                                                        <MenuItem fx:id="Ci16" mnemonicParsing="false" onAction="#cible1" text="Bone Arbalist" visible="false" />
+                                                        <MenuItem fx:id="Ci26" mnemonicParsing="false" onAction="#cible2" text="Bone Courtier" visible="false" />
+                                                        <MenuItem fx:id="Ci36" mnemonicParsing="false" onAction="#cible3" text="Bone Defender" visible="false" />
+                                                        <MenuItem fx:id="Ci46" mnemonicParsing="false" onAction="#cible4" text="Bone soldier" visible="false" />
                                                     </items>
                                                 </MenuButton>
                                             </graphic>
                                         </MenuItem>
-                                        <MenuItem fx:id="atk8" mnemonicParsing="false" text="Feuille lame 2mana"
-                                                  visible="false">
+                                        <MenuItem fx:id="atk8" mnemonicParsing="false" text="Feuille lame 2mana" visible="false">
                                             <graphic>
                                                 <MenuButton mnemonicParsing="false" onMouseClicked="#atk8" text="qui?">
                                                     <items>
-                                                        <MenuItem fx:id="Ci17" mnemonicParsing="false"
-                                                                  onAction="#cible1" text="Bone Arbalist"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci27" mnemonicParsing="false"
-                                                                  onAction="#cible2" text="Bone Courtier"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci37" mnemonicParsing="false"
-                                                                  onAction="#cible3" text="Bone Defender"
-                                                                  visible="false"/>
-                                                        <MenuItem fx:id="Ci47" mnemonicParsing="false"
-                                                                  onAction="#cible4" text="Bone soldier"
-                                                                  visible="false"/>
+                                                        <MenuItem fx:id="Ci17" mnemonicParsing="false" onAction="#cible1" text="Bone Arbalist" visible="false" />
+                                                        <MenuItem fx:id="Ci27" mnemonicParsing="false" onAction="#cible2" text="Bone Courtier" visible="false" />
+                                                        <MenuItem fx:id="Ci37" mnemonicParsing="false" onAction="#cible3" text="Bone Defender" visible="false" />
+                                                        <MenuItem fx:id="Ci47" mnemonicParsing="false" onAction="#cible4" text="Bone soldier" visible="false" />
                                                     </items>
                                                 </MenuButton>
                                             </graphic>
                                         </MenuItem>
-                                        <MenuItem fx:id="pasMana" mnemonicParsing="false" text="Pas assez de mana"
-                                                  visible="false"/>
-                                        <MenuItem fx:id="atk9" mnemonicParsing="false" text="Heal 2mana"
-                                                  visible="false">
+                                        <MenuItem fx:id="pasMana" mnemonicParsing="false" text="Pas assez de mana" visible="false" />
+                                        <MenuItem fx:id="atk9" mnemonicParsing="false" text="Heal 2mana" visible="false">
                                             <graphic>
                                                 <MenuButton mnemonicParsing="false" onMouseClicked="#atk9" text="qui?">
                                                     <items>
-                                                        <MenuItem fx:id="hero1" mnemonicParsing="false"
-                                                                  onAction="#cible1" text="hero1" visible="false"/>
-                                                        <MenuItem fx:id="hero2" mnemonicParsing="false"
-                                                                  onAction="#cible2" text="hero2" visible="false"/>
-                                                        <MenuItem fx:id="hero3" mnemonicParsing="false"
-                                                                  onAction="#cible3" text="hero3" visible="false"/>
-                                                        <MenuItem fx:id="hero4" mnemonicParsing="false"
-                                                                  onAction="#cible4" text="hero4" visible="false"/>
+                                                        <MenuItem fx:id="hero1" mnemonicParsing="false" onAction="#cible1" text="hero1" visible="false" />
+                                                        <MenuItem fx:id="hero2" mnemonicParsing="false" onAction="#cible2" text="hero2" visible="false" />
+                                                        <MenuItem fx:id="hero3" mnemonicParsing="false" onAction="#cible3" text="hero3" visible="false" />
+                                                        <MenuItem fx:id="hero4" mnemonicParsing="false" onAction="#cible4" text="hero4" visible="false" />
                                                     </items>
                                                 </MenuButton>
                                             </graphic>
                                         </MenuItem>
-                                        <MenuItem fx:id="atk10" mnemonicParsing="false" text="Ressurection 4 mana"
-                                                  visible="false">
+                                        <MenuItem fx:id="atk10" mnemonicParsing="false" text="Ressurection 4 mana" visible="false">
                                             <graphic>
                                                 <MenuButton mnemonicParsing="false" onMouseClicked="#atk10" text="qui?">
                                                     <items>
-                                                        <MenuItem fx:id="hero11" mnemonicParsing="false"
-                                                                  onAction="#cible1" text="hero1" visible="false"/>
-                                                        <MenuItem fx:id="hero21" mnemonicParsing="false"
-                                                                  onAction="#cible2" text="hero2" visible="false"/>
-                                                        <MenuItem fx:id="hero31" mnemonicParsing="false"
-                                                                  onAction="#cible3" text="hero3" visible="false"/>
-                                                        <MenuItem fx:id="hero41" mnemonicParsing="false"
-                                                                  onAction="#cible4" text="hero4" visible="false"/>
+                                                        <MenuItem fx:id="hero11" mnemonicParsing="false" onAction="#cible1" text="hero1" visible="false" />
+                                                        <MenuItem fx:id="hero21" mnemonicParsing="false" onAction="#cible2" text="hero2" visible="false" />
+                                                        <MenuItem fx:id="hero31" mnemonicParsing="false" onAction="#cible3" text="hero3" visible="false" />
+                                                        <MenuItem fx:id="hero41" mnemonicParsing="false" onAction="#cible4" text="hero4" visible="false" />
                                                     </items>
                                                 </MenuButton>
                                             </graphic>
                                         </MenuItem>
-                                        <MenuItem fx:id="atk11" mnemonicParsing="false" onAction="#soinGr"
-                                                  text="Soin de groupe 3mana soin/2" visible="false"/>
+                                        <MenuItem fx:id="atk11" mnemonicParsing="false" onAction="#soinGr" text="Soin de groupe 3mana soin/2" visible="false" />
                                     </items>
                                 </MenuButton>
                             </graphic>
@@ -334,16 +230,11 @@
                             <graphic>
                                 <MenuButton mnemonicParsing="false" onMouseClicked="#menuBoire" text="inventaire">
                                     <items>
-                                        <MenuItem fx:id="pvie" mnemonicParsing="false" onAction="#boirepv"
-                                                  text="potion de vie +50pv" visible="false"/>
-                                        <MenuItem fx:id="pdégat" mnemonicParsing="false" onAction="#boiredégat"
-                                                  text="potion de dégat +10dégat" visible="false"/>
-                                        <MenuItem fx:id="pmana" mnemonicParsing="false" onAction="#boiremana"
-                                                  text="potion de mana +10mana" visible="false"/>
-                                        <MenuItem fx:id="parmure" mnemonicParsing="false" onAction="#boirearmure"
-                                                  text="potion d'armure +10def" visible="false"/>
-                                        <MenuItem fx:id="paspot" mnemonicParsing="false"
-                                                  text="vous n'avez pas de potion" visible="false"/>
+                                        <MenuItem fx:id="pvie" mnemonicParsing="false" onAction="#boirepv" text="potion de vie +50pv" visible="false" />
+                                        <MenuItem fx:id="pdégat" mnemonicParsing="false" onAction="#boiredégat" text="potion de dégat +10dégat" visible="false" />
+                                        <MenuItem fx:id="pmana" mnemonicParsing="false" onAction="#boiremana" text="potion de mana +10mana" visible="false" />
+                                        <MenuItem fx:id="parmure" mnemonicParsing="false" onAction="#boirearmure" text="potion d'armure +10def" visible="false" />
+                                        <MenuItem fx:id="paspot" mnemonicParsing="false" text="vous n'avez pas de potion" visible="false" />
                                     </items>
                                 </MenuButton>
                             </graphic>
@@ -352,71 +243,61 @@
                             <graphic>
                                 <MenuButton mnemonicParsing="false" onMouseClicked="#menuManger" text="inventaire">
                                     <items>
-                                        <MenuItem fx:id="boeuf" mnemonicParsing="false" onAction="#manger2"
-                                                  text="boeuf +25pv" visible="false"/>
-                                        <MenuItem fx:id="repas_fait_maison" mnemonicParsing="false" onAction="#manger3"
-                                                  text="repas fait maison +50pv" visible="false"/>
-                                        <MenuItem fx:id="pasNour" mnemonicParsing="false"
-                                                  text="vous n'avez pas de nourriture" visible="false"/>
+                                        <MenuItem fx:id="boeuf" mnemonicParsing="false" onAction="#manger2" text="boeuf +25pv" visible="false" />
+                                        <MenuItem fx:id="repas_fait_maison" mnemonicParsing="false" onAction="#manger3" text="repas fait maison +50pv" visible="false" />
+                                        <MenuItem fx:id="pasNour" mnemonicParsing="false" text="vous n'avez pas de nourriture" visible="false" />
                                     </items>
                                 </MenuButton>
                             </graphic>
                         </MenuItem>
-                        <MenuItem mnemonicParsing="false" onAction="#passer" text="passer son tour"/>
+                        <MenuItem mnemonicParsing="false" onAction="#passer" text="passer son tour" />
                     </items>
                 </MenuButton>
-                <Label fx:id="textdégat" layoutX="1364.0" layoutY="292.0" text="Label" textFill="#fa0606"
-                       visible="false">
+                <Label fx:id="textdégat" layoutX="1364.0" layoutY="292.0" text="Label" textFill="#fa0606" visible="false">
                     <font>
-                        <Font size="16.0"/>
+                        <Font size="16.0" />
                     </font>
                 </Label>
-                <Label fx:id="textdégatrecu" layoutX="936.0" layoutY="311.0" text="Label" textFill="#ffa000"
-                       visible="false">
+                <Label fx:id="textdégatrecu" layoutX="936.0" layoutY="311.0" text="Label" textFill="#ffa000" visible="false">
                     <font>
-                        <Font size="16.0"/>
+                        <Font size="16.0" />
                     </font>
                 </Label>
-                <Button fx:id="rec" layoutX="709.0" layoutY="266.0" mnemonicParsing="false" onMouseClicked="#Rec"
-                        text="recompense" visible="false"/>
-                <Button fx:id="recarme" layoutX="150.0" layoutY="150.0" mnemonicParsing="false" onMouseClicked="#rarme"
-                        text="arme" visible="false"/>
-                <Button fx:id="recchance" layoutX="150.0" layoutY="200.0" mnemonicParsing="false"
-                        onMouseClicked="#rchance" text="chance" visible="false"/>
-                <Button fx:id="recdef" layoutX="150.0" layoutY="250.0" mnemonicParsing="false" onMouseClicked="#rdef"
-                        text="def" visible="false"/>
-                <Button fx:id="recnour" layoutX="150.0" layoutY="300.0" mnemonicParsing="false" onMouseClicked="#rnour"
-                        text="nourriture" visible="false"/>
-                <Button fx:id="recmana" layoutX="150.0" layoutY="400.0" mnemonicParsing="false" onMouseClicked="#rmana"
-                        text="mana" visible="false"/>
-                <MenuButton fx:id="recpotion" layoutX="150.0" layoutY="350.0" mnemonicParsing="false" text="potion"
-                            visible="false">
+                <Button fx:id="rec" layoutX="709.0" layoutY="266.0" mnemonicParsing="false" onMouseClicked="#Rec" text="recompense" visible="false" />
+                <Button fx:id="recarme" layoutX="150.0" layoutY="150.0" mnemonicParsing="false" onMouseClicked="#rarme" text="arme" visible="false" />
+                <Button fx:id="recchance" layoutX="150.0" layoutY="200.0" mnemonicParsing="false" onMouseClicked="#rchance" text="chance" visible="false" />
+                <Button fx:id="recdef" layoutX="150.0" layoutY="250.0" mnemonicParsing="false" onMouseClicked="#rdef" text="def" visible="false" />
+                <Button fx:id="recnour" layoutX="150.0" layoutY="300.0" mnemonicParsing="false" onMouseClicked="#rnour" text="nourriture" visible="false" />
+                <Button fx:id="recmana" layoutX="150.0" layoutY="400.0" mnemonicParsing="false" onMouseClicked="#rmana" text="mana" visible="false" />
+                <MenuButton fx:id="recpotion" layoutX="150.0" layoutY="350.0" mnemonicParsing="false" text="potion" visible="false">
                     <items>
-                        <MenuItem mnemonicParsing="false" onAction="#rpot1" text="potion de mana"/>
-                        <MenuItem mnemonicParsing="false" onAction="#rpot2" text="porion de vie"/>
-                        <MenuItem mnemonicParsing="false" onAction="#rpot3" text="potion de def"/>
-                        <MenuItem mnemonicParsing="false" onAction="#rpot4" text="potion de dégat"/>
+                        <MenuItem mnemonicParsing="false" onAction="#rpot1" text="potion de mana" />
+                        <MenuItem mnemonicParsing="false" onAction="#rpot2" text="porion de vie" />
+                        <MenuItem mnemonicParsing="false" onAction="#rpot3" text="potion de def" />
+                        <MenuItem mnemonicParsing="false" onAction="#rpot4" text="potion de dégat" />
                     </items>
                 </MenuButton>
                 <Label fx:id="reclabel" layoutX="236.0" layoutY="115.0" text="rec" textFill="RED" visible="false">
                     <font>
-                        <Font size="18.0"/>
+                        <Font size="18.0" />
                     </font>
                 </Label>
-                <Button fx:id="sortir" layoutX="150.0" layoutY="150.0" mnemonicParsing="false" onMouseClicked="#sortir"
-                        text="sortir de la forêt" visible="false"/>
-                <ImageView fx:id="end" fitHeight="600.0" fitWidth="1600.0" layoutX="-1.0" layoutY="33.0"
-                           pickOnBounds="true" preserveRatio="true" visible="false">
+                <Button fx:id="sortir" layoutX="150.0" layoutY="150.0" mnemonicParsing="false" onMouseClicked="#sortir" text="sortir de la forêt" visible="false" />
+                <ImageView fx:id="end" fitHeight="600.0" fitWidth="1600.0" layoutX="-1.0" layoutY="33.0" pickOnBounds="true" preserveRatio="true" visible="false">
                     <image>
-                        <Image url="@../picture/fin.jpg"/>
+                        <Image url="@../picture/fin.jpg" />
                     </image>
                 </ImageView>
-                <Text fx:id="perdu" fill="#fc0000" layoutX="523.0" layoutY="351.0" stroke="#fad4d4" strokeType="OUTSIDE"
-                      text="Le donjon s'est montré trop difficile pour vous, aventurier" visible="false">
+                <Text fx:id="perdu" fill="#fc0000" layoutX="523.0" layoutY="351.0" stroke="#fad4d4" strokeType="OUTSIDE" text="Le donjon s'est montré trop difficile pour vous, aventurier" visible="false">
                     <font>
-                        <Font size="18.0"/>
+                        <Font size="18.0" />
                     </font>
                 </Text>
+            <ImageView fx:id="faiblesse" fitHeight="150.0" fitWidth="200.0" layoutX="10.0" layoutY="450.0" pickOnBounds="true" preserveRatio="true" visible="false">
+               <image>
+                  <Image url="@../picture/faiblesse.png" />
+               </image>
+            </ImageView>
             </children>
         </AnchorPane>
     </children>
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n\r\n    <groupId>com.example</groupId>\r\n    <artifactId>demo</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n    <name>demo</name>\r\n\r\n    <properties>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n        <junit.version>5.8.2</junit.version>\r\n    </properties>\r\n\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-controls</artifactId>\r\n            <version>19-ea+7</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.openjfx</groupId>\r\n            <artifactId>javafx-fxml</artifactId>\r\n            <version>19-ea+7</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.junit.jupiter</groupId>\r\n            <artifactId>junit-jupiter-api</artifactId>\r\n            <version>${junit.version}</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.junit.jupiter</groupId>\r\n            <artifactId>junit-jupiter-engine</artifactId>\r\n            <version>${junit.version}</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <version>1.18.22</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-compiler-plugin</artifactId>\r\n                <version>3.10.1</version>\r\n                <configuration>\r\n                    <source>19</source>\r\n                    <target>19</target>\r\n                </configuration>\r\n            </plugin>\r\n            <plugin>\r\n                <groupId>org.openjfx</groupId>\r\n                <artifactId>javafx-maven-plugin</artifactId>\r\n                <version>0.0.8</version>\r\n                <executions>\r\n                    <execution>\r\n                        <!-- Default configuration for running with: mvn clean javafx:run -->\r\n                        <id>default-cli</id>\r\n                        <configuration>\r\n                            <mainClass>com.example.demo/GUI.HelloApplication</mainClass>\r\n                            <launcher>app</launcher>\r\n                            <jlinkZipName>app</jlinkZipName>\r\n                            <jlinkImageName>app</jlinkImageName>\r\n                            <noManPages>true</noManPages>\r\n                            <stripDebug>true</stripDebug>\r\n                            <noHeaderFiles>true</noHeaderFiles>\r\n                        </configuration>\r\n                    </execution>\r\n                </executions>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision 4b841a6ac7ec994904e70d43068c20c59c9bd431)
+++ b/pom.xml	(date 1670862994845)
@@ -44,6 +44,11 @@
             <version>1.18.22</version>
             <scope>compile</scope>
         </dependency>
+        <dependency>
+            <groupId>org.openjfx</groupId>
+            <artifactId>javafx-media</artifactId>
+            <version>19-ea+7</version>
+        </dependency>
     </dependencies>
 
     <build>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ad1b186f-6324-4ce3-90e3-d61e1f7f8aca\" name=\"Changes\" comment=\"2nd\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/picture/dungeon1/Bone_Arbalist.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/picture/dungeon1/Bone_Courtier.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/picture/dungeon1/Bone_Defender.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/picture/dungeon1/Bone_Solider.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/picture/start.png\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/resources/picture/taverne.jpg\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/GUI/ControllerChangeScene.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/GUI/ControllerTaverne.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/GUI/ControllerTaverne.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/GUI/Core.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/GUI/Core.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/GUI/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/GUI/Gui.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Combattant.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Combattant.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Enemy.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Enemy.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Hero/Hero.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Hero/Hero.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Hero/cc_distance/Hunter.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Hero/cc_distance/Hunter.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Hero/cc_distance/Warrior.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Hero/cc_distance/Warrior.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Hero/cc_distance/sorcier/Healer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Hero/cc_distance/sorcier/Healer.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Hero/cc_distance/sorcier/Mage.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Hero/cc_distance/sorcier/Mage.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/jeu_console/Game.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/jeu_console/Game.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/jeu_console/Item/arme_potion/Weapon.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/jeu_console/Item/arme_potion/Weapon.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/jeu_console/Item/arme_potion/conso/Food.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/jeu_console/Item/arme_potion/conso/Food.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/jeu_console/Item/arme_potion/conso/Potion.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/jeu_console/Item/arme_potion/conso/Potion.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/jeu_console/Item/arme_potion/consommable.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/jeu_console/Item/arme_potion/consommable.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/jeu_console/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/jeu_console/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/jeu_console/Menu.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/jeu_console/Menu.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/jeu_console/Récompense.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/jeu_console/Récompense.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/GUI/Start.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/GUI/Start.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/GUI/Taverne.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/GUI/Taverne.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/picture/fond brique.png\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/picture/taverne.png\" beforeDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2HP1gkdEIFDXJNpOt1WYs1djiIM\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"last_opened_file_path\": \"C:/Users/hltro/Desktop/java/Hulot Robin rpg 3000\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"settings.editor.selected.configurable\": \"reference.settings.ide.settings.uml\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\hltro\\Desktop\\java\\RPG_3001\\src\\main\\java\\GUI\\asset\" />\r\n      <recent name=\"C:\\Users\\hltro\\Desktop\\java\\demo\\src\\main\\java\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\hltro\\Desktop\\java\\RPG_3000-master\\src\\main\\resources\\picture\\dungeon2\" />\r\n      <recent name=\"C:\\Users\\hltro\\Desktop\\java\\RPG_3000-master\\src\\main\\resources\\picture\\dungeon1\" />\r\n      <recent name=\"D:\\Users\\robin\\Desktop\\RPG_3000-master\\src\\main\\resources\\picture\" />\r\n      <recent name=\"C:\\Users\\hltro\\Desktop\\java\\RPG_3000-master\\src\\main\\resources\\picture\" />\r\n      <recent name=\"C:\\Users\\hltro\\Desktop\\java\\RPG_3000-master\\src\\main\\resources\\GUI\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"com\" />\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"GUI\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"Gui\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"GUI.Gui\" />\r\n      <module name=\"RPG_3000-master\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"GUI.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"HelloApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"GUI.HelloApplication\" />\r\n      <module name=\"demo\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"GUI.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"jeu_console.Main\" />\r\n      <module name=\"RPG_3000-master\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"jeu_console.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.Gui\" />\r\n        <item itemvalue=\"Application.HelloApplication\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ad1b186f-6324-4ce3-90e3-d61e1f7f8aca\" name=\"Changes\" comment=\"\" />\r\n      <created>1668172020318</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1668172020318</updated>\r\n      <workItem from=\"1668172021536\" duration=\"659000\" />\r\n      <workItem from=\"1668172829159\" duration=\"5816000\" />\r\n      <workItem from=\"1668381333086\" duration=\"696000\" />\r\n      <workItem from=\"1668529244542\" duration=\"433000\" />\r\n      <workItem from=\"1668529712296\" duration=\"453000\" />\r\n      <workItem from=\"1668530247397\" duration=\"74000\" />\r\n      <workItem from=\"1668697611638\" duration=\"5192000\" />\r\n      <workItem from=\"1668979449709\" duration=\"316000\" />\r\n      <workItem from=\"1669020927497\" duration=\"2204000\" />\r\n      <workItem from=\"1669102021154\" duration=\"245000\" />\r\n      <workItem from=\"1669102347053\" duration=\"4755000\" />\r\n      <workItem from=\"1669289494608\" duration=\"21759000\" />\r\n      <workItem from=\"1669320323517\" duration=\"42000\" />\r\n      <workItem from=\"1669380314811\" duration=\"6284000\" />\r\n      <workItem from=\"1669458386060\" duration=\"647000\" />\r\n      <workItem from=\"1669465348637\" duration=\"679000\" />\r\n      <workItem from=\"1669471134420\" duration=\"21319000\" />\r\n      <workItem from=\"1669545500536\" duration=\"11255000\" />\r\n      <workItem from=\"1669622605566\" duration=\"9282000\" />\r\n      <workItem from=\"1669640818863\" duration=\"6023000\" />\r\n      <workItem from=\"1669659763929\" duration=\"9833000\" />\r\n      <workItem from=\"1669706878866\" duration=\"7090000\" />\r\n      <workItem from=\"1669728341765\" duration=\"10051000\" />\r\n      <workItem from=\"1669836173052\" duration=\"3679000\" />\r\n      <workItem from=\"1669839862630\" duration=\"4494000\" />\r\n      <workItem from=\"1669844408901\" duration=\"18000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"2nd\">\r\n      <created>1668172244418</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668172244418</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"2nd\">\r\n      <created>1668172441319</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668172441319</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"2nd\">\r\n      <created>1668172915033</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668172915033</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"2nd\">\r\n      <created>1668173300773</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668173300773</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"2nd\">\r\n      <created>1668178642503</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668178642503</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"2nd\">\r\n      <created>1668381354940</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668381354940</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"2nd\">\r\n      <created>1668382021915</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668382021915</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"2nd\">\r\n      <created>1669103420362</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1669103420362</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"2nd\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"2nd\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/RPG_3000_master$GUI_Main.ic\" NAME=\"GUI.Main Coverage Results\" MODIFIED=\"1669102177604\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>GUI.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 4b841a6ac7ec994904e70d43068c20c59c9bd431)
+++ b/.idea/workspace.xml	(date 1670873541349)
@@ -5,37 +5,18 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="ad1b186f-6324-4ce3-90e3-d61e1f7f8aca" name="Changes" comment="2nd">
-      <change afterPath="$PROJECT_DIR$/src/main/resources/picture/dungeon1/Bone_Arbalist.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/resources/picture/dungeon1/Bone_Courtier.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/resources/picture/dungeon1/Bone_Defender.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/resources/picture/dungeon1/Bone_Solider.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/resources/picture/start.png" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/main/resources/picture/taverne.jpg" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/GUI/ControllerChangeScene.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/GUI/ControllerDungeon.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/GUI/ControllerDungeon.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/GUI/ControllerStart.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/GUI/ControllerStart.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/GUI/ControllerTaverne.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/GUI/ControllerTaverne.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/GUI/Core.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/GUI/Core.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/GUI/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/GUI/Gui.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/GUI/Gui.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/GUI/Gui.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Combattant.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Combattant.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Enemy.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Enemy.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Hero/Hero.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Hero/Hero.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Hero/cc_distance/Hunter.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Hero/cc_distance/Hunter.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Hero/cc_distance/Warrior.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Hero/cc_distance/Warrior.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Hero/cc_distance/sorcier/Healer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Hero/cc_distance/sorcier/Healer.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Hero/cc_distance/sorcier/Mage.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/jeu_console/Combattant/Hero/cc_distance/sorcier/Mage.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/jeu_console/Game.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/jeu_console/Game.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/jeu_console/Item/arme_potion/Weapon.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/jeu_console/Item/arme_potion/Weapon.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/jeu_console/Item/arme_potion/conso/Food.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/jeu_console/Item/arme_potion/conso/Food.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/jeu_console/Item/arme_potion/conso/Potion.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/jeu_console/Item/arme_potion/conso/Potion.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/jeu_console/Item/arme_potion/consommable.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/jeu_console/Item/arme_potion/consommable.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/jeu_console/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/jeu_console/Main.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/jeu_console/Menu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/jeu_console/Menu.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/jeu_console/Récompense.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/jeu_console/Récompense.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/GUI/Start.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/GUI/Start.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/GUI/Taverne.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/GUI/Taverne.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/picture/fond brique.png" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/picture/taverne.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/module-info.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/module-info.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/GUI/Dungeon.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/GUI/Dungeon.fxml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -70,31 +51,32 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "last_opened_file_path": "C:/Users/hltro/Desktop/java/Hulot Robin rpg 3000",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "settings.editor.selected.configurable": "reference.settings.ide.settings.uml"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;last_opened_file_path&quot;: &quot;D:/Users/robin/Desktop/rpg/AES&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.rainbow.brackets&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\Users\hltro\Desktop\java\RPG_3001\src\main\java\GUI\asset" />
       <recent name="C:\Users\hltro\Desktop\java\demo\src\main\java" />
     </key>
     <key name="MoveFile.RECENT_KEYS">
+      <recent name="D:\Users\robin\Desktop\Hulot-Robin-rpg-3000-main\src\main\resources\picture" />
       <recent name="C:\Users\hltro\Desktop\java\RPG_3000-master\src\main\resources\picture\dungeon2" />
       <recent name="C:\Users\hltro\Desktop\java\RPG_3000-master\src\main\resources\picture\dungeon1" />
       <recent name="D:\Users\robin\Desktop\RPG_3000-master\src\main\resources\picture" />
       <recent name="C:\Users\hltro\Desktop\java\RPG_3000-master\src\main\resources\picture" />
-      <recent name="C:\Users\hltro\Desktop\java\RPG_3000-master\src\main\resources\GUI" />
     </key>
     <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
       <recent name="com" />
@@ -104,10 +86,10 @@
       <recent name="GUI" />
     </key>
   </component>
-  <component name="RunManager" selected="Application.Main">
+  <component name="RunManager" selected="Application.Gui">
     <configuration name="Gui" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="GUI.Gui" />
-      <module name="RPG_3000-master" />
+      <module name="Hulot-Robin-rpg-3000-main" />
       <extension name="coverage">
         <pattern>
           <option name="PATTERN" value="GUI.*" />
@@ -133,7 +115,7 @@
     </configuration>
     <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="jeu_console.Main" />
-      <module name="RPG_3000-master" />
+      <module name="Hulot-Robin-rpg-3000-main" />
       <extension name="coverage">
         <pattern>
           <option name="PATTERN" value="jeu_console.*" />
@@ -146,8 +128,8 @@
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="Application.Main" />
         <item itemvalue="Application.Gui" />
+        <item itemvalue="Application.Main" />
         <item itemvalue="Application.HelloApplication" />
       </list>
     </recent_temporary>
@@ -186,6 +168,16 @@
       <workItem from="1669836173052" duration="3679000" />
       <workItem from="1669839862630" duration="4494000" />
       <workItem from="1669844408901" duration="18000" />
+      <workItem from="1669893645445" duration="546000" />
+      <workItem from="1669966204398" duration="5589000" />
+      <workItem from="1670314229169" duration="2516000" />
+      <workItem from="1670330854501" duration="20000" />
+      <workItem from="1670572235165" duration="1117000" />
+      <workItem from="1670573426668" duration="711000" />
+      <workItem from="1670574179157" duration="184000" />
+      <workItem from="1670574411078" duration="133000" />
+      <workItem from="1670862104507" duration="2537000" />
+      <workItem from="1670865411422" duration="4046000" />
     </task>
     <task id="LOCAL-00001" summary="2nd">
       <created>1668172244418</created>
Index: src/main/java/jeu_console/Combattant/Combattant.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package jeu_console.Combattant;\r\n\r\nimport lombok.EqualsAndHashCode;\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\nimport lombok.ToString;\r\n\r\nimport static java.lang.Math.round;\r\n\r\n@EqualsAndHashCode\r\n@ToString\r\n\r\n@Getter\r\n@Setter\r\n\r\npublic class Combattant {\r\n\r\n    private double health;\r\n    private double current_health;\r\n    private int degat_fond;\r\n    private int degat_base;\r\n    private int soin_base;\r\n    private int def;\r\n    private int current_def;\r\n    private int nbfleche;\r\n    private int magie;\r\n    private int current_magie;\r\n    private String type;\r\n    private int chance;\r\n\r\n    public static void receiveDamage(double[] tab_degat, Combattant cible) {\r\n        double receiveDamage = 0;\r\n        receiveDamage += tab_degat[0] * (double) (100 - cible.getCurrent_def()) / 100; //base de dégat pur qui sont affecté par la défense\r\n\r\n        if (cible.getType().equals(\"feu\")) {\r\n\r\n            receiveDamage += tab_degat[1] * 1; //faiblesse et résistance en fonction des dégat élémentaire\r\n            receiveDamage += tab_degat[2] * 1.5;\r\n            receiveDamage += tab_degat[3] * 0.5;\r\n            receiveDamage += tab_degat[4] * 1;\r\n        }\r\n\r\n        if (cible.getType().equals(\"feuille\")) {\r\n\r\n            receiveDamage += tab_degat[1] * 1.5;\r\n            receiveDamage += tab_degat[2] * 1;\r\n            receiveDamage += tab_degat[3] * 1;\r\n            receiveDamage += tab_degat[4] * 0.5;\r\n        }\r\n\r\n        if (cible.getType().equals(\"eau\")) {\r\n\r\n            receiveDamage += tab_degat[1] * 0.5;\r\n            receiveDamage += tab_degat[2] * 1;\r\n            receiveDamage += tab_degat[3] * 1;\r\n            receiveDamage += tab_degat[4] * 1.5;\r\n        }\r\n\r\n        if (cible.getType().equals(\"terre\")) {\r\n\r\n            receiveDamage += tab_degat[1] * 1;\r\n            receiveDamage += tab_degat[2] * 0.5;\r\n            receiveDamage += tab_degat[3] * 1.5;\r\n            receiveDamage += tab_degat[4] * 1;\r\n\r\n        }\r\n        System.out.println(round(receiveDamage) + \" dégats infligés \");\r\n        cible.setCurrent_health(round(cible.getCurrent_health() - receiveDamage));\r\n    } //méthode pour recevoire des dégats\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/jeu_console/Combattant/Combattant.java b/src/main/java/jeu_console/Combattant/Combattant.java
--- a/src/main/java/jeu_console/Combattant/Combattant.java	(revision 4b841a6ac7ec994904e70d43068c20c59c9bd431)
+++ b/src/main/java/jeu_console/Combattant/Combattant.java	(date 1670318696000)
@@ -35,14 +35,14 @@
         if (cible.getType().equals("feu")) {
 
             receiveDamage += tab_degat[1] * 1; //faiblesse et résistance en fonction des dégat élémentaire
-            receiveDamage += tab_degat[2] * 1.5;
+            receiveDamage += tab_degat[2] * 2;
             receiveDamage += tab_degat[3] * 0.5;
             receiveDamage += tab_degat[4] * 1;
         }
 
         if (cible.getType().equals("feuille")) {
 
-            receiveDamage += tab_degat[1] * 1.5;
+            receiveDamage += tab_degat[1] * 2;
             receiveDamage += tab_degat[2] * 1;
             receiveDamage += tab_degat[3] * 1;
             receiveDamage += tab_degat[4] * 0.5;
@@ -53,14 +53,14 @@
             receiveDamage += tab_degat[1] * 0.5;
             receiveDamage += tab_degat[2] * 1;
             receiveDamage += tab_degat[3] * 1;
-            receiveDamage += tab_degat[4] * 1.5;
+            receiveDamage += tab_degat[4] * 2;
         }
 
         if (cible.getType().equals("terre")) {
 
             receiveDamage += tab_degat[1] * 1;
             receiveDamage += tab_degat[2] * 0.5;
-            receiveDamage += tab_degat[3] * 1.5;
+            receiveDamage += tab_degat[3] * 2;
             receiveDamage += tab_degat[4] * 1;
 
         }
